[{"name":"experimental_oom_more_eagerly_threshold","short":"","type":"integer","default":"default: \"100\"","description":"    If this flag is set to a value less than 100, Bazel will OOM if, after two \n    full GC's, more than this percentage of the (old gen) heap is still \n    occupied.\n","tags":["host_machine_resource_optimizations"],"sources":[]},{"name":"debug_depset_depth","short":"","type":"boolean","default":"default: \"false\"","description":"    Enables an expensive additional check that causes depset construction to \n    fail fast if the depset's depth would exceed the limit specified by `--\n    nested_set_depth_limit`. Ordinarily this failure occurs only when the \n    depset is flattened, which may be far from its point of creation.\n","tags":["build_file_semantics"],"sources":[]},{"name":"experimental_action_args","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, Action objects support an `args` field: a frozen Args \n    object which contains all action arguments.\n","tags":["bazel_internal_configuration","experimental"],"sources":[]},{"name":"experimental_allow_incremental_repository_updates","short":"","type":"boolean","default":"default: \"true\"","description":"    This flag will be removed in Bazel 1.0. Please do not use it.\n    Incremental repository updates feature is now enabled without the flag.\n","tags":["bazel_internal_configuration","experimental"],"sources":[]},{"name":"experimental_allow_tags_propagation","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, tags will be propagated from a target to the actions' \n    execution requirements; otherwise tags are not propagated. See https:\n    //github.com/bazelbuild/bazel/issues/8830 for details.\n","tags":["build_file_semantics","experimental"],"sources":[]},{"name":"experimental_aspect_output_propagation","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, allows Starlark aspects to be defined with \n    `apply_to_generating_rules`, which will enable them to propagate through \n    output file target nodes.\n","tags":["loading_and_analysis","experimental"],"sources":[]},{"name":"experimental_cc_shared_library","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, rule attributes and Starlark API methods needed for the \n    rule cc_shared_library will be available\n","tags":["build_file_semantics","loading_and_analysis","experimental"],"sources":[]},{"name":"experimental_enable_android_migration_apis","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, enables the APIs required to support the Android Starlark \n    migration.\n","tags":["build_file_semantics"],"sources":[]},{"name":"experimental_google_legacy_api","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, exposes a number of experimental pieces of Starlark build \n    API pertaining to Google legacy code.\n","tags":["loading_and_analysis","experimental"],"sources":[]},{"name":"experimental_platforms_api","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, enables a number of platform-related Starlark APIs useful \n    for debugging.\n","tags":["loading_and_analysis","experimental"],"sources":[]},{"name":"experimental_repo_remote_exec","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, repository_rule gains some remote execution capabilities.\n","tags":["build_file_semantics","loading_and_analysis","experimental"],"sources":[]},{"name":"experimental_starlark_config_transitions","short":"","type":"boolean","default":"default: \"true\"","description":"    If set to true, enables creation of configuration transition objects (the \n    `transition()` function) in Starlark.\n","tags":["loading_and_analysis","experimental"],"sources":[]},{"name":"experimental_starlark_unused_inputs_list","short":"","type":"boolean","default":"default: \"true\"","description":"    If set to true, enables use of 'unused_inputs_list' in starlark action.\n    run().\n","tags":["changes_inputs","experimental"],"sources":[]},{"name":"incompatible_always_check_depset_elements","short":"","type":"boolean","default":"default: \"false\"","description":"    Check the validity of elements added to depsets, in all constructors. \n    Elements must be immutable, but historically the depset(direct=...) \n    constructor forgot to check. Use tuples instead of lists in depset \n    elements. See https://github.com/bazelbuild/bazel/issues/10313 for details.\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_bzl_disallow_load_after_statement","short":"","type":"boolean","default":"default: \"true\"","description":"    If set to true, all `load` must be called at the top of .bzl files, before \n    any other statement.\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_depset_for_libraries_to_link_getter","short":"","type":"boolean","default":"default: \"true\"","description":"    When true, Bazel no longer returns a list from linking_context.\n    libraries_to_link but returns a depset instead.\n","tags":["loading_and_analysis","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_depset_union","short":"","type":"boolean","default":"default: \"true\"","description":"    If set to true, depset union using `+`, `|` or `.union` are forbidden. Use \n    the `depset` constructor instead.\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_disable_deprecated_attr_params","short":"","type":"boolean","default":"default: \"true\"","description":"    If set to true, disable the deprecated parameters 'single_file' and \n    'non_empty' on attribute definition methods, such as attr.label().\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_disable_depset_items","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, disable the 'items' parameter of the depset constructor. \n    Use the 'transitive' and 'direct' parameters instead.\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_disable_target_provider_fields","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, disable the ability to access providers on 'target' objects \n    via field syntax. Use provider-key syntax instead. For example, instead of \n    using `ctx.attr.dep.my_info` to access `my_info` from inside a rule \n    implementation function, use `ctx.attr.dep[MyInfo]`. See https://github.\n    com/bazelbuild/bazel/issues/9014 for details.\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_disable_third_party_license_checking","short":"","type":"boolean","default":"default: \"true\"","description":"    If true, disables all license checking logic\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_disallow_dict_lookup_unhashable_keys","short":"","type":"boolean","default":"default: \"true\"","description":"    If set to true, dict key lookups using `in` or `dict.get` will fail with \n    unhashable types.\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_disallow_empty_glob","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, the default value of the `allow_empty` argument of glob() \n    is False.\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_disallow_legacy_javainfo","short":"","type":"boolean","default":"default: \"true\"","description":"    Deprecated. No-op.\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_disallow_struct_provider_syntax","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, rule implementation functions may not return a struct. They \n    must instead return a list of provider instances.\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_disallow_unverified_http_downloads","short":"","type":"boolean","default":"default: \"true\"","description":"    If set, disallow downloads via plain http if no checksum is given\n","tags":["loading_and_analysis","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_new_actions_api","short":"","type":"boolean","default":"default: \"true\"","description":"    If set to true, the API to create actions is only available on `ctx.\n    actions`, not on `ctx`.\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_no_attr_license","short":"","type":"boolean","default":"default: \"true\"","description":"    If set to true, disables the function `attr.license`.\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_no_implicit_file_export","short":"","type":"boolean","default":"default: \"false\"","description":"    If set, (used) source files are are package private unless exported \n    explicitly. See https://github.\n    com/bazelbuild/proposals/blob/master/designs/2019-10-24-file-visibility.md\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_no_output_attr_default","short":"","type":"boolean","default":"default: \"true\"","description":"    If set to true, disables the `default` parameter of the `attr.output` and \n    `attr.output_list` attribute definition functions.\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_no_rule_outputs_param","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, disables the `outputs` parameter of the `rule()` Starlark \n    function.\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_no_support_tools_in_action_inputs","short":"","type":"boolean","default":"default: \"true\"","description":"    If set to true, tools should be passed to `ctx.actions.run()` and `ctx.\n    actions.run_shell()` using the `tools` parameter instead of the `inputs` \n    parameter. Furthermore, if this flag is set and a `tools` parameter is not \n    passed to the action, it is an error for any tools to appear in the \n    `inputs`.\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_no_target_output_group","short":"","type":"boolean","default":"default: \"true\"","description":"    If set to true, disables the output_group field of the 'Target' Starlark \n    type.\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_remap_main_repo","short":"","type":"boolean","default":"default: \"true\"","description":"    If set to true, will treat references to '@\u003cmain repo name\u003e' the same as \n    '@'.\n","tags":["loading_and_analysis","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_remove_enabled_toolchain_types","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, the platform configuration fragment cannot access the \n    (deprecated) list of enabled toolchain types.\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_restrict_named_params","short":"","type":"boolean","default":"default: \"true\"","description":"    If set to true, restricts a number of Starlark built-in function parameters \n    to be only specifiable positionally (and not by keyword).\n","tags":["loading_and_analysis","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_restrict_string_escapes","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, unknown string escapes like `\\a` become rejected.\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_run_shell_command_string","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, the command parameter of actions.run_shell will only accept \n    string\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_use_cc_configure_from_rules_cc","short":"","type":"boolean","default":"default: \"false\"","description":"    When true, Bazel will no longer allow using cc_configure from @bazel_tools. \n    Please see https://github.com/bazelbuild/bazel/issues/10134 for details and \n    migration instructions.\n","tags":["loading_and_analysis","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_visibility_private_attributes_at_definition","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, the visibility of private rule attributes is checked with \n    respect to the rule definition, rather than the rule usage.\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"nested_set_depth_limit","short":"","type":"integer","default":"default: \"3500\"","description":"    Limit on the depth of NestedSet, which is the internal data structure used \n    to implement `depset` in Starlark. If a depset is flattened during \n    evaluation of Starlark code or a NestedSet is flattened internally, and \n    that data structure has a depth exceeding this limit, then the Bazel \n    invocation will fail.\n","tags":["loading_and_analysis"],"sources":[]},{"name":"incompatible_do_not_split_linking_cmdline","short":"","type":"boolean","default":"default: \"true\"","description":"    When true, Bazel no longer modifies command line flags used for linking, \n    and also doesn't selectively decide which flags go to the param file and \n    which don't.  See https://github.com/bazelbuild/bazel/issues/7670 for \n    details.\n","tags":["loading_and_analysis","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"keep_state_after_build","short":"","type":"boolean","default":"default: \"true\"","description":"    If false, Blaze will discard the inmemory state from this build when the \n    build finishes. Subsequent builds will not have any incrementality with \n    respect to this one.\n","tags":["loses_incremental_state"],"sources":[]},{"name":"track_incremental_state","short":"","type":"boolean","default":"default: \"true\"","description":"    If false, Blaze will not persist data that allows for invalidation and re-\n    evaluation on incremental builds in order to save memory on this build. \n    Subsequent builds will not have any incrementality with respect to this \n    one. Usually you will want to specify --batch when setting this to false.\n","tags":["loses_incremental_state"],"sources":[]},{"name":"announce_rc","short":"","type":"boolean","default":"default: \"false\"","description":"    Whether to announce rc options.\n","tags":["affects_outputs"],"sources":[]},{"name":"attempt_to_print_relative_paths","short":"","type":"boolean","default":"default: \"false\"","description":"    When printing the location part of messages, attempt to use a path relative \n    to the workspace directory or one of the directories specified by --\n    package_path.\n","tags":["terminal_output"],"sources":[]},{"name":"bes_backend","short":"","type":"string","default":"default: \"\"","description":"    Specifies the build event service (BES) backend endpoint as HOST or HOST:\n    PORT. Disabled by default.The supported schemas are grpc and grpcs (grpc \n    with TLS enabled). If no schema is provided bazel'll default to grpcs. \n    Specify grpc:// schema to disable TLS.\n","tags":["affects_outputs"],"sources":[]},{"name":"bes_best_effort","short":"","type":"boolean","default":"default: \"false\"","description":"    BES best effort upload has been removed. The flag has no more functionality \n    attached to it and will be removed in a future release.\n","tags":["affects_outputs"],"sources":[]},{"name":"bes_keywords","short":"","type":"comma-separated list of options","default":"may be used multiple times","description":"    Specifies a list of notification keywords to be added the default set of \n    keywords published to BES (\"command_name=\u003ccommand_name\u003e \", \n    \"protocol_name=BEP\"). Defaults to none.\n","tags":["affects_outputs"],"sources":[]},{"name":"bes_lifecycle_events","short":"","type":"boolean","default":"default: \"true\"","description":"    Specifies whether to publish BES lifecycle events. (defaults to 'true').\n","tags":["affects_outputs"],"sources":[]},{"name":"bes_outerr_buffer_size","short":"","type":"integer","default":"default: \"10240\"","description":"    Specifies the maximal size of stdout or stderr to be buffered in BEP, \n    before it is reported as a progress event. Individual writes are still \n    reported in a single event, even if larger than the specified value up to --\n    bes_outerr_chunk_size.\n","tags":["affects_outputs"],"sources":[]},{"name":"bes_outerr_chunk_size","short":"","type":"integer","default":"default: \"1048576\"","description":"    Specifies the maximal size of stdout or stderr to be sent to BEP in a \n    single message.\n","tags":["affects_outputs"],"sources":[]},{"name":"bes_proxy","short":"","type":"string","default":"default: see description","description":"Connect to the Build Event Service through a proxy. Currently this flag can only be used to configure a Unix domain socket (unix:/path/to/socket).","tags":[],"sources":[]},{"name":"bes_results_url","short":"","type":"string","default":"default: \"\"","description":"    Specifies the base URL where a user can view the information streamed to \n    the BES backend. Bazel will output the URL appended by the invocation id to \n    the terminal.\n","tags":["terminal_output"],"sources":[]},{"name":"bes_timeout","short":"","type":"An immutable length of time.","default":"default: \"0s\"","description":"    Specifies how long bazel should wait for the BES/BEP upload to complete \n    after the build and tests have finished. A valid timeout is a natural \n    number followed by a unit: Days (d), hours (h), minutes (m), seconds (s), \n    and milliseconds (ms). The default value is '0' which means that there is \n    no timeout.\n","tags":["affects_outputs"],"sources":[]},{"name":"build_event_binary_file","short":"","type":"string","default":"default: \"\"","description":"    If non-empty, write a varint delimited binary representation of \n    representation of the build event protocol to that file.\n","tags":["affects_outputs"],"sources":[]},{"name":"build_event_binary_file_path_conversion","short":"","type":"boolean","default":"default: \"true\"","description":"    Convert paths in the binary file representation of the build event protocol \n    to more globally valid URIs whenever possible; if disabled, the file:// uri \n    scheme will always be used\n","tags":["affects_outputs"],"sources":[]},{"name":"build_event_json_file","short":"","type":"string","default":"default: \"\"","description":"    If non-empty, write a JSON serialisation of the build event protocol to \n    that file.\n","tags":["affects_outputs"],"sources":[]},{"name":"build_event_json_file_path_conversion","short":"","type":"boolean","default":"default: \"true\"","description":"    Convert paths in the json file representation of the build event protocol \n    to more globally valid URIs whenever possible; if disabled, the file:// uri \n    scheme will always be used\n","tags":["affects_outputs"],"sources":[]},{"name":"build_event_max_named_set_of_file_entries","short":"","type":"integer","default":"default: \"-1\"","description":"    The maximum number of entries for a single named_set_of_files event; values \n    smaller than 2 are ignored and no event splitting is performed. This is \n    intended for limiting the maximum event size in the build event protocol, \n    although it does not directly control event size. The total event size is a \n    function of the structure of the set as well as the file and uri lengths, \n    which may in turn depend on the hash function.\n","tags":["affects_outputs"],"sources":[]},{"name":"build_event_publish_all_actions","short":"","type":"boolean","default":"default: \"false\"","description":"    Whether all actions should be published.\n","tags":["affects_outputs"],"sources":[]},{"name":"build_event_text_file","short":"","type":"string","default":"default: \"\"","description":"    If non-empty, write a textual representation of the build event protocol to \n    that file\n","tags":["affects_outputs"],"sources":[]},{"name":"build_event_text_file_path_conversion","short":"","type":"boolean","default":"default: \"true\"","description":"    Convert paths in the text file representation of the build event protocol \n    to more globally valid URIs whenever possible; if disabled, the file:// uri \n    scheme will always be used\n","tags":["affects_outputs"],"sources":[]},{"name":"experimental_announce_profile_path","short":"","type":"boolean","default":"default: \"false\"","description":"    If enabled, adds the JSON profile path to the log.\n","tags":["affects_outputs","bazel_monitoring"],"sources":[]},{"name":"experimental_build_event_expand_filesets","short":"","type":"boolean","default":"default: \"false\"","description":"    If true, expand Filesets in the BEP when presenting output files.\n","tags":["affects_outputs"],"sources":[]},{"name":"experimental_build_event_upload_strategy","short":"","type":"string","default":"default: see description","description":"    Selects how to upload artifacts referenced in the build event protocol.\n","tags":["affects_outputs"],"sources":[]},{"name":"experimental_generate_json_trace_profile","short":"","type":"boolean","default":"default: \"false\"","description":"    If enabled, Bazel profiles the build and writes a JSON-format profile into \n    a file in the output base. View profile by loading into chrome://tracing.\n","tags":["affects_outputs","bazel_monitoring"],"sources":[]},{"name":"experimental_post_profile_started_event","short":"","type":"boolean","default":"default: \"false\"","description":"    If set, Bazel will post the ProfilerStartedEvent including the path to the \n    profile.\n","tags":["affects_outputs","bazel_monitoring"],"sources":[]},{"name":"experimental_profile_action_counts","short":"","type":"boolean","default":"default: \"false\"","description":"    If set, Bazel will add action counts at the top of the JSON profile.\n","tags":["affects_outputs","bazel_monitoring"],"sources":[]},{"name":"experimental_profile_additional_tasks","short":"","type":"phase, action, __action_builder, __action_submit, action_check, __action_execute, action_lock, action_release, __action_graph, action_update, action_complete, info, __exception, create_package, __package_validity_check, __spawn, remote_execution, local_execution, scanner, local_parse, upload_time, process_time, remote_queue, remote_setup, fetch, vfs_stat, vfs_dir, vfs_readlink, vfs_md5, vfs_xattr, vfs_delete, vfs_open, vfs_read, vfs_write, vfs_glob, vfs_vmfs_stat, vfs_vmfs_dir, vfs_vmfs_read, wait, __configured_target, thread_name, __test, skyframe_eval, skyfunction, critical_path, critical_path_component, handle_gc_notification, local_cpu_usage, action_counts, __process_scan, __loop_output_artifacts, __locate_relative, __construct_include_paths, __parse_and_hints_results, __process_results_and_enqueue, starlark_parser, starlark_user_fn, starlark_builtin_fn, starlark_user_compiled_fn, action_fs_staging, remote_cache_check, remote_download or unknown","default":"may be used multiple times","description":"    Specifies additional profile tasks to be included in the profile.\n","tags":["affects_outputs","bazel_monitoring"],"sources":[]},{"name":"experimental_profile_cpu_usage","short":"","type":"boolean","default":"default: \"false\"","description":"    If set, Bazel will measure cpu usage and add it to the JSON profile.\n","tags":["affects_outputs","bazel_monitoring"],"sources":[]},{"name":"experimental_slim_json_profile","short":"","type":"boolean","default":"default: \"false\"","description":"    Slims down the size of the JSON profile by merging events if the profile \n    gets  too large.\n","tags":["affects_outputs","bazel_monitoring"],"sources":[]},{"name":"experimental_stream_log_file_uploads","short":"","type":"boolean","default":"default: \"false\"","description":"    Stream log file uploads directly to the remote storage rather than writing \n    them to disk.\n","tags":["affects_outputs"],"sources":[]},{"name":"experimental_ui_deduplicate","short":"","type":"boolean","default":"default: \"false\"","description":"    Make the UI deduplicate messages to have a cleaner scroll-back log.\n","tags":["terminal_output"],"sources":[]},{"name":"experimental_workspace_rules_log_file","short":"","type":"path","default":"default: see description","description":"Log certain Workspace Rules events into this file as delimited WorkspaceEvent protos.","tags":[],"sources":[]},{"name":"incompatible_enable_profile_by_default","short":"","type":"boolean","default":"default: \"true\"","description":"    If enabled, Bazel will generate a JSON profile by default.\n","tags":["affects_outputs","bazel_monitoring","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_remove_binary_profile","short":"","type":"boolean","default":"default: \"true\"","description":"    If enabled, Bazel will write JSON-format profiles instead of binary \n    profiles.\n","tags":["affects_outputs","bazel_monitoring","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"json_trace_compression","short":"","type":"tri-state (auto, yes, no)","default":"default: \"auto\"","description":"    If enabled, Bazel compresses the JSON-format profile with gzip. By default, \n    this is decided based on the extension of the file specified in --profile.\n","tags":["affects_outputs","bazel_monitoring"],"sources":[]},{"name":"legacy_important_outputs","short":"","type":"boolean","default":"default: \"true\"","description":"    Use this to suppress generation of the legacy important_outputs field in \n    the TargetComplete event.\n","tags":["affects_outputs"],"sources":[]},{"name":"logging","short":"","type":"0 \u003c= an integer \u003c= 6","default":"default: \"3\"","description":"    The logging level.\n","tags":["affects_outputs"],"sources":[]},{"name":"memory_profile_stable_heap_parameters","short":"","type":"two integers, separated by a comma","default":"default: \"1,0\"","description":"    Tune memory profile's computation of stable heap at end of build. Should be \n    two integers separated by a comma. First parameter is the number of GCs to \n    perform. Second parameter is the number of seconds to wait between GCs.\n","tags":["bazel_monitoring"],"sources":[]},{"name":"profile","short":"","type":"path","default":"default: see description","description":"    If set, profile Bazel and write data to the specified file. Use bazel \n    analyze-profile to analyze the profile.\n","tags":["affects_outputs","bazel_monitoring"],"sources":[]},{"name":"project_id","short":"","type":"string","default":"default: see description","description":"    Specifies the BES project identifier. Defaults to null.\n","tags":["affects_outputs"],"sources":[]},{"name":"tool_tag","short":"","type":"string","default":"default: \"\"","description":"    A tool name to attribute this Bazel invocation to.\n","tags":["affects_outputs","bazel_monitoring"],"sources":[]},{"name":"all_incompatible_changes","short":"","type":"","default":"","description":"    Enables all options of the form --incompatible_*. Use this option to find \n    places where your build may break in the future due to deprecations or \n    other changes.\n      Expands to: --incompatible_always_check_depset_elements --\n      incompatible_bzl_disallow_load_after_statement --\n      incompatible_depset_for_libraries_to_link_getter --\n      incompatible_depset_union --incompatible_disable_deprecated_attr_params --\n      incompatible_disable_depset_items --\n      incompatible_disable_target_provider_fields --\n      incompatible_disable_third_party_license_checking --\n      incompatible_disallow_dict_lookup_unhashable_keys --\n      incompatible_disallow_empty_glob --incompatible_disallow_legacy_javainfo \n      --incompatible_disallow_struct_provider_syntax --\n      incompatible_disallow_unverified_http_downloads --\n      incompatible_do_not_split_linking_cmdline --\n      incompatible_enable_profile_by_default --incompatible_new_actions_api --\n      incompatible_no_attr_license --incompatible_no_implicit_file_export --\n      incompatible_no_output_attr_default --incompatible_no_rule_outputs_param \n      --incompatible_no_support_tools_in_action_inputs --\n      incompatible_no_target_output_group --incompatible_remap_main_repo --\n      incompatible_remove_binary_profile --\n      incompatible_remove_enabled_toolchain_types --\n      incompatible_restrict_named_params --incompatible_restrict_string_escapes \n      --incompatible_run_shell_command_string --\n      incompatible_tls_enabled_removed --\n      incompatible_use_cc_configure_from_rules_cc --\n      incompatible_visibility_private_attributes_at_definition \n","tags":["incompatible_change"],"sources":[]},{"name":"build_metadata","short":"","type":"'name=value' assignment","default":"may be used multiple times","description":"    Custom key-value string pairs to supply in a build event.\n","tags":["terminal_output"],"sources":[]},{"name":"color","short":"","type":"yes, no or auto","default":"default: \"auto\"","description":"Use terminal controls to colorize output.","tags":[],"sources":[]},{"name":"config","short":"","type":"string","default":"may be used multiple times","description":"Selects additional config sections from the rc files; for every \u003ccommand\u003e, it also pulls in the options from \u003ccommand\u003e:\u003cconfig\u003e if such a section exists; if this section doesn't exist in any .rc file, Blaze fails with an error. The config sections and flag combinations they are equivalent to are located in the tools/*.blazerc config files.","tags":[],"sources":[]},{"name":"curses","short":"","type":"yes, no or auto","default":"default: \"auto\"","description":"Use terminal cursor controls to minimize scrolling output.","tags":[],"sources":[]},{"name":"enable_platform_specific_config","short":"","type":"boolean","default":"default: \"false\"","description":"If true, Bazel picks up host-OS-specific config lines from bazelrc files. For example, if the host OS is Linux and you run bazel build, Bazel picks up lines starting with build:linux. Supported OS identifiers are linux, macos, windows, and freebsd. Enabling this flag is equivalent to using --config=linux on Linux, --config=windows on Windows, etc.","tags":[],"sources":[]},{"name":"experimental_multi_threaded_digest","short":"","type":"boolean","default":"default: \"true\"","description":"Whether to always compute MD5 digests of files with multiple threads. Setting this to false may improve performance when using a spinning platter.","tags":[],"sources":[]},{"name":"experimental_ui_limit_console_output","short":"","type":"integer","default":"default: \"0\"","description":"Number of bytes to which the UI will limit its output (non-positive values indicate unlimited). Once the limit is approaching, the UI will try hard to limit in a meaningful way, but will ultimately just drop all output.","tags":[],"sources":[]},{"name":"experimental_ui_mode","short":"","type":"oldest_actions or mnemonic_histogram","default":"default: \"oldest_actions\"","description":"    Determines what kind of data is shown in the detailed progress bar. By \n    default, it is set to show the oldest actions and their running time. The \n    underlying data source is usually sampled in a mode-dependend way to fit \n    within the number of lines given by --ui_actions_shown.\n","tags":["terminal_output"],"sources":[]},{"name":"google_auth_scopes","short":"","type":"comma-separated list of options","default":"default: \"https://www.googleapis.com/auth/cloud-platform\"","description":"A comma-separated list of Google Cloud authentication scopes.","tags":[],"sources":[]},{"name":"google_credentials","short":"","type":"string","default":"default: see description","description":"Specifies the file to get authentication credentials from. See https://cloud.google.com/docs/authentication for details.","tags":[],"sources":[]},{"name":"google_default_credentials","short":"","type":"boolean","default":"default: \"false\"","description":"Whether to use 'Google Application Default Credentials' for authentication. See https://cloud.google.com/docs/authentication for details. Disabled by default.","tags":[],"sources":[]},{"name":"incompatible_tls_enabled_removed","short":"","type":"boolean","default":"default: \"true\"","description":"    No-op. See #8061 for details.\n","tags":["incompatible_change","triggered_by_all_incompatible_changes"],"sources":[]},{"name":"progress_in_terminal_title","short":"","type":"boolean","default":"default: \"false\"","description":"Show the command progress in the terminal title. Useful to see what bazel is doing when having multiple terminal tabs.","tags":[],"sources":[]},{"name":"show_progress","short":"","type":"boolean","default":"default: \"true\"","description":"Display progress messages during a build.","tags":[],"sources":[]},{"name":"show_progress_rate_limit","short":"","type":"double","default":"default: \"0.2\"","description":"Minimum number of seconds between progress messages in the output.","tags":[],"sources":[]},{"name":"show_task_finish","short":"","type":"boolean","default":"default: \"false\"","description":"Display progress messages when tasks complete, not just when they start.","tags":[],"sources":[]},{"name":"show_timestamps","short":"","type":"boolean","default":"default: \"false\"","description":"Include timestamps in messages","tags":[],"sources":[]},{"name":"tls_certificate","short":"","type":"string","default":"default: see description","description":"Specify the TLS client certificate to use.","tags":[],"sources":[]},{"name":"tls_enabled","short":"","type":"boolean","default":"default: \"false\"","description":"No-op. See #8061 for details.","tags":[],"sources":[]},{"name":"ui_actions_shown","short":"","type":"integer","default":"default: \"8\"","description":"    Number of concurrent actions shown in the detailed progress bar; each \n    action is shown on a separate line. The progress bar always shows at least \n    one one, all numbers less than 1 are mapped to 1. This option has no effect \n    if --noui is set.\n","tags":["terminal_output"],"sources":[]},{"name":"watchfs","short":"","type":"boolean","default":"default: \"false\"","description":"On Linux/macOS: If true, bazel tries to use the operating system's file watch service for local changes instead of scanning every file for a change. On Windows: this flag is a non-op.","tags":[],"sources":[]}]