[{"name":"distdir","type":"path","default":"may be used multiple times","description":"Additional places to search for archives before accessing the network to download them.","tags":["bazel_internal_configuration"]},{"name":"experimental_repository_cache_hardlinks","type":"boolean","default":"false","description":"If set, the repository cache will hardlink the file in case of a cache hit, rather than copying. This is intended to save disk space.","tags":["bazel_internal_configuration"]},{"name":"experimental_repository_cache_urls_as_default_canonical_id","type":"boolean","default":"false","description":"If true, use a string derived from the URLs of repository downloads as the canonical_id if not specified. This causes a change in the URLs to result in a redownload even if the cache contains a download with the same hash. This can be used to verify that URL changes don't result in broken repositories being masked by the cache.","tags":["loading_and_analysis","experimental"]},{"name":"experimental_repository_disable_download","type":"boolean","default":"false","description":"If set, downloading external repositories is not allowed.","tags":["experimental"]},{"name":"experimental_repository_downloader_retries","type":"integer","default":"0","description":"The maximum number of attempts to retry a download error. If set to 0, retries are disabled.","tags":["experimental"]},{"name":"experimental_scale_timeouts","type":"double","default":"1.0","description":"Scale all timeouts in Starlark repository rules by this factor. In this way, external repositories can be made working on machines that are slower than the rule author expected, without changing the source code","tags":["bazel_internal_configuration","experimental"]},{"name":"http_timeout_scaling","type":"double","default":"1.0","description":"Scale all timeouts related to http downloads by the given factor","tags":["bazel_internal_configuration"]},{"name":"repository_cache","type":"path","default":"see description","description":"Specifies the cache location of the downloaded values obtained during the fetching of external repositories. An empty string as argument requests the cache to be disabled.","tags":["bazel_internal_configuration"]},{"name":"experimental_oom_more_eagerly_threshold","type":"integer","default":"100","description":"If this flag is set to a value less than 100, Bazel will OOM if, after two full GC's, more than this percentage of the (old gen) heap is still occupied.","tags":["host_machine_resource_optimizations"]},{"name":"experimental_ui_max_stdouterr_bytes","type":"integer in (-1)-1073741819 range","default":"1048576","description":"The maximum size of the stdout / stderr files that will be printed to the console. -1 implies no limit.","tags":["execution"]},{"name":"incompatible_remote_dangling_symlinks","type":"boolean","default":"true","description":"If set to true and --incompatible_remote_symlinks is also true, symlinks in action outputs are allowed to dangle.","tags":["execution","incompatible_change"]},{"name":"incompatible_remote_symlinks","type":"boolean","default":"true","description":"If set to true, Bazel will represent symlinks in action outputs in the remote caching/execution protocol as such. Otherwise, symlinks will be followed and represented as files or directories. See #6631 for details.","tags":["execution","incompatible_change"]},{"name":"loading_phase_threads","type":"integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]\u003cfloat\u003e) eg. \"auto\", \"HOST_CPUS*.5\"","default":"auto","description":"Number of parallel threads to use for the loading/analysis phase.Takes an integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]\u003cfloat\u003e) eg. \"auto\", \"HOST_CPUS*.5\". \"auto\" sets a reasonable default based on host resources. Must be at least 1.","tags":["bazel_internal_configuration"]},{"name":"bep_maximum_open_remote_upload_files","type":"integer","default":"-1","description":"Maximum number of open files allowed during BEP artifact upload.","tags":["affects_outputs"]},{"name":"remote_download_outputs","type":"all, minimal or toplevel","default":"all","description":"If set to 'minimal' doesn't download any remote build outputs to the local machine, except the ones required by local actions. If set to 'toplevel' behaves like'minimal' except that it also downloads outputs of top level targets to the local machine. Both options can significantly reduce build times if network bandwidth is a bottleneck.","tags":["affects_outputs"]},{"name":"remote_download_symlink_template","type":"string","default":"","description":"Instead of downloading remote build outputs to the local machine, create symbolic links. The target of the symbolic links can be specified in the form of a template string. This template string may contain {hash} and {size_bytes} that expand to the hash of the object and the size in bytes, respectively. These symbolic links may, for example, point to a FUSE file system that loads objects from the CAS on demand.","tags":["affects_outputs"]},{"name":"repo_env","type":"'name=value' assignment with an optional value part","default":"may be used multiple times","description":"Specifies additional environment variables to be available only for repository rules. Note that repository rules see the full environment anyway, but in this way configuration information can be passed to repositories through options without invalidating the action graph.","tags":["action_command_lines"]},{"name":"check_bzl_visibility","type":"boolean","default":"true","description":"If disabled, .bzl load visibility errors are demoted to warnings.","tags":["build_file_semantics"]},{"name":"experimental_repository_hash_file","type":"string","default":"","description":"If non-empty, specifies a file containing a resolved value, against which the repository directory hashes should be verified","tags":["affects_outputs","experimental"]},{"name":"experimental_verify_repository_rules","type":"string","default":"may be used multiple times","description":"If list of repository rules for which the hash of the output directory should be verified, provided a file is specified by --experimental_repository_hash_file.","tags":["affects_outputs","experimental"]},{"name":"enable_bzlmod","type":"boolean","default":"false","description":"If true, enables the Bzlmod dependency management system, taking precedence over WORKSPACE. See https://bazel.build/docs/bzlmod for more information.","tags":["loading_and_analysis"]},{"name":"experimental_action_resource_set","type":"boolean","default":"true","description":"If set to true, ctx.actions.run() and ctx.actions.run_shell() accept a resource_set parameter for local execution. Otherwise it will default to 250 MB for memory and 1 cpu.","tags":["execution","build_file_semantics","experimental"]},{"name":"experimental_allow_tags_propagation","type":"boolean","default":"false","description":"If set to true, tags will be propagated from a target to the actions' execution requirements; otherwise tags are not propagated. See https://github.com/bazelbuild/bazel/issues/8830 for details.","tags":["build_file_semantics","experimental"]},{"name":"experimental_allow_top_level_aspects_parameters","type":"boolean","default":"true","description":"No-op","tags":["no_op","deprecated","experimental"]},{"name":"experimental_analysis_test_call","type":"boolean","default":"true","description":"If set to true, analysis_test native call is available.","tags":["loading_and_analysis","build_file_semantics","experimental"]},{"name":"experimental_bzl_visibility","type":"boolean","default":"true","description":"If enabled, adds a `visibility()` function that .bzl files may call during top-level evaluation to set their visibility for the purpose of load() statements.","tags":["loading_and_analysis","experimental"]},{"name":"experimental_cc_shared_library","type":"boolean","default":"false","description":"If set to true, rule attributes and Starlark API methods needed for the rule cc_shared_library will be available","tags":["build_file_semantics","loading_and_analysis","experimental"]},{"name":"experimental_disable_external_package","type":"boolean","default":"false","description":"If set to true, the auto-generated //external package will not be available anymore. Bazel will still be unable to parse the file 'external/BUILD', but globs reaching into external/ from the unnamed package will work.","tags":["loading_and_analysis","loses_incremental_state","experimental"]},{"name":"experimental_enable_android_migration_apis","type":"boolean","default":"false","description":"If set to true, enables the APIs required to support the Android Starlark migration.","tags":["build_file_semantics"]},{"name":"experimental_get_fixed_configured_action_env","type":"boolean","default":"false","description":"If enabled, action.env will also return fixed environment variables specified through features configuration.","tags":["loading_and_analysis","experimental"]},{"name":"experimental_google_legacy_api","type":"boolean","default":"false","description":"If set to true, exposes a number of experimental pieces of Starlark build API pertaining to Google legacy code.","tags":["loading_and_analysis","experimental"]},{"name":"experimental_lazy_template_expansion","type":"boolean","default":"true","description":"If set to true, ctx.actions.expand_template() accepts a TemplateDict parameter for deferred evaluation of substitution values.","tags":["execution","build_file_semantics","experimental"]},{"name":"experimental_platforms_api","type":"boolean","default":"false","description":"If set to true, enables a number of platform-related Starlark APIs useful for debugging.","tags":["loading_and_analysis","experimental"]},{"name":"experimental_repo_remote_exec","type":"boolean","default":"false","description":"If set to true, repository_rule gains some remote execution capabilities.","tags":["build_file_semantics","loading_and_analysis","experimental"]},{"name":"experimental_sibling_repository_layout","type":"boolean","default":"false","description":"If set to true, non-main repositories are planted as symlinks to the main repository in the execution root. That is, all repositories are direct children of the $output_base/execution_root directory. This has the side effect of freeing up $output_base/execution_root/__main__/external for the real top-level 'external' directory.","tags":["action_command_lines","bazel_internal_configuration","\n      loading_and_analysis","loses_incremental_state","experimental"]},{"name":"incompatible_always_check_depset_elements","type":"boolean","default":"true","description":"Check the validity of elements added to depsets, in all constructors. Elements must be immutable, but historically the depset(direct=...) constructor forgot to check. Use tuples instead of lists in depset elements. See https://github.com/bazelbuild/bazel/issues/10313 for details.","tags":["build_file_semantics","incompatible_change"]},{"name":"incompatible_config_setting_private_default_visibility","type":"boolean","default":"false","description":"If incompatible_enforce_config_setting_visibility=false, this is a noop. Else, if this flag is false, any config_setting without an explicit visibility attribute is //visibility:public. If this flag is true, config_setting follows the same visibility logic as all other rules. See https://github.com/bazelbuild/bazel/issues/12933.","tags":["loading_and_analysis","incompatible_change"]},{"name":"incompatible_depset_for_libraries_to_link_getter","type":"boolean","default":"true","description":"When true, Bazel no longer returns a list from linking_context.libraries_to_link but returns a depset instead.","tags":["loading_and_analysis","incompatible_change"]},{"name":"incompatible_disable_starlark_host_transitions","type":"boolean","default":"false","description":"If set to true, rule attributes cannot set 'cfg = \"host\"'. Rules should set 'cfg = \"exec\"' instead.","tags":["loading_and_analysis","incompatible_change"]},{"name":"incompatible_disable_target_provider_fields","type":"boolean","default":"false","description":"If set to true, disable the ability to access providers on 'target' objects via field syntax. Use provider-key syntax instead. For example, instead of using `ctx.attr.dep.my_info` to access `my_info` from inside a rule implementation function, use `ctx.attr.dep[MyInfo]`. See https://github.com/bazelbuild/bazel/issues/9014 for details.","tags":["build_file_semantics","incompatible_change"]},{"name":"incompatible_disallow_empty_glob","type":"boolean","default":"false","description":"If set to true, the default value of the `allow_empty` argument of glob() is False.","tags":["build_file_semantics","incompatible_change"]},{"name":"incompatible_disallow_legacy_javainfo","type":"boolean","default":"true","description":"Deprecated. No-op.","tags":["build_file_semantics","incompatible_change"]},{"name":"incompatible_disallow_struct_provider_syntax","type":"boolean","default":"false","description":"If set to true, rule implementation functions may not return a struct. They must instead return a list of provider instances.","tags":["build_file_semantics","incompatible_change"]},{"name":"incompatible_enforce_config_setting_visibility","type":"boolean","default":"true","description":"If true, enforce config_setting visibility restrictions. If false, every config_setting is visible to every target. See https://github.com/bazelbuild/bazel/issues/12932.","tags":["loading_and_analysis","incompatible_change"]},{"name":"incompatible_existing_rules_immutable_view","type":"boolean","default":"true","description":"If set to true, native.existing_rule and native.existing_rules return lightweight immutable view objects instead of mutable dicts.","tags":["build_file_semantics","loading_and_analysis","incompatible_change"]},{"name":"incompatible_fix_package_group_reporoot_syntax","type":"boolean","default":"true","description":"In package_group's `packages` attribute, changes the meaning of the value \"//...\" to refer to all packages in the current repository instead of all packages in any repository. You can use the special value \"public\" in place of \"//...\" to obtain the old behavior. This flag requires that --incompatible_package_group_has_public_syntax also be enabled.","tags":["build_file_semantics","incompatible_change"]},{"name":"incompatible_java_common_parameters","type":"boolean","default":"true","description":"If set to true, the output_jar, and host_javabase parameters in pack_sources and host_javabase in compile will all be removed.","tags":["build_file_semantics","incompatible_change"]},{"name":"incompatible_new_actions_api","type":"boolean","default":"true","description":"If set to true, the API to create actions is only available on `ctx.actions`, not on `ctx`.","tags":["build_file_semantics","incompatible_change"]},{"name":"incompatible_no_attr_license","type":"boolean","default":"true","description":"If set to true, disables the function `attr.license`.","tags":["build_file_semantics","incompatible_change"]},{"name":"incompatible_no_implicit_file_export","type":"boolean","default":"false","description":"If set, (used) source files are are package private unless exported explicitly. See https://github.com/bazelbuild/proposals/blob/master/designs/2019-10-24-file-visibility.md","tags":["build_file_semantics","incompatible_change"]},{"name":"incompatible_no_rule_outputs_param","type":"boolean","default":"false","description":"If set to true, disables the `outputs` parameter of the `rule()` Starlark function.","tags":["build_file_semantics","incompatible_change"]},{"name":"incompatible_package_group_has_public_syntax","type":"boolean","default":"true","description":"In package_group's `packages` attribute, allows writing \"public\" or \"private\" to refer to all packages or no packages respectively.","tags":["build_file_semantics","incompatible_change"]},{"name":"incompatible_require_linker_input_cc_api","type":"boolean","default":"true","description":"If set to true, rule create_linking_context will require linker_inputs instead of libraries_to_link. The old getters of linking_context will also be disabled and just linker_inputs will be available.","tags":["build_file_semantics","loading_and_analysis","incompatible_change"]},{"name":"incompatible_run_shell_command_string","type":"boolean","default":"true","description":"If set to true, the command parameter of actions.run_shell will only accept string","tags":["build_file_semantics","incompatible_change"]},{"name":"incompatible_stop_exporting_language_modules","type":"boolean","default":"false","description":"If enabled, certain language-specific modules (such as `cc_common`) are unavailable in user .bzl files and may only be called from their respective rules repositories.","tags":["loading_and_analysis","incompatible_change"]},{"name":"incompatible_struct_has_no_methods","type":"boolean","default":"false","description":"Disables the to_json and to_proto methods of struct, which pollute the struct field namespace. Instead, use json.encode or json.encode_indent for JSON, or proto.encode_text for textproto.","tags":["build_file_semantics","incompatible_change"]},{"name":"incompatible_top_level_aspects_require_providers","type":"boolean","default":"false","description":"If set to true, the top level aspect will honor its required providers and only run on top level targets whose rules' advertised providers satisfy the required providers of the aspect.","tags":["loading_and_analysis","incompatible_change"]},{"name":"incompatible_unambiguous_label_stringification","type":"boolean","default":"true","description":"When true, Bazel will stringify the label @//foo:bar to @//foo:bar, instead of //foo:bar. This only affects the behavior of str(), the % operator, and so on; the behavior of repr() is unchanged. See https://github.com/bazelbuild/bazel/issues/15916 for more information.","tags":["loading_and_analysis","incompatible_change"]},{"name":"incompatible_use_cc_configure_from_rules_cc","type":"boolean","default":"false","description":"When true, Bazel will no longer allow using cc_configure from @bazel_tools. Please see https://github.com/bazelbuild/bazel/issues/10134 for details and migration instructions.","tags":["loading_and_analysis","incompatible_change"]},{"name":"incompatible_visibility_private_attributes_at_definition","type":"boolean","default":"false","description":"If set to true, the visibility of private rule attributes is checked with respect to the rule definition, rather than the rule usage.","tags":["build_file_semantics","incompatible_change"]},{"name":"max_computation_steps","type":"long integer","default":"0","description":"The maximum number of Starlark computation steps that may be executed by a BUILD file (zero means no limit).","tags":["build_file_semantics"]},{"name":"nested_set_depth_limit","type":"integer","default":"3500","description":"The maximum depth of the graph internal to a depset (also known as NestedSet), above which the depset() constructor will fail.","tags":["loading_and_analysis"]},{"name":"allow_yanked_versions","type":"string","default":"may be used multiple times","description":"Specified the module versions in the form of `\u003cmodule1\u003e@\u003cversion1\u003e,\u003cmodule2\u003e@\u003cversion2\u003e` that will be allowed in the resolved dependency graph even if they are declared yanked in the registry where they come from (if they are not coming from a NonRegistryOverride). Otherwise, yanked versions will cause the resolution to fail. You can also define allowed yanked version with the `BZLMOD_ALLOW_YANKED_VERSIONS` environment variable. You can disable this check by using the keyword 'all' (not recommended).","tags":["loading_and_analysis"]},{"name":"check_bazel_compatibility","type":"error, warning or off","default":"error","description":"Check bazel version compatibility of Bazel modules. Valid values are `error` to escalate it to a resolution failure, `off` to disable the check, or `warning` to print a warning when mismatch detected.","tags":["loading_and_analysis"]},{"name":"check_direct_dependencies","type":"off, warning or error","default":"warning","description":"Check if the direct `bazel_dep` dependencies declared in the root module are the same versions you get in the resolved dependency graph. Valid values are `off` to disable the check, `warning` to print a warning when mismatch detected or `error` to escalate it to a resolution failure.","tags":["loading_and_analysis"]},{"name":"ignore_dev_dependency","type":"boolean","default":"false","description":"If true, Bazel ignores `bazel_dep` and `use_extension` declared as `dev_dependency` in the MODULE.bazel of the root module. Note that, those dev dependencies are always ignored in the MODULE.bazel if it's not the root module regardless of the value of this flag.","tags":["loading_and_analysis"]},{"name":"lockfile_mode","type":"off, update or error","default":"off","description":"Specifies how and whether or not to use the lockfile. Valid values are `update` to use the lockfile and update it if there are changes, `error` to use the lockfile but throw an error if it's not up-to-date, or `off` to neither read from or write to the lockfile.","tags":["loading_and_analysis"]},{"name":"override_module","type":"equals-separated mapping of module name to path","default":"may be used multiple times","description":"Override a module with a local path in the form of \u003cmodule name\u003e=\u003cpath\u003e. If the given path is an absolute path, it will be used as it is. If the given path is a relative path, it is relative to the current working directory. If the given path starts with '%workspace%, it is relative to the workspace root, which is the output of `bazel info workspace`","tags":[""]},{"name":"registry","type":"string","default":"may be used multiple times","description":"Specifies the registries to use to locate Bazel module dependencies. The order is important: modules will be looked up in earlier registries first, and only fall back to later registries when they're missing from the earlier ones.","tags":["changes_inputs"]},{"name":"incompatible_do_not_split_linking_cmdline","type":"boolean","default":"true","description":"When true, Bazel no longer modifies command line flags used for linking, and also doesn't selectively decide which flags go to the param file and which don't.  See https://github.com/bazelbuild/bazel/issues/7670 for details.","tags":["loading_and_analysis","incompatible_change"]},{"name":"keep_state_after_build","type":"boolean","default":"true","description":"If false, Blaze will discard the inmemory state from this build when the build finishes. Subsequent builds will not have any incrementality with respect to this one.","tags":["loses_incremental_state"]},{"name":"skyframe_high_water_mark_threshold","type":"integer","default":"85","description":"Flag for advanced configuration of Bazel's internal Skyframe engine. If Bazel detects its retained heap percentage usage is at least this threshold, it will drop unnecessary temporary Skyframe state. Tweaking this may let you mitigate wall time impact of GC thrashing, when the GC thrashing is (i) caused by the memory usage of this temporary state and (ii) more costly than reconstituting the state when it is needed.","tags":["host_machine_resource_optimizations"]},{"name":"track_incremental_state","type":"boolean","default":"true","description":"If false, Blaze will not persist data that allows for invalidation and re-evaluation on incremental builds in order to save memory on this build. Subsequent builds will not have any incrementality with respect to this one. Usually you will want to specify --batch when setting this to false.","tags":["loses_incremental_state"]},{"name":"announce_rc","type":"boolean","default":"false","description":"Whether to announce rc options.","tags":["affects_outputs"]},{"name":"attempt_to_print_relative_paths","type":"boolean","default":"false","description":"When printing the location part of messages, attempt to use a path relative to the workspace directory or one of the directories specified by --package_path.","tags":["terminal_output"]},{"name":"bes_backend","type":"string","default":"","description":"Specifies the build event service (BES) backend endpoint in the form [SCHEME://]HOST[:PORT]. The default is to disable BES uploads. Supported schemes are grpc and grpcs (grpc with TLS enabled). If no scheme is provided, Bazel assumes grpcs.","tags":["affects_outputs"]},{"name":"bes_check_preceding_lifecycle_events","type":"boolean","default":"false","description":"Sets the field check_preceding_lifecycle_events_present on PublishBuildToolEventStreamRequest which tells BES to check whether it previously received InvocationAttemptStarted and BuildEnqueued events matching the current tool event.","tags":["affects_outputs"]},{"name":"bes_header","type":"'name=value' assignment","default":"may be used multiple times","description":"Specify a header in NAME=VALUE form that will be included in BES requests. Multiple headers can be passed by specifying the flag multiple times. Multiple values for the same name will be converted to a comma-separated list.","tags":["affects_outputs"]},{"name":"bes_instance_name","type":"string","default":"see description","description":"Specifies the instance name under which the BES will persist uploaded BEP. Defaults to null.","tags":["affects_outputs"]},{"name":"bes_keywords","type":"comma-separated list of options","default":"may be used multiple times","description":"Specifies a list of notification keywords to be added the default set of keywords published to BES (\"command_name=\u003ccommand_name\u003e \", \"protocol_name=BEP\"). Defaults to none.","tags":["affects_outputs"]},{"name":"bes_lifecycle_events","type":"boolean","default":"true","description":"Specifies whether to publish BES lifecycle events. (defaults to 'true').","tags":["affects_outputs"]},{"name":"bes_oom_finish_upload_timeout","type":"An immutable length of time.","default":"10m","description":"Specifies how long bazel should wait for the BES/BEP upload to complete while OOMing. This flag ensures termination when the JVM is severely GC thrashing and cannot make progress on any user thread.","tags":["bazel_monitoring"]},{"name":"bes_outerr_buffer_size","type":"integer","default":"10240","description":"Specifies the maximal size of stdout or stderr to be buffered in BEP, before it is reported as a progress event. Individual writes are still reported in a single event, even if larger than the specified value up to --bes_outerr_chunk_size.","tags":["affects_outputs"]},{"name":"bes_outerr_chunk_size","type":"integer","default":"1048576","description":"Specifies the maximal size of stdout or stderr to be sent to BEP in a single message.","tags":["affects_outputs"]},{"name":"bes_proxy","type":"string","default":"see description","description":"Connect to the Build Event Service through a proxy. Currently this flag can only be used to configure a Unix domain socket (unix:/path/to/socket).","tags":[""]},{"name":"bes_results_url","type":"string","default":"","description":"Specifies the base URL where a user can view the information streamed to the BES backend. Bazel will output the URL appended by the invocation id to the terminal.","tags":["terminal_output"]},{"name":"bes_timeout","type":"An immutable length of time.","default":"0s","description":"Specifies how long bazel should wait for the BES/BEP upload to complete after the build and tests have finished. A valid timeout is a natural number followed by a unit: Days (d), hours (h), minutes (m), seconds (s), and milliseconds (ms). The default value is '0' which means that there is no timeout.","tags":["affects_outputs"]},{"name":"build_event_binary_file","type":"string","default":"","description":"If non-empty, write a varint delimited binary representation of representation of the build event protocol to that file. This option implies --bes_upload_mode=wait_for_upload_complete.","tags":["Using this option will also add: --\n      bes_upload_mode=wait_for_upload_complete \n      Tags: affects_outputs"]},{"name":"build_event_binary_file_path_conversion","type":"boolean","default":"true","description":"Convert paths in the binary file representation of the build event protocol to more globally valid URIs whenever possible; if disabled, the file:// uri scheme will always be used","tags":["affects_outputs"]},{"name":"build_event_json_file","type":"string","default":"","description":"If non-empty, write a JSON serialisation of the build event protocol to that file.","tags":["affects_outputs"]},{"name":"build_event_json_file_path_conversion","type":"boolean","default":"true","description":"Convert paths in the json file representation of the build event protocol to more globally valid URIs whenever possible; if disabled, the file:// uri scheme will always be used","tags":["affects_outputs"]},{"name":"build_event_max_named_set_of_file_entries","type":"integer","default":"-1","description":"The maximum number of entries for a single named_set_of_files event; values smaller than 2 are ignored and no event splitting is performed. This is intended for limiting the maximum event size in the build event protocol, although it does not directly control event size. The total event size is a function of the structure of the set as well as the file and uri lengths, which may in turn depend on the hash function.","tags":["affects_outputs"]},{"name":"build_event_publish_all_actions","type":"boolean","default":"false","description":"Whether all actions should be published.","tags":["affects_outputs"]},{"name":"build_event_text_file","type":"string","default":"","description":"If non-empty, write a textual representation of the build event protocol to that file","tags":["affects_outputs"]},{"name":"build_event_text_file_path_conversion","type":"boolean","default":"true","description":"Convert paths in the text file representation of the build event protocol to more globally valid URIs whenever possible; if disabled, the file:// uri scheme will always be used","tags":["affects_outputs"]},{"name":"experimental_announce_profile_path","type":"boolean","default":"false","description":"If enabled, adds the JSON profile path to the log.","tags":["affects_outputs","bazel_monitoring"]},{"name":"experimental_bep_target_summary","type":"boolean","default":"false","description":"Whether to publish TargetSummary events.","tags":[""]},{"name":"experimental_build_event_expand_filesets","type":"boolean","default":"false","description":"If true, expand Filesets in the BEP when presenting output files.","tags":["affects_outputs"]},{"name":"experimental_build_event_fully_resolve_fileset_symlinks","type":"boolean","default":"false","description":"If true, fully resolve relative Fileset symlinks in the BEP when presenting output files. Requires --experimental_build_event_expand_filesets.","tags":["affects_outputs"]},{"name":"experimental_build_event_upload_max_retries","type":"integer","default":"4","description":"The maximum number of times Bazel should retry uploading a build event.","tags":["bazel_internal_configuration"]},{"name":"experimental_build_event_upload_retry_minimum_delay","type":"An immutable length of time.","default":"1s","description":"Initial, minimum delay for exponential backoff retries when BEP upload fails. (exponent: 1.6)","tags":["bazel_internal_configuration"]},{"name":"experimental_build_event_upload_strategy","type":"string","default":"see description","description":"Selects how to upload artifacts referenced in the build event protocol.","tags":["affects_outputs"]},{"name":"experimental_profile_additional_tasks","type":"phase, action, action_check, action_lock, action_release, action_update, action_complete, info, create_package, remote_execution, local_execution, scanner, local_parse, upload_time, process_time, remote_queue, remote_setup, fetch, vfs_stat, vfs_dir, vfs_readlink, vfs_md5, vfs_xattr, vfs_delete, vfs_open, vfs_read, vfs_write, vfs_glob, vfs_vmfs_stat, vfs_vmfs_dir, vfs_vmfs_read, wait, thread_name, thread_sort_index, skyframe_eval, skyfunction, critical_path, critical_path_component, handle_gc_notification, action_counts, local_cpu_usage, system_cpu_usage, local_memory_usage, system_memory_usage, system_network_up_usage, system_network_down_usage, workers_memory_usage, system_load_average, starlark_parser, starlark_user_fn, starlark_builtin_fn, starlark_user_compiled_fn, starlark_repository_fn, action_fs_staging, remote_cache_check, remote_download, remote_network, filesystem_traversal, worker_execution, worker_setup, worker_borrow, worker_working, worker_copying_outputs, credential_helper or unknown","default":"may be used multiple times","description":"Specifies additional profile tasks to be included in the profile.","tags":["affects_outputs","bazel_monitoring"]},{"name":"experimental_profile_include_primary_output","type":"boolean","default":"false","description":"Includes the extra \"out\" attribute in action events that contains the exec path to the action's primary output.","tags":["affects_outputs","bazel_monitoring"]},{"name":"experimental_profile_include_target_label","type":"boolean","default":"false","description":"Includes target label in action events' JSON profile data.","tags":["affects_outputs","bazel_monitoring"]},{"name":"experimental_record_metrics_for_all_mnemonics","type":"boolean","default":"false","description":"By default the number of action types is limited to the 20 mnemonics with the largest number of executed actions. Setting this option will write statistics for all mnemonics.","tags":[""]},{"name":"experimental_repository_resolved_file","type":"string","default":"","description":"If non-empty, write a Starlark value with the resolved information of all Starlark repository rules that were executed.","tags":["affects_outputs"]},{"name":"experimental_stream_log_file_uploads","type":"boolean","default":"false","description":"Stream log file uploads directly to the remote storage rather than writing them to disk.","tags":["affects_outputs"]},{"name":"experimental_workspace_rules_log_file","type":"path","default":"see description","description":"Log certain Workspace Rules events into this file as delimited WorkspaceEvent protos.","tags":[""]},{"name":"generate_json_trace_profile","type":"tri-state (auto, yes, no)","default":"auto","description":"If enabled, Bazel profiles the build and writes a JSON-format profile into a file in the output base. View profile by loading into chrome://tracing. By default Bazel writes the profile for all build-like commands and query.","tags":["affects_outputs","bazel_monitoring"]},{"name":"heap_dump_on_oom","type":"boolean","default":"false","description":"Whether to manually output a heap dump if an OOM is thrown (including OOMs due to --experimental_oom_more_eagerly_threshold). The dump will be written to \u003coutput_base\u003e/\u003cinvocation_id\u003e.heapdump.hprof. This option effectively replaces -XX:+HeapDumpOnOutOfMemoryError, which has no effect because OOMs are caught and redirected to Runtime#halt.","tags":["bazel_monitoring"]},{"name":"legacy_important_outputs","type":"boolean","default":"true","description":"Use this to suppress generation of the legacy important_outputs field in the TargetComplete event. important_outputs are required for Bazel to ResultStore integration.","tags":["affects_outputs"]},{"name":"logging","type":"0 \u003c= an integer \u003c= 6","default":"3","description":"The logging level.","tags":["affects_outputs"]},{"name":"memory_profile","type":"path","default":"see description","description":"If set, write memory usage data to the specified file at phase ends and stable heap to master log at end of build.","tags":["affects_outputs","bazel_monitoring"]},{"name":"memory_profile_stable_heap_parameters","type":"two integers, separated by a comma","default":"1,0","description":"Tune memory profile's computation of stable heap at end of build. Should be two integers separated by a comma. First parameter is the number of GCs to perform. Second parameter is the number of seconds to wait between GCs.","tags":["bazel_monitoring"]},{"name":"profile","type":"path","default":"see description","description":"If set, profile Bazel and write data to the specified file. Use bazel analyze-profile to analyze the profile.","tags":["affects_outputs","bazel_monitoring"]},{"name":"remote_print_execution_messages","type":"failure, success or all","default":"failure","description":"Choose when to print remote execution messages. Valid values are `failure`, to print only on failures, `success` to print only on successes and `all` to print always.","tags":["terminal_output"]},{"name":"slim_profile","type":"boolean","default":"true","description":"Slims down the size of the JSON profile by merging events if the profile gets  too large.","tags":["affects_outputs","bazel_monitoring"]},{"name":"starlark_cpu_profile","type":"string","default":"","description":"Writes into the specified file a pprof profile of CPU usage by all Starlark threads.","tags":["bazel_monitoring"]},{"name":"tool_tag","type":"string","default":"","description":"A tool name to attribute this Bazel invocation to.","tags":["affects_outputs","bazel_monitoring"]},{"name":"ui_event_filters","type":"Convert list of comma separated event kind to list of filters","default":"may be used multiple times","description":"Specifies which events to show in the UI. It is possible to add or remove events to the default ones using leading +/-, or override the default set completely with direct assignment. The set of supported event kinds include INFO, DEBUG, ERROR and more.","tags":["terminal_output"]},{"name":"experimental_resolved_file_instead_of_workspace","type":"string","default":"","description":"If non-empty read the specified resolved file instead of the WORKSPACE file","tags":["changes_inputs"]},{"name":"experimental_downloader_config","type":"string","default":"see description","description":"Specify a file to configure the remote downloader with. This file consists of lines, each of which starts with a directive (`allow`, `block` or `rewrite`) followed by either a host name (for `allow` and `block`) or two patterns, one to match against, and one to use as a substitute URL, with back-references starting from `$1`. It is possible for multiple `rewrite` directives for the same URL to be give, and in this case multiple URLs will be returned.","tags":[""]},{"name":"experimental_guard_against_concurrent_changes","type":"boolean","default":"false","description":"Turn this off to disable checking the ctime of input files of an action before uploading it to a remote cache. There may be cases where the Linux kernel delays writing of files, which could cause false positives.","tags":[""]},{"name":"experimental_remote_build_event_upload","type":"all or minimal","default":"all","description":"If set to 'all', all local outputs referenced by BEP are uploaded to remote cache.If set to 'minimal', local outputs referenced by BEP are not uploaded to the remote cache, except for files that are important to the consumers of BEP (e.g. test logs and timing profile). bytestream:// scheme is always used for the uri of files even if they are missing from remote cache.Default to 'all'.","tags":[""]},{"name":"experimental_remote_cache_async","type":"boolean","default":"false","description":"If true, remote cache I/O will happen in the background instead of taking place as the part of a spawn.","tags":[""]},{"name":"experimental_remote_cache_compression","type":"boolean","default":"false","description":"If enabled, compress/decompress cache blobs with zstd.","tags":[""]},{"name":"experimental_remote_capture_corrupted_outputs","type":"path","default":"see description","description":"A path to a directory where the corrupted outputs will be captured to.","tags":[""]},{"name":"experimental_remote_discard_merkle_trees","type":"boolean","default":"false","description":"If set to true, discard in-memory copies of the input root's Merkle tree and associated input mappings during calls to GetActionResult() and Execute(). This reduces memory usage significantly, but does require Bazel to recompute them upon remote cache misses and retries.","tags":[""]},{"name":"experimental_remote_downloader","type":"string","default":"see description","description":"A Remote Asset API endpoint URI, to be used as a remote download proxy. The supported schemas are grpc, grpcs (grpc with TLS enabled) and unix (local UNIX sockets). If no schema is provided Bazel will default to grpcs. See: https://github.com/bazelbuild/remote-apis/blob/master/build/bazel/remote/asset/v1/remote_asset.proto","tags":[""]},{"name":"experimental_remote_downloader_local_fallback","type":"boolean","default":"false","description":"Whether to fall back to the local downloader if remote downloader fails.","tags":[""]},{"name":"experimental_remote_execution_keepalive","type":"boolean","default":"false","description":"Whether to use keepalive for remote execution calls.","tags":[""]},{"name":"experimental_remote_mark_tool_inputs","type":"boolean","default":"false","description":"If set to true, Bazel will mark inputs as tool inputs for the remote executor. This can be used to implement remote persistent workers.","tags":[""]},{"name":"experimental_remote_merkle_tree_cache","type":"boolean","default":"false","description":"If set to true, Merkle tree calculations will be memoized to improve the remote cache hit checking speed. The memory foot print of the cache is controlled by --experimental_remote_merkle_tree_cache_size.","tags":[""]},{"name":"experimental_remote_merkle_tree_cache_size","type":"long integer","default":"1000","description":"The number of Merkle trees to memoize to improve the remote cache hit checking speed. Even though the cache is automatically pruned according to Java's handling of soft references, out-of-memory errors can occur if set too high. If set to 0  the cache size is unlimited. Optimal value varies depending on project's size. Default to 1000.","tags":[""]},{"name":"incompatible_remote_build_event_upload_respect_no_cache","type":"boolean","default":"false","description":"If set to true, outputs referenced by BEP are not uploaded to remote cache if the generating action cannot be cached remotely.","tags":[""]},{"name":"incompatible_remote_downloader_send_all_headers","type":"boolean","default":"true","description":"Whether to send all values of a multi-valued header to the remote downloader instead of just the first.","tags":["incompatible_change"]},{"name":"incompatible_remote_output_paths_relative_to_input_root","type":"boolean","default":"false","description":"If set to true, output paths are relative to input root instead of working directory.","tags":["incompatible_change"]},{"name":"incompatible_remote_results_ignore_disk","type":"boolean","default":"true","description":"If set to true, --noremote_upload_local_results and --noremote_accept_cached will not apply to the disk cache. If a combined cache is used:","tags":[""]},{"name":"incompatible_remote_use_new_exit_code_for_lost_inputs","type":"boolean","default":"false","description":"If set to true, Bazel will use new exit code 39 instead of 34 if remote cache evicts blobs during the build.","tags":["incompatible_change"]},{"name":"remote_accept_cached","type":"boolean","default":"true","description":"Whether to accept remotely cached action results.","tags":[""]},{"name":"remote_bytestream_uri_prefix","type":"string","default":"see description","description":"The hostname and instance name to be used in bytestream:// URIs that are written into build event streams. This option can be set when builds are performed using a proxy, which causes the values of --remote_executor and --remote_instance_name to no longer correspond to the canonical name of the remote execution service. When not set, it will default to \"${hostname}/${instance_name}\".","tags":[""]},{"name":"remote_cache","type":"string","default":"see description","description":"A URI of a caching endpoint. The supported schemas are http, https, grpc, grpcs (grpc with TLS enabled) and unix (local UNIX sockets). If no schema is provided Bazel will default to grpcs. Specify grpc://, http:// or unix: schema to disable TLS. See https://bazel.build/remote/caching","tags":[""]},{"name":"remote_cache_header","type":"'name=value' assignment","default":"may be used multiple times","description":"Specify a header that will be included in cache requests: --remote_cache_header=Name=Value. Multiple headers can be passed by specifying the flag multiple times. Multiple values for the same name will be converted to a comma-separated list.","tags":[""]},{"name":"remote_default_exec_properties","type":"'name=value' assignment","default":"may be used multiple times","description":"Set the default exec properties to be used as the remote execution platform if an execution platform does not already set exec_properties.","tags":["affects_outputs"]},{"name":"remote_default_platform_properties","type":"string","default":"","description":"Set the default platform properties to be set for the remote execution API, if the execution platform does not already set remote_execution_properties. This value will also be used if the host platform is selected as the execution platform for remote execution.","tags":[""]},{"name":"remote_downloader_header","type":"'name=value' assignment","default":"may be used multiple times","description":"Specify a header that will be included in remote downloader requests: --remote_downloader_header=Name=Value. Multiple headers can be passed by specifying the flag multiple times. Multiple values for the same name will be converted to a comma-separated list.","tags":[""]},{"name":"remote_exec_header","type":"'name=value' assignment","default":"may be used multiple times","description":"Specify a header that will be included in execution requests: --remote_exec_header=Name=Value. Multiple headers can be passed by specifying the flag multiple times. Multiple values for the same name will be converted to a comma-separated list.","tags":[""]},{"name":"remote_execution_priority","type":"integer","default":"0","description":"The relative priority of actions to be executed remotely. The semantics of the particular priority values are server-dependent.","tags":[""]},{"name":"remote_executor","type":"string","default":"see description","description":"HOST or HOST:PORT of a remote execution endpoint. The supported schemas are grpc, grpcs (grpc with TLS enabled) and unix (local UNIX sockets). If no schema is provided Bazel will default to grpcs. Specify grpc:// or unix: schema to disable TLS.","tags":[""]},{"name":"remote_grpc_log","type":"path","default":"see description","description":"If specified, a path to a file to log gRPC call related details. This log consists of a sequence of serialized com.google.devtools.build.lib.remote.logging.RemoteExecutionLog.LogEntry protobufs with each message prefixed by a varint denoting the size of the following serialized protobuf message, as performed by the method LogEntry.writeDelimitedTo(OutputStream).","tags":[""]},{"name":"remote_header","type":"'name=value' assignment","default":"may be used multiple times","description":"Specify a header that will be included in requests: --remote_header=Name=Value. Multiple headers can be passed by specifying the flag multiple times. Multiple values for the same name will be converted to a comma-separated list.","tags":[""]},{"name":"remote_instance_name","type":"string","default":"","description":"Value to pass as instance_name in the remote execution API.","tags":[""]},{"name":"remote_local_fallback","type":"boolean","default":"false","description":"Whether to fall back to standalone local execution strategy if remote execution fails.","tags":[""]},{"name":"remote_local_fallback_strategy","type":"string","default":"local","description":"No-op, deprecated. See https://github.com/bazelbuild/bazel/issues/7480 for details.","tags":[""]},{"name":"remote_max_connections","type":"integer","default":"100","description":"Limit the max number of concurrent connections to remote cache/executor. By default the value is 100. Setting this to 0 means no limitation.For HTTP remote cache, one TCP connection could handle one request at one time, so Bazel could make up to --remote_max_connections concurrent requests.For gRPC remote cache/executor, one gRPC channel could usually handle 100+ concurrent requests, so Bazel could make around `--remote_max_connections * 100` concurrent requests.","tags":["host_machine_resource_optimizations"]},{"name":"remote_proxy","type":"string","default":"see description","description":"Connect to the remote cache through a proxy. Currently this flag can only be used to configure a Unix domain socket (unix:/path/to/socket).","tags":[""]},{"name":"remote_result_cache_priority","type":"integer","default":"0","description":"The relative priority of remote actions to be stored in remote cache. The semantics of the particular priority values are server-dependent.","tags":[""]},{"name":"remote_retries","type":"integer","default":"5","description":"The maximum number of attempts to retry a transient error. If set to 0, retries are disabled.","tags":[""]},{"name":"remote_retry_max_delay","type":"An immutable length of time.","default":"5s","description":"The maximum backoff delay between remote retry attempts. Following units can be used: Days (d), hours (h), minutes (m), seconds (s), and milliseconds (ms). If the unit is omitted, the value is interpreted as seconds.","tags":[""]},{"name":"remote_timeout","type":"An immutable length of time.","default":"60s","description":"The maximum amount of time to wait for remote execution and cache calls. For the REST cache, this is both the connect and the read timeout. Following units can be used: Days (d), hours (h), minutes (m), seconds (s), and milliseconds (ms). If the unit is omitted, the value is interpreted as seconds.","tags":[""]},{"name":"remote_upload_local_results","type":"boolean","default":"true","description":"Whether to upload locally executed action results to the remote cache if the remote cache supports it and the user is authorized to do so.","tags":[""]},{"name":"remote_verify_downloads","type":"boolean","default":"true","description":"If set to true, Bazel will compute the hash sum of all remote downloads and  discard the remotely cached values if they don't match the expected value.","tags":[""]},{"name":"build_metadata","type":"'name=value' assignment","default":"may be used multiple times","description":"Custom key-value string pairs to supply in a build event.","tags":["terminal_output"]},{"name":"color","type":"yes, no or auto","default":"auto","description":"Use terminal controls to colorize output.","tags":[""]},{"name":"config","type":"string","default":"may be used multiple times","description":"Selects additional config sections from the rc files; for every \u003ccommand\u003e, it also pulls in the options from \u003ccommand\u003e:\u003cconfig\u003e if such a section exists; if this section doesn't exist in any .rc file, Blaze fails with an error. The config sections and flag combinations they are equivalent to are located in the tools/*.blazerc config files.","tags":[""]},{"name":"curses","type":"yes, no or auto","default":"auto","description":"Use terminal cursor controls to minimize scrolling output.","tags":[""]},{"name":"deleted_packages","type":"comma-separated list of package names","default":"","description":"A comma-separated list of names of packages which the build system will consider non-existent, even if they are visible somewhere on the package path.Use this option when deleting a subpackage 'x/y' of an existing package 'x'.  For example, after deleting x/y/BUILD in your client, the build system may complain if it encounters a label '//x:y/z' if that is still provided by another package_path entry.  Specifying --deleted_packages x/y avoids this problem.","tags":[""]},{"name":"disk_cache","type":"path","default":"see description","description":"A path to a directory where Bazel can read and write actions and action outputs. If the directory does not exist, it will be created.","tags":[""]},{"name":"enable_platform_specific_config","type":"boolean","default":"false","description":"If true, Bazel picks up host-OS-specific config lines from bazelrc files. For example, if the host OS is Linux and you run bazel build, Bazel picks up lines starting with build:linux. Supported OS identifiers are linux, macos, windows, freebsd, and openbsd. Enabling this flag is equivalent to using --config=linux on Linux, --config=windows on Windows, etc.","tags":[""]},{"name":"experimental_credential_helper","type":"An (unresolved) path to a credential helper for a scope.","default":"may be used multiple times","description":"Configures Credential Helpers to use for retrieving credentials for the provided scope (domain).","tags":[""]},{"name":"experimental_credential_helper_cache_duration","type":"An immutable length of time.","default":"30m","description":"Configures the duration for which credentials from Credential Helpers are cached.","tags":[""]},{"name":"experimental_credential_helper_timeout","type":"An immutable length of time.","default":"5s","description":"Configures the timeout for the Credential Helper.","tags":[""]},{"name":"experimental_skymeld_ui","type":"boolean","default":"false","description":"Displays both analysis and execution phase progress when both are running concurrently.","tags":["terminal_output"]},{"name":"experimental_windows_watchfs","type":"boolean","default":"false","description":"If true, experimental Windows support for --watchfs is enabled. Otherwise --watchfsis a non-op on Windows. Make sure to also enable --watchfs.","tags":[""]},{"name":"google_auth_scopes","type":"comma-separated list of options","default":"https://www.googleapis.com/auth/cloud-platform","description":"A comma-separated list of Google Cloud authentication scopes.","tags":[""]},{"name":"google_credentials","type":"string","default":"see description","description":"Specifies the file to get authentication credentials from. See https://cloud.google.com/docs/authentication for details.","tags":[""]},{"name":"google_default_credentials","type":"boolean","default":"false","description":"Whether to use 'Google Application Default Credentials' for authentication. See https://cloud.google.com/docs/authentication for details. Disabled by default.","tags":[""]},{"name":"grpc_keepalive_time","type":"An immutable length of time.","default":"see description","description":"Configures keep-alive pings for outgoing gRPC connections. If this is set, then Bazel sends pings after this much time of no read operations on the connection, but only if there is at least one pending gRPC call. Times are treated as second granularity; it is an error to set a value less than one second. By default, keep-alive pings are disabled. You should coordinate with the service owner before enabling this setting. For example to set a value of 30 seconds to this flag, it should be done as this --grpc_keepalive_time=30s","tags":[""]},{"name":"grpc_keepalive_timeout","type":"An immutable length of time.","default":"20s","description":"Configures a keep-alive timeout for outgoing gRPC connections. If keep-alive pings are enabled with --grpc_keepalive_time, then Bazel times out a connection if it does not receive a ping reply after this much time. Times are treated as second granularity; it is an error to set a value less than one second. If keep-alive pings are disabled, then this setting is ignored.","tags":[""]},{"name":"incompatible_disallow_symlink_file_to_dir","type":"boolean","default":"true","description":"If set to true, `ctx.actions.symlink` will disallow symlinking a file into a directory.","tags":["loading_and_analysis","incompatible_change"]},{"name":"incompatible_remove_rule_name_parameter","type":"boolean","default":"true","description":"If set to true, `rule` can't be called with the `name` parameter.","tags":["loading_and_analysis","incompatible_change"]},{"name":"override_repository","type":"equals-separated mapping of repository name to path","default":"may be used multiple times","description":"Override a repository with a local path in the form of \u003crepository name\u003e=\u003cpath\u003e. If the given path is an absolute path, it will be used as it is. If the given path is a relative path, it is relative to the current working directory. If the given path starts with '%workspace%, it is relative to the workspace root, which is the output of `bazel info workspace`","tags":[""]},{"name":"package_path","type":"colon-separated list of options","default":"%workspace%","description":"A colon-separated list of where to look for packages. Elements beginning with '%workspace%' are relative to the enclosing workspace. If omitted or empty, the default is the output of 'bazel info default-package-path'.","tags":[""]},{"name":"progress_in_terminal_title","type":"boolean","default":"false","description":"Show the command progress in the terminal title. Useful to see what bazel is doing when having multiple terminal tabs.","tags":[""]},{"name":"show_loading_progress","type":"boolean","default":"true","description":"If enabled, causes Bazel to print \"Loading package:\" messages.","tags":[""]},{"name":"show_progress","type":"boolean","default":"true","description":"Display progress messages during a build.","tags":[""]},{"name":"show_progress_rate_limit","type":"double","default":"0.2","description":"Minimum number of seconds between progress messages in the output.","tags":[""]},{"name":"show_timestamps","type":"boolean","default":"false","description":"Include timestamps in messages","tags":[""]},{"name":"tls_certificate","type":"string","default":"see description","description":"Specify a path to a TLS certificate that is trusted to sign server certificates.","tags":[""]},{"name":"tls_client_certificate","type":"string","default":"see description","description":"Specify the TLS client certificate to use; you also need to provide a client key to enable client authentication.","tags":[""]},{"name":"tls_client_key","type":"string","default":"see description","description":"Specify the TLS client key to use; you also need to provide a client certificate to enable client authentication.","tags":[""]},{"name":"ui_actions_shown","type":"integer","default":"8","description":"Number of concurrent actions shown in the detailed progress bar; each action is shown on a separate line. The progress bar always shows at least one one, all numbers less than 1 are mapped to 1.","tags":["terminal_output"]},{"name":"watchfs","type":"boolean","default":"false","description":"On Linux/macOS: If true, bazel tries to use the operating system's file watch service for local changes instead of scanning every file for a change. On Windows: this flag currently is a non-op but can be enabled in conjunction with --experimental_windows_watchfs. On any OS: The behavior is undefined if your workspace is on a network file system, and files are edited on a remote machine.","tags":[""]}]