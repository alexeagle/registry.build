[{"name":"experimental_oom_more_eagerly_threshold","short":"","type":"integer","default":"default: \"100\"","description":"    If this flag is set to a value less than 100, Bazel will OOM if, after two \n    full GC's, more than this percentage of the (old gen) heap is still \n    occupied.\n","tags":["host_machine_resource_optimizations"],"sources":[]},{"name":"incompatible_require_feature_configuration_for_pic","short":"","type":"boolean","default":"default: \"true\"","description":"    If true, cc_toolchain_info.use_pic_for_dynamic_libraries will require \n    feature_configuration argument (see #7007).\n","tags":["loading_and_analysis","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"iff_heap_size_greater_than","short":"","type":"integer","default":"default: \"0\"","description":"    Iff non-zero, then shutdown will only shut down the server if the total \n    memory (in MB) consumed by the JVM exceeds this value.\n","tags":["loses_incremental_state","eagerness_to_exit"],"sources":[]},{"name":"check_third_party_targets_have_licenses","short":"","type":"boolean","default":"default: \"true\"","description":"    If true, all rules and files under //third_party must declare licenses([])\n","tags":["build_file_semantics"],"sources":[]},{"name":"experimental_enable_android_migration_apis","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, enables the APIs required to support the Android Starlark \n    migration.\n","tags":["build_file_semantics"],"sources":[]},{"name":"experimental_platforms_api","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, enables a number of platform-related Starlark APIs useful \n    for debugging.\n","tags":["loading_and_analysis","experimental"],"sources":[]},{"name":"experimental_starlark_config_transitions","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, enables creation of configuration transition objects (the \n    `transition()` function) in Starlark.\n","tags":["loading_and_analysis","experimental"],"sources":[]},{"name":"incompatible_bzl_disallow_load_after_statement","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, all `load` must be called at the top of .bzl files, before \n    any other statement.\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_depset_is_not_iterable","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, depset type is not iterable. For loops and functions \n    expecting an iterable will reject depset objects. Use the `.to_list` method \n    to explicitly convert to a list.\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_depset_union","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, depset union using `+`, `|` or `.union` are forbidden. Use \n    the `depset` constructor instead.\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_disable_deprecated_attr_params","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, disable the deprecated parameters 'single_file' and \n    'non_empty' on attribute definition methods, such as attr.label().\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_disable_objc_provider_resources","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, disallow use of deprecated resource fields on the Objc \n    provider.\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_disallow_data_transition","short":"","type":"boolean","default":"default: \"true\"","description":"    If set to true, rule attributes cannot set 'cfg = \"data\"', which is a noop.\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_disallow_dict_plus","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, the `+` becomes disabled for dicts.\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_disallow_filetype","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, function `FileType` is not available.\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_disallow_legacy_java_provider","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, usages of old .java provider are disallowed.\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_disallow_legacy_javainfo","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, old-style JavaInfo provider construction is disallowed.\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_disallow_load_labels_to_cross_package_boundaries","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, the label argument to 'load' cannot cross a package \n    boundary.\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_disallow_old_style_args_add","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, vectorized calls to Args#add are disallowed.\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_disallow_struct_provider_syntax","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, rule implementation functions may not return a struct. They \n    must instead return a list of provider instances.\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_generate_javacommon_source_jar","short":"","type":"boolean","default":"default: \"true\"","description":"    If set to true, java_common.compile will always generate an output source \n    jar.\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_new_actions_api","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, the API to create actions is only available on `ctx.\n    actions`, not on `ctx`.\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_no_attr_license","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, disables the function `attr.license`.\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_no_output_attr_default","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, disables the `default` parameter of the `attr.output` and \n    `attr.output_list` attribute definition functions.\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_no_support_tools_in_action_inputs","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, tools should be passed to `ctx.actions.run()` and `ctx.\n    actions.run_shell()` using the `tools` parameter instead of the `inputs` \n    parameter. Furthermore, if this flag is set and a `tools` parameter is not \n    passed to the action, it is an error for any tools to appear in the \n    `inputs`.\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_no_target_output_group","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, disables the output_group field of the 'Target' Starlark \n    type.\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_no_transitive_loads","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, only symbols explicitly defined in the file can be loaded; \n    symbols introduced by load are not implicitly re-exported.\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_remap_main_repo","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, will treat references to '@\u003cmain repo name\u003e' the same as \n    '@'.\n","tags":["loading_and_analysis","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_remove_native_maven_jar","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, the native maven_jar rule is disabled; only the Starlark \n    version will be available\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_strict_argument_ordering","short":"","type":"boolean","default":"default: \"true\"","description":"    If set to true, the order of arguments is stricter in function calls, see \n    https://github.com/bazelbuild/bazel/issues/6611\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_string_is_not_iterable","short":"","type":"boolean","default":"default: \"true\"","description":"    If set to true, iterating over a string will throw an error. String \n    indexing and `len` are still allowed.\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_use_toolchain_providers_in_java_common","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, java_common APIs that take a java_toolchain or \n    host_javabase parameter  require a JavaTootoolchainInfo or JavaRuntimeInfo \n    instead of a configured target.\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"keep_state_after_build","short":"","type":"boolean","default":"default: \"true\"","description":"    If false, Blaze will discard the inmemory state from this build when the \n    build finishes. Subsequent builds will not have any incrementality with \n    respect to this one.\n","tags":["loses_incremental_state"],"sources":[]},{"name":"track_incremental_state","short":"","type":"boolean","default":"default: \"true\"","description":"    If false, Blaze will not persist data that allows for invalidation and re-\n    evaluation on incremental builds in order to save memory on this build. \n    Subsequent builds will not have any incrementality with respect to this \n    one. Usually you will want to specify --batch when setting this to false.\n","tags":["loses_incremental_state"],"sources":[]},{"name":"announce_rc","short":"","type":"boolean","default":"default: \"false\"","description":"    Whether to announce rc options.\n","tags":["affects_outputs"],"sources":[]},{"name":"attempt_to_print_relative_paths","short":"","type":"boolean","default":"default: \"false\"","description":"    When printing the location part of messages, attempt to use a path relative \n    to the workspace directory or one of the directories specified by --\n    package_path.\n","tags":["terminal_output"],"sources":[]},{"name":"bep_publish_used_heap_size_post_build","short":"","type":"boolean","default":"default: \"false\"","description":"When set we collect and publish used_heap_size_post_build from build_event_stream.proto. This forces a full GC and is off by default.","tags":[],"sources":[]},{"name":"bes_backend","short":"","type":"string","default":"default: \"\"","description":"    Specifies the build event service (BES) backend endpoint as HOST or HOST:\n    PORT. Disabled by default.\n","tags":["affects_outputs"],"sources":[]},{"name":"bes_best_effort","short":"","type":"boolean","default":"default: \"false\"","description":"    BES best effort upload has been removed. The flag has no more functionality \n    attached to it and will be removed in a future release.\n","tags":["affects_outputs"],"sources":[]},{"name":"bes_keywords","short":"","type":"comma-separated list of options","default":"may be used multiple times","description":"    Specifies a list of notification keywords to be added the default set of \n    keywords published to BES (\"command_name=\u003ccommand_name\u003e \", \n    \"protocol_name=BEP\"). Defaults to none.\n","tags":["affects_outputs"],"sources":[]},{"name":"bes_lifecycle_events","short":"","type":"boolean","default":"default: \"true\"","description":"    Specifies whether to publish BES lifecycle events. (defaults to 'true').\n","tags":["affects_outputs"],"sources":[]},{"name":"bes_outerr_buffer_size","short":"","type":"long integer","default":"default: \"10240\"","description":"    Specifies the maximal size of stdout or stderr to be buffered in BEP, \n    before it is reported as a progress event. Individual writes are still \n    reported in a single event, even if larger than the specified value.\n","tags":["affects_outputs"],"sources":[]},{"name":"bes_results_url","short":"","type":"string","default":"default: \"\"","description":"    Specifies the base URL where a user can view the information streamed to \n    the BES backend. Bazel will output the URL appended by the invocation id to \n    the terminal.\n","tags":["terminal_output"],"sources":[]},{"name":"bes_timeout","short":"","type":"An immutable length of time.","default":"default: \"0s\"","description":"    Specifies how long bazel should wait for the BES/BEP upload to complete \n    after the build and tests have finished. A valid timeout is a natural \n    number followed by a unit: Days (d), hours (h), minutes (m), seconds (s), \n    and milliseconds (ms). The default value is '0' which means that there is \n    no timeout.\n","tags":["affects_outputs"],"sources":[]},{"name":"build_event_binary_file","short":"","type":"string","default":"default: \"\"","description":"    If non-empty, write a varint delimited binary representation of \n    representation of the build event protocol to that file.\n","tags":["affects_outputs"],"sources":[]},{"name":"build_event_binary_file_path_conversion","short":"","type":"boolean","default":"default: \"true\"","description":"    Convert paths in the binary file representation of the build event protocol \n    to more globally valid URIs whenever possible; if disabled, the file:// uri \n    scheme will always be used\n","tags":["affects_outputs"],"sources":[]},{"name":"build_event_json_file","short":"","type":"string","default":"default: \"\"","description":"    If non-empty, write a JSON serialisation of the build event protocol to \n    that file.\n","tags":["affects_outputs"],"sources":[]},{"name":"build_event_max_named_set_of_file_entries","short":"","type":"integer","default":"default: \"-1\"","description":"    The maximum number of entries for a single named_set_of_files event; values \n    smaller than 2 are ignored and no event splitting is performed. This is \n    intended for limiting the maximum event size in the build event protocol, \n    although it does not directly control event size. The total event size is a \n    function of the structure of the set as well as the file and uri lengths, \n    which may in turn depend on the hash function.\n","tags":["affects_outputs"],"sources":[]},{"name":"build_event_publish_all_actions","short":"","type":"boolean","default":"default: \"false\"","description":"    Whether all actions should be published.\n","tags":["affects_outputs"],"sources":[]},{"name":"build_event_text_file","short":"","type":"string","default":"default: \"\"","description":"    If non-empty, write a textual representation of the build event protocol to \n    that file\n","tags":["affects_outputs"],"sources":[]},{"name":"build_event_text_file_path_conversion","short":"","type":"boolean","default":"default: \"true\"","description":"    Convert paths in the text file representation of the build event protocol \n    to more globally valid URIs whenever possible; if disabled, the file:// uri \n    scheme will always be used\n","tags":["affects_outputs"],"sources":[]},{"name":"experimental_build_event_json_file_path_conversion","short":"","type":"boolean","default":"default: \"true\"","description":"    Convert paths in the json file representation of the build event protocol \n    to more globally valid URIs whenever possible; if disabled, the file:// uri \n    scheme will always be used\n","tags":["affects_outputs"],"sources":[]},{"name":"experimental_build_event_upload_strategy","short":"","type":"string","default":"default: see description","description":"    Selects how to upload artifacts referenced in the build event protocol.\n","tags":["affects_outputs"],"sources":[]},{"name":"experimental_generate_json_trace_profile","short":"","type":"boolean","default":"default: \"false\"","description":"    If enabled, Bazel profiles the build and writes a JSON-format profile into \n    a file in the output base.\n","tags":["affects_outputs","bazel_monitoring"],"sources":[]},{"name":"experimental_json_trace_compression","short":"","type":"boolean","default":"default: \"false\"","description":"    If enabled, Bazel compresses the JSON-format profile with gzip.\n","tags":["affects_outputs","bazel_monitoring"],"sources":[]},{"name":"experimental_post_profile_started_event","short":"","type":"boolean","default":"default: \"false\"","description":"    If set, Bazel will post the ProfilerStartedEvent including the path to the \n    profile.\n","tags":["affects_outputs","bazel_monitoring"],"sources":[]},{"name":"experimental_profile_cpu_usage","short":"","type":"boolean","default":"default: \"false\"","description":"    If set, Bazel will measure cpu usage and add it to the JSON profile.\n","tags":["affects_outputs","bazel_monitoring"],"sources":[]},{"name":"experimental_ui_deduplicate","short":"","type":"boolean","default":"default: \"false\"","description":"    Make the experimental UI deduplicate messages to have a cleaner scroll-back \n    log.\n","tags":["terminal_output"],"sources":[]},{"name":"experimental_workspace_rules_log_file","short":"","type":"string","default":"default: see description","description":"Log certain Workspace Rules events into this file as delimited WorkspaceEvent protos.","tags":[],"sources":[]},{"name":"legacy_important_outputs","short":"","type":"boolean","default":"default: \"true\"","description":"    Use this to suppress generation of the legacy important_outputs field in \n    the TargetComplete event.\n","tags":["affects_outputs"],"sources":[]},{"name":"logging","short":"","type":"0 \u003c= an integer \u003c= 6","default":"default: \"3\"","description":"    The logging level.\n","tags":["affects_outputs"],"sources":[]},{"name":"memory_profile_stable_heap_parameters","short":"","type":"two integers, separated by a comma","default":"default: \"1,0\"","description":"    Tune memory profile's computation of stable heap at end of build. Should be \n    two integers separated by a comma. First parameter is the number of GCs to \n    perform. Second parameter is the number of seconds to wait between GCs.\n","tags":["bazel_monitoring"],"sources":[]},{"name":"profile","short":"","type":"path","default":"default: see description","description":"    If set, profile Bazel and write data to the specified file. Use bazel \n    analyze-profile to analyze the profile.\n","tags":["affects_outputs","bazel_monitoring"],"sources":[]},{"name":"project_id","short":"","type":"string","default":"default: see description","description":"    Specifies the BES project identifier. Defaults to null.\n","tags":["affects_outputs"],"sources":[]},{"name":"tool_tag","short":"","type":"string","default":"default: \"\"","description":"    A tool name to attribute this Bazel invocation to.\n","tags":["affects_outputs","bazel_monitoring"],"sources":[]},{"name":"all_incompatible_changes","short":"","type":"","default":"","description":"    Enables all options of the form --incompatible_*. Use this option to find \n    places where your build may break in the future due to deprecations or \n    other changes.\n      Expands to: --incompatible_bzl_disallow_load_after_statement --\n      incompatible_depset_is_not_iterable --incompatible_depset_union --\n      incompatible_disable_deprecated_attr_params --\n      incompatible_disable_objc_provider_resources --\n      incompatible_disallow_data_transition --incompatible_disallow_dict_plus --\n      incompatible_disallow_filetype --\n      incompatible_disallow_legacy_java_provider --\n      incompatible_disallow_legacy_javainfo --\n      incompatible_disallow_load_labels_to_cross_package_boundaries --\n      incompatible_disallow_old_style_args_add --\n      incompatible_disallow_struct_provider_syntax --\n      incompatible_expand_directories --\n      incompatible_generate_javacommon_source_jar --\n      incompatible_new_actions_api --incompatible_no_attr_license --\n      incompatible_no_output_attr_default --\n      incompatible_no_support_tools_in_action_inputs --\n      incompatible_no_target_output_group --incompatible_no_transitive_loads --\n      incompatible_remap_main_repo --incompatible_remove_native_maven_jar --\n      incompatible_require_feature_configuration_for_pic --\n      incompatible_strict_argument_ordering --\n      incompatible_string_is_not_iterable --\n      incompatible_use_toolchain_providers_in_java_common \n","tags":["incompatible_change"],"sources":[]},{"name":"color","short":"","type":"yes, no or auto","default":"default: \"auto\"","description":"Use terminal controls to colorize output going to stderr.","tags":[],"sources":[]},{"name":"config","short":"","type":"string","default":"may be used multiple times","description":"Selects additional config sections from the rc files; for every \u003ccommand\u003e, it also pulls in the options from \u003ccommand\u003e:\u003cconfig\u003e if such a section exists; if this section doesn't exist in any .rc file, Blaze fails with an error. The config sections and flag combinations they are equivalent to are located in the tools/*.blazerc config files.","tags":[],"sources":[]},{"name":"curses","short":"","type":"yes, no or auto","default":"default: \"auto\"","description":"Use terminal cursor controls to minimize scrolling output going to stderr.","tags":[],"sources":[]},{"name":"experimental_external_repositories","short":"","type":"boolean","default":"default: \"false\"","description":"Use external repositories for improved stability and speed when available.","tags":[],"sources":[]},{"name":"experimental_multi_threaded_digest","short":"","type":"boolean","default":"default: \"false\"","description":"Whether to always compute MD5 digests of files with multiple threads. Might improve performance when using an SSD.","tags":[],"sources":[]},{"name":"experimental_ui","short":"","type":"boolean","default":"default: \"true\"","description":"Switches to an alternative progress bar that more explicitly shows progress, such as loaded packages and executed actions.","tags":[],"sources":[]},{"name":"experimental_ui_actions_shown","short":"","type":"integer","default":"default: \"8\"","description":"Number of concurrent actions shown in the alternative progress bar; each action is shown on a separate line. The alternative progress bar always shows at least one one, all numbers less than 1 are mapped to 1. This option has no effect unless --experimental_ui is set.","tags":[],"sources":[]},{"name":"experimental_ui_limit_console_output","short":"","type":"integer","default":"default: \"0\"","description":"Number of bytes to which the experimental UI will limit its output (non-positive values indicate unlimited). Once the limit is approaching, the experimental UI will try hard to limit in a meaningful way, but will ultimately just drop all output.","tags":[],"sources":[]},{"name":"force_experimental_external_repositories","short":"","type":"boolean","default":"default: \"false\"","description":"Forces --experimental_external_repositories.","tags":[],"sources":[]},{"name":"google_auth_scopes","short":"","type":"comma-separated list of options","default":"default: \"https://www.googleapis.com/auth/cloud-platform\"","description":"A comma-separated list of Google Cloud authentication scopes.","tags":[],"sources":[]},{"name":"google_credentials","short":"","type":"string","default":"default: see description","description":"Specifies the file to get authentication credentials from. See https://cloud.google.com/docs/authentication for details.","tags":[],"sources":[]},{"name":"google_default_credentials","short":"","type":"boolean","default":"default: \"false\"","description":"Whether to use 'Google Application Default Credentials' for authentication. See https://cloud.google.com/docs/authentication for details. Disabled by default.","tags":[],"sources":[]},{"name":"incompatible_expand_directories","short":"","type":"boolean","default":"default: \"true\"","description":"    Controls whether directories are expanded to the list of files under that \n    directory when added to Args, instead of replaced by the path of the \n    directory.\n","tags":["incompatible_change","triggered_by_all_incompatible_changes"],"sources":[]},{"name":"progress_in_terminal_title","short":"","type":"boolean","default":"default: \"false\"","description":"Show the command progress in the terminal title. Useful to see what bazel is doing when having multiple terminal tabs.","tags":[],"sources":[]},{"name":"show_progress","short":"","type":"boolean","default":"default: \"true\"","description":"Display progress messages during a build.","tags":[],"sources":[]},{"name":"show_progress_rate_limit","short":"","type":"double","default":"default: \"0.2\"","description":"Minimum number of seconds between progress messages in the output.","tags":[],"sources":[]},{"name":"show_task_finish","short":"","type":"boolean","default":"default: \"false\"","description":"Display progress messages when tasks complete, not just when they start.","tags":[],"sources":[]},{"name":"show_timestamps","short":"","type":"boolean","default":"default: \"false\"","description":"Include timestamps in messages","tags":[],"sources":[]},{"name":"tls_certificate","short":"","type":"string","default":"default: see description","description":"Specify the TLS client certificate to use.","tags":[],"sources":[]},{"name":"tls_enabled","short":"","type":"boolean","default":"default: \"false\"","description":"Specifies whether to use TLS for remote execution/caching and the build event service (BES).","tags":[],"sources":[]},{"name":"watchfs","short":"","type":"boolean","default":"default: \"false\"","description":"If true, bazel tries to use the operating system's file watch service for local changes instead of scanning every file for a change.","tags":[],"sources":[]}]