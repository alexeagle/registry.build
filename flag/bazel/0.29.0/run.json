[{"name":"distdir","short":"","type":"path","default":"may be used multiple times","description":"    Additional places to search for archives before accessing the network to \n    download them.\n","tags":["bazel_internal_configuration"],"sources":[]},{"name":"experimental_repository_cache_hardlinks","short":"","type":"boolean","default":"default: \"false\"","description":"    If set, the repository cache will hardlink the file in case of a cache hit, \n    rather than copying. This is inteded to save disk space.\n","tags":["bazel_internal_configuration"],"sources":[]},{"name":"experimental_scale_timeouts","short":"","type":"double","default":"default: \"1.0\"","description":"    Scale all timeouts in Starlark repository rules by this factor. In this \n    way, external repositories can be made working on machines that are slower \n    than the rule author expected, without changing the source code\n","tags":["bazel_internal_configuration","experimental"],"sources":[]},{"name":"http_timeout_scaling","short":"","type":"double","default":"default: \"1.0\"","description":"    Scale all timeouts related to http downloads by the given factor\n","tags":["bazel_internal_configuration"],"sources":[]},{"name":"repository_cache","short":"","type":"path","default":"default: see description","description":"    Specifies the cache location of the downloaded values obtained during the \n    fetching of external repositories. An empty string as argument requests the \n    cache to be disabled.\n","tags":["bazel_internal_configuration"],"sources":[]},{"name":"experimental_docker_image","short":"","type":"string","default":"default: \"\"","description":"    Specify a Docker image name (e.g. \"ubuntu:latest\") that should be used to \n    execute a sandboxed action when using the docker strategy and the action \n    itself doesn't already have a container-image attribute in its \n    remote_execution_properties in the platform description. The value of this \n    flag is passed verbatim to 'docker run', so it supports the same syntax and \n    mechanisms as Docker itself.\n","tags":["execution"],"sources":[]},{"name":"experimental_docker_privileged","short":"","type":"boolean","default":"default: \"false\"","description":"    If enabled, Bazel will pass the --privileged flag to 'docker run' when \n    running actions. This might be required by your build, but it might also \n    result in reduced hermeticity.\n","tags":["execution"],"sources":[]},{"name":"experimental_docker_use_customized_images","short":"","type":"boolean","default":"default: \"true\"","description":"    If enabled, injects the uid and gid of the current user into the Docker \n    image before using it. This is required if your build / tests depend on the \n    user having a name and home directory inside the container. This is on by \n    default, but you can disable it in case the automatic image customization \n    feature doesn't work in your case or you know that you don't need it.\n","tags":["execution"],"sources":[]},{"name":"experimental_docker_verbose","short":"","type":"boolean","default":"default: \"false\"","description":"    If enabled, Bazel will print more verbose messages about the Docker sandbox \n    strategy.\n","tags":["execution"],"sources":[]},{"name":"experimental_enable_docker_sandbox","short":"","type":"boolean","default":"default: \"false\"","description":"    Enable Docker-based sandboxing. This option has no effect if Docker is not \n    installed.\n","tags":["execution"],"sources":[]},{"name":"experimental_oom_more_eagerly_threshold","short":"","type":"integer","default":"default: \"100\"","description":"    If this flag is set to a value less than 100, Bazel will OOM if, after two \n    full GC's, more than this percentage of the (old gen) heap is still \n    occupied.\n","tags":["host_machine_resource_optimizations"],"sources":[]},{"name":"experimental_sandbox_async_tree_delete_idle_threads","short":"","type":"integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]\u003cfloat\u003e) eg. \"auto\", \"HOST_CPUS*.5\"","default":"default: \"0\"","description":"    If 0, delete sandbox trees as soon as an action completes (causing \n    completion of the action to be delayed). If greater than zero, execute the \n    deletion of such threes on an asynchronous thread pool that has size 1 when \n    the build is running and grows to the size specified by this flag when the \n    server is idle.\n","tags":["execution"],"sources":[]},{"name":"experimental_sandboxfs_map_symlink_targets","short":"","type":"boolean","default":"default: \"false\"","description":"If true, maps the targets of symbolic links specified as action inputs into the sandbox. This feature exists purely to workaround buggy rules that do not do this on their own and should be removed once all such rules are fixed.","tags":[],"sources":[]},{"name":"experimental_sandboxfs_path","short":"","type":"string","default":"default: \"sandboxfs\"","description":"Path to the sandboxfs binary to use when --experimental_use_sandboxfs is true. If a bare name, use the first binary of that name found in the PATH.","tags":[],"sources":[]},{"name":"experimental_split_xml_generation","short":"","type":"boolean","default":"default: \"true\"","description":"    If this flag is set, and a test action does not generate a test.xml file, \n    then Bazel uses a separate action to generate a dummy test.xml file \n    containing the test log. Otherwise, Bazel generates a test.xml as part of \n    the test action.\n","tags":["execution"],"sources":[]},{"name":"experimental_strict_fileset_output","short":"","type":"boolean","default":"default: \"false\"","description":"    If this option is enabled, filesets will treat all output artifacts as \n    regular files. They will not traverse directories or be sensitive to \n    symlinks.\n","tags":["execution"],"sources":[]},{"name":"experimental_use_sandboxfs","short":"","type":"tri-state (auto, yes, no)","default":"default: \"false\"","description":"Use sandboxfs to create the actions' execroot directories instead of building a symlink tree. If \"yes\", the binary provided by --experimental_sandboxfs_path must be valid and correspond to a supported version of sandboxfs. If \"auto\", the binary may be missing or not compatible.","tags":[],"sources":[]},{"name":"experimental_use_windows_sandbox","short":"","type":"tri-state (auto, yes, no)","default":"default: \"false\"","description":"Use Windows sandbox to run actions. If \"yes\", the binary provided by --experimental_windows_sandbox_path must be valid and correspond to a supported version of sandboxfs. If \"auto\", the binary may be missing or not compatible.","tags":[],"sources":[]},{"name":"experimental_windows_sandbox_path","short":"","type":"string","default":"default: \"BazelSandbox.exe\"","description":"Path to the Windows sandbox binary to use when --experimental_use_windows_sandbox is true. If a bare name, use the first binary of that name found in the PATH.","tags":[],"sources":[]},{"name":"incompatible_list_based_execution_strategy_selection","short":"","type":"boolean","default":"default: \"true\"","description":"    See https://github.com/bazelbuild/bazel/issues/7480\n","tags":["execution","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_remote_symlinks","short":"","type":"boolean","default":"default: \"true\"","description":"    If set to true, Bazel will represent symlinks in action outputs in the \n    remote caching/execution protocol as such. The current behavior is for \n    remote caches/executors to follow symlinks and represent them as files. See \n    #6631 for details.\n","tags":["execution","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_remove_local_resources","short":"","type":"boolean","default":"default: \"false\"","description":"    Deprecate local_resources in favor of --local_ram_resources and --\n    local_cpu_resources.\n","tags":["execution","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_symlinked_sandbox_expands_tree_artifacts_in_runfiles_tree","short":"","type":"boolean","default":"default: \"true\"","description":"    If enabled, the sandbox will expand tree artifacts in runfiles, thus the \n    files that are contained in the tree artifact will be symlinked as \n    individual files.\n","tags":["execution","triggered_by_all_incompatible_changes","\n      incompatible_change"],"sources":[]},{"name":"jobs","short":"j","type":"integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]\u003cfloat\u003e) eg. \"auto\", \"HOST_CPUS*.5\"","default":"default: \"auto\"","description":"    The number of concurrent jobs to run. Takes {@value FLAG_SYNTAX}. Values \n    must be between 1 and5000 values above 2500 may cause memory issues. \"auto\" \n    calculates a reasonable default based on host resources.\n","tags":["host_machine_resource_optimizations","execution"],"sources":[]},{"name":"keep_going","short":"k","type":"boolean","default":"default: \"false\"","description":"    Continue as much as possible after an error.  While the target that failed \n    and those that depend on it cannot be analyzed, other prerequisites of \n    these targets can be.\n","tags":["eagerness_to_exit"],"sources":[]},{"name":"loading_phase_threads","short":"","type":"integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]\u003cfloat\u003e) eg. \"auto\", \"HOST_CPUS*.5\"","default":"default: \"auto\"","description":"    Number of parallel threads to use for the loading/analysis phase.Takes an \n    integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally \n    followed by an operation ([-|*]\u003cfloat\u003e) eg. \"auto\", \"HOST_CPUS*.5\". \"auto\" \n    sets a reasonable default based onhost resources. Must be at least 1.\n","tags":["bazel_internal_configuration"],"sources":[]},{"name":"modify_execution_info","short":"","type":"regex=[+-]key,regex=[+-]key,...","default":"default: \"\"","description":"    Add or remove keys from an action's execution info based on action \n    mnemonic.  Applies only to actions which support execution info. Many \n    common actions support execution info, e.g. Genrule, CppCompile, Javac, \n    SkylarkAction, TestRunner. When specifying multiple values, order matters \n    because many regexes may apply to the same mnemonic.\n    \n    Syntax: \"regex=[+-]key,[+-]key,...\".\n    \n    Examples:\n      '.*=+x,.*=-y,.*=+z' adds 'x' and 'z' to, and removes 'y' from, the \n    execution info for all actions.\n      'Genrule=+requires-x' adds 'requires-x' to the execution info for all \n    Genrule actions.\n      '(?!Genrule).*=-requires-x' removes 'requires-x' from the execution info \n    for all non-Genrule actions.\n    \n","tags":["execution","affects_outputs","loading_and_analysis"],"sources":[]},{"name":"persistent_android_resource_processor","short":"","type":"","default":"","description":"    Enable the persistent Android resource processor by using workers.\n      Expands to: --internal_persistent_busybox_tools --\n      strategy=AaptPackage=worker --strategy=AndroidResourceParser=worker --\n      strategy=AndroidResourceValidator=worker --\n      strategy=AndroidResourceCompiler=worker --strategy=RClassGenerator=worker \n      --strategy=AndroidResourceLink=worker --strategy=AndroidAapt2=worker --\n      strategy=AndroidAssetMerger=worker --\n      strategy=AndroidResourceMerger=worker --\n      strategy=AndroidCompiledResourceMerger=worker \n","tags":["host_machine_resource_optimizations","execution"],"sources":[]},{"name":"remote_allow_symlink_upload","short":"","type":"boolean","default":"default: \"true\"","description":"    If true, upload action symlink outputs to the remote cache. If this option \n    is not enabled, cachable actions that output symlinks will fail.\n","tags":["execution"],"sources":[]},{"name":"android_aapt","short":"","type":"aapt, aapt2 or auto","default":"default: \"auto\"","description":"    Selects the version of androidAaptVersion to use for android_binary rules.\n    Flag to help the test and transition to aapt2.\n","tags":["affects_outputs","loading_and_analysis","loses_incremental_state"],"sources":[]},{"name":"android_compiler","short":"","type":"string","default":"default: see description","description":"    The Android target compiler.\n","tags":["affects_outputs","loading_and_analysis","loses_incremental_state"],"sources":[]},{"name":"android_crosstool_top","short":"","type":"build target label","default":"default: \"//external:android/crosstool\"","description":"    The location of the C++ compiler used for Android builds.\n","tags":["affects_outputs","changes_inputs","loading_and_analysis","\n      loses_incremental_state"],"sources":[]},{"name":"android_grte_top","short":"","type":"label","default":"default: see description","description":"    The Android target grte_top.\n","tags":["changes_inputs","loading_and_analysis","loses_incremental_state"],"sources":[]},{"name":"android_manifest_merger","short":"","type":"legacy, android or force_android","default":"default: \"android\"","description":"    Selects the manifest merger to use for android_binary rules. Flag to help \n    thetransition to the Android manifest merger from the legacy merger.\n","tags":["affects_outputs","loading_and_analysis","loses_incremental_state"],"sources":[]},{"name":"android_sdk","short":"","type":"build target label","default":"default: \"@bazel_tools//tools/android:sdk\"","description":"    Specifies Android SDK/platform that is used to build Android applications.\n","tags":["changes_inputs","loading_and_analysis","loses_incremental_state"],"sources":[]},{"name":"apple_compiler","short":"","type":"string","default":"default: see description","description":"    The Apple target compiler. Useful for selecting variants of a toolchain (e.\n    g. xcode-beta).\n","tags":["affects_outputs","loading_and_analysis","loses_incremental_state"],"sources":[]},{"name":"apple_crosstool_top","short":"","type":"build target label","default":"default: \"@bazel_tools//tools/cpp:toolchain\"","description":"    The label of the crosstool package to be used in Apple and Objc rules and \n    their dependencies.\n","tags":["loses_incremental_state","changes_inputs"],"sources":[]},{"name":"apple_grte_top","short":"","type":"build target label","default":"default: see description","description":"    The Apple target grte_top.\n","tags":["changes_inputs","loading_and_analysis","loses_incremental_state"],"sources":[]},{"name":"apple_sdk","short":"","type":"build target label","default":"default: see description","description":"    Location of target that will provide the appropriate Apple SDK for the \n    current build configuration.\n","tags":["affects_outputs","loading_and_analysis"],"sources":[]},{"name":"cc_output_directory_tag","short":"","type":"string","default":"default: \"\"","description":"    Specifies a suffix to be added to the configuration directory.\n","tags":["affects_outputs"],"sources":[]},{"name":"compiler","short":"","type":"string","default":"default: see description","description":"    The C++ compiler to use for compiling the target.\n","tags":["loading_and_analysis","execution"],"sources":[]},{"name":"coverage_report_generator","short":"","type":"build target label","default":"default: \"@bazel_tools//tools/test:coverage_report_generator\"","description":"    Location of the binary that is used to generate coverage reports. This must \n    currently be a filegroup that contains a single file, the binary. Defaults \n    to '//tools/test:coverage_report_generator'.\n","tags":["changes_inputs","affects_outputs","loading_and_analysis"],"sources":[]},{"name":"coverage_support","short":"","type":"build target label","default":"default: \"@bazel_tools//tools/test:coverage_support\"","description":"    Location of support files that are required on the inputs of every test \n    action that collects code coverage. Defaults to '//tools/test:\n    coverage_support'.\n","tags":["changes_inputs","affects_outputs","loading_and_analysis"],"sources":[]},{"name":"crosstool_top","short":"","type":"build target label","default":"default: \"@bazel_tools//tools/cpp:toolchain\"","description":"    The label of the crosstool package to be used for compiling C++ code.\n","tags":["loading_and_analysis","changes_inputs","affects_outputs"],"sources":[]},{"name":"custom_malloc","short":"","type":"build target label","default":"default: see description","description":"    Specifies a custom malloc implementation. This setting overrides malloc \n    attributes in build rules.\n","tags":["changes_inputs","affects_outputs"],"sources":[]},{"name":"enabled_toolchain_types","short":"","type":"build target label","default":"default: \"\"","description":"    Enable toolchain resolution for the given toolchain type, if the rules used \n    support that. This does not directly change the core Blaze machinery, but \n    is a signal to participating rule implementations that toolchain resolution \n    should be used.\n","tags":["loading_and_analysis"],"sources":[]},{"name":"experimental_enable_objc_cc_deps","short":"","type":"boolean","default":"default: \"true\"","description":"    Allows objc_* rules to depend on cc_library and causes any objc \n    dependencies to be built with --cpu set to \"ios_\u003c--ios_cpu\u003e\" for any values \n    in --ios_multi_cpu.\n","tags":["loading_and_analysis","incompatible_change"],"sources":[]},{"name":"extra_execution_platforms","short":"","type":"comma-separated list of options","default":"may be used multiple times","description":"    The platforms that are available as execution platforms to run actions. \n    Platforms can be specified by exact target, or as a target pattern. These \n    platforms will be considered before those declared in the WORKSPACE file by \n    register_execution_platforms().\n","tags":["execution"],"sources":[]},{"name":"extra_toolchains","short":"","type":"comma-separated list of options","default":"may be used multiple times","description":"    The toolchain rules to be considered during toolchain resolution. \n    Toolchains can be specified by exact target, or as a target pattern. These \n    toolchains will be considered before those declared in the WORKSPACE file \n    by register_toolchains().\n","tags":["affects_outputs","changes_inputs","loading_and_analysis"],"sources":[]},{"name":"grte_top","short":"","type":"label","default":"default: see description","description":"    A label to a checked-in libc library. The default value is selected by the \n    crosstool toolchain, and you almost never need to override it.\n","tags":["action_command_lines","affects_outputs"],"sources":[]},{"name":"host_compiler","short":"","type":"string","default":"default: see description","description":"    The C++ compiler to use for host compilation. It is ignored if --\n    host_crosstool_top is not set.\n","tags":["loading_and_analysis","execution"],"sources":[]},{"name":"host_crosstool_top","short":"","type":"build target label","default":"default: see description","description":"    By default, the --crosstool_top and --compiler options are also used for \n    the host configuration. If this flag is provided, Bazel uses the default \n    libc and compiler for the given crosstool_top.\n","tags":["loading_and_analysis","changes_inputs","affects_outputs"],"sources":[]},{"name":"host_grte_top","short":"","type":"label","default":"default: see description","description":"    If specified, this setting overrides the libc top-level directory (--\n    grte_top) for the host configuration.\n","tags":["action_command_lines","affects_outputs"],"sources":[]},{"name":"host_platform","short":"","type":"build target label","default":"default: \"\"","description":"    The label of a platform rule that describes the host system.\n","tags":["affects_outputs","changes_inputs","loading_and_analysis"],"sources":[]},{"name":"incompatible_disable_expand_if_all_available_in_flag_set","short":"","type":"boolean","default":"default: \"true\"","description":"    If true, Bazel will not allow specifying expand_if_all_available in \n    flag_sets(see https://github.com/bazelbuild/bazel/issues/7008 for migration \n    instructions).\n","tags":["loading_and_analysis","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_do_not_emit_buggy_external_repo_import","short":"","type":"boolean","default":"default: \"false\"","description":"    If true, Bazel will not emit import paths for external repos that used to \n    be emitted because of https://github.com/bazelbuild/bazel/issues/8030. This \n    is now fixed and those imports are only emitted for backwards \n    compatibility. See https://github.com/bazelbuild/bazel/issues/8711 for \n    details.\n","tags":["loading_and_analysis","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_dont_enable_host_nonhost_crosstool_features","short":"","type":"boolean","default":"default: \"true\"","description":"    If true, Bazel will not enable 'host' and 'nonhost' features in the c++ \n    toolchain (see https://github.com/bazelbuild/bazel/issues/7407 for more \n    information).\n","tags":["loading_and_analysis","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_make_thinlto_command_lines_standalone","short":"","type":"boolean","default":"default: \"false\"","description":"    If true, Bazel will not reuse C++ link action command lines for lto \n    indexing command lines (see https://github.com/bazelbuild/bazel/issues/6791 \n    for more information).\n","tags":["loading_and_analysis","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_remove_cpu_and_compiler_attributes_from_cc_toolchain","short":"","type":"boolean","default":"default: \"true\"","description":"    If true, Bazel will complain when cc_toolchain.cpu and cc_toolchain.\n    compiler attribtues are set (see https://github.\n    com/bazelbuild/bazel/issues/7075 for migration instructions).\n","tags":["loading_and_analysis","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_remove_legacy_whole_archive","short":"","type":"boolean","default":"default: \"false\"","description":"    If true, Bazel will not link library dependencies as whole archive by \n    default (see https://github.com/bazelbuild/bazel/issues/7362 for migration \n    instructions).\n","tags":["loading_and_analysis","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_require_ctx_in_configure_features","short":"","type":"boolean","default":"default: \"true\"","description":"    If true, Bazel will require 'ctx' parameter in to cc_common.\n    configure_features (see https://github.com/bazelbuild/bazel/issues/7793 for \n    more information).\n","tags":["loading_and_analysis","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_strict_objc_module_maps","short":"","type":"boolean","default":"default: \"false\"","description":"    Propagates Objective-C module maps only to direct dependencies in the \n    'objc' provider, not to all transitive dependencies.\n","tags":["changes_inputs","loading_and_analysis","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_use_aapt2_by_default","short":"","type":"boolean","default":"default: \"false\"","description":"    Switch the Android rules to use aapt2 by default for resource processing. \n    To resolve issues when migrating your app to build with aapt2, see https:\n    //developer.android.com/studio/command-line/aapt2#aapt2_changes\n","tags":["loses_incremental_state","affects_outputs","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"interface_shared_objects","short":"","type":"boolean","default":"default: \"true\"","description":"    Use interface shared objects if supported by the toolchain. All ELF \n    toolchains currently support this setting.\n","tags":["loading_and_analysis","affects_outputs","affects_outputs"],"sources":[]},{"name":"ios_sdk_version","short":"","type":"dotted version (for example '2.3' or '3.3alpha2.4')","default":"default: see description","description":"    Specifies the version of the iOS SDK to use to build iOS applications.\n","tags":["loses_incremental_state"],"sources":[]},{"name":"macos_sdk_version","short":"","type":"dotted version (for example '2.3' or '3.3alpha2.4')","default":"default: see description","description":"    Specifies the version of the macOS SDK to use to build macOS applications.\n","tags":["loses_incremental_state"],"sources":[]},{"name":"minimum_os_version","short":"","type":"string","default":"default: see description","description":"    The minimum OS version which your compilation targets.\n","tags":["loading_and_analysis","affects_outputs"],"sources":[]},{"name":"objc_header_scanner_tool","short":"","type":"build target label","default":"default: \"@bazel_tools//tools/objc:header_scanner\"","description":"    Location of tool to scan Objective-C code for inclusions and output a .\n    headers_list file.\n","tags":["changes_inputs"],"sources":[]},{"name":"platform_mappings","short":"","type":"relative path","default":"default: \"\"","description":"    The location of a mapping file that describes which platform to use if none \n    is set or which flags to set when a platform already exists. Must be \n    relative to the main workspace root. Defaults to 'platform_mappings' (a \n    file directly under the workspace root).\n","tags":["affects_outputs","changes_inputs","loading_and_analysis"],"sources":[]},{"name":"platforms","short":"","type":"build target label","default":"default: \"\"","description":"    The labels of the platform rules describing the target platforms for the \n    current command.\n","tags":["affects_outputs","changes_inputs","loading_and_analysis"],"sources":[]},{"name":"python2_path","short":"","type":"string","default":"default: see description","description":"    Deprecated, no-op. Disabled by `--incompatible_use_python_toolchains`.\n","tags":["no_op","deprecated"],"sources":[]},{"name":"python3_path","short":"","type":"string","default":"default: see description","description":"    Deprecated, no-op. Disabled by `--incompatible_use_python_toolchains`.\n","tags":["no_op","deprecated"],"sources":[]},{"name":"python_path","short":"","type":"string","default":"default: see description","description":"    The absolute path of the Python interpreter invoked to run Python targets \n    on the target platform. Deprecated; disabled by --\n    incompatible_use_python_toolchains.\n","tags":["loading_and_analysis","affects_outputs"],"sources":[]},{"name":"python_top","short":"","type":"build target label","default":"default: see description","description":"    The label of a py_runtime representing the Python interpreter invoked to \n    run Python targets on the target platform. Deprecated; disabled by --\n    incompatible_use_python_toolchains.\n","tags":["loading_and_analysis","affects_outputs"],"sources":[]},{"name":"target_platform_fallback","short":"","type":"build target label","default":"default: \"@bazel_tools//platforms:target_platform\"","description":"    The label of a platform rule that should be used if no target platform is \n    set and no platform mapping matches the current set of flags.\n","tags":["affects_outputs","changes_inputs","loading_and_analysis"],"sources":[]},{"name":"tvos_sdk_version","short":"","type":"dotted version (for example '2.3' or '3.3alpha2.4')","default":"default: see description","description":"    Specifies the version of the tvOS SDK to use to build tvOS applications.\n","tags":["loses_incremental_state"],"sources":[]},{"name":"watchos_sdk_version","short":"","type":"dotted version (for example '2.3' or '3.3alpha2.4')","default":"default: see description","description":"    Specifies the version of the watchOS SDK to use to build watchOS \n    applications.\n","tags":["loses_incremental_state"],"sources":[]},{"name":"xcode_version","short":"","type":"string","default":"default: see description","description":"    If specified, uses Xcode of the given version for relevant build actions. \n    If unspecified, uses the executor default version of Xcode.\n","tags":["loses_incremental_state"],"sources":[]},{"name":"xcode_version_config","short":"","type":"build target label","default":"default: \"@local_config_xcode//:host_xcodes\"","description":"    The label of the xcode_config rule to be used for selecting the Xcode \n    version in the build configuration.\n","tags":["loses_incremental_state","loading_and_analysis"],"sources":[]},{"name":"apple_enable_auto_dsym_dbg","short":"","type":"boolean","default":"default: \"false\"","description":"    Whether to force enable generating debug symbol(.dSYM) file(s) for dbg \n    builds.\n","tags":["affects_outputs","action_command_lines"],"sources":[]},{"name":"apple_generate_dsym","short":"","type":"boolean","default":"default: \"false\"","description":"    Whether to generate debug symbol(.dSYM) file(s).\n","tags":["affects_outputs","action_command_lines"],"sources":[]},{"name":"build","short":"","type":"boolean","default":"default: \"true\"","description":"    Execute the build; this is the usual behaviour. Specifying --nobuild causes \n    the build to stop before executing the build actions, returning zero iff \n    the package loading and analysis phases completed successfully; this mode \n    is useful for testing those phases.\n","tags":["execution","affects_outputs"],"sources":[]},{"name":"build_runfile_links","short":"","type":"boolean","default":"default: \"true\"","description":"    If true, build runfiles symlink forests for all targets.  If false, write \n    only manifests when possible.\n","tags":["affects_outputs"],"sources":[]},{"name":"build_runfile_manifests","short":"","type":"boolean","default":"default: \"true\"","description":"    If true, write runfiles manifests for all targets.  If false, omit them.\n","tags":["affects_outputs"],"sources":[]},{"name":"build_test_dwp","short":"","type":"boolean","default":"default: \"false\"","description":"    If enabled, when building C++ tests statically and with fission the .dwp \n    file  for the test binary will be automatically built as well.\n","tags":["loading_and_analysis","affects_outputs"],"sources":[]},{"name":"cc_proto_library_header_suffixes","short":"","type":"comma-separated list of options","default":"default: \".pb.h\"","description":"    Sets the prefixes of header files that a cc_proto_library creates.\n","tags":["affects_outputs","loading_and_analysis"],"sources":[]},{"name":"cc_proto_library_source_suffixes","short":"","type":"comma-separated list of options","default":"default: \".pb.cc\"","description":"    Sets the prefixes of source files that a cc_proto_library creates.\n","tags":["affects_outputs","loading_and_analysis"],"sources":[]},{"name":"enable_apple_binary_native_protos","short":"","type":"boolean","default":"default: \"true\"","description":"    If set, apple_binary will generate and link objc protos into the output \n    binary.\n","tags":["affects_outputs","incompatible_change"],"sources":[]},{"name":"experimental_objc_enable_module_maps","short":"","type":"boolean","default":"default: \"false\"","description":"    Enables module map generation and interpretation.\n","tags":["action_command_lines"],"sources":[]},{"name":"experimental_proto_extra_actions","short":"","type":"boolean","default":"default: \"false\"","description":"    Run extra actions for alternative Java api versions in a proto_library.\n","tags":["affects_outputs","loading_and_analysis","experimental"],"sources":[]},{"name":"experimental_save_feature_state","short":"","type":"boolean","default":"default: \"false\"","description":"    Save the state of enabled and requested feautres as an output of \n    compilation.\n","tags":["affects_outputs","experimental"],"sources":[]},{"name":"fission","short":"","type":"set of compilation modes","default":"default: \"no\"","description":"    Specifies which compilation modes use fission for C++ compilations and \n    links.  May be any combination of {'fastbuild', 'dbg', 'opt'} or the \n    special values 'yes'  to enable all modes and 'no' to disable all modes.\n","tags":["loading_and_analysis","action_command_lines","affects_outputs"],"sources":[]},{"name":"legacy_external_runfiles","short":"","type":"boolean","default":"default: \"true\"","description":"    If true, build runfiles symlink forests for external repositories under .\n    runfiles/wsname/external/repo (in addition to .runfiles/repo).\n","tags":["affects_outputs"],"sources":[]},{"name":"objc_generate_linkmap","short":"","type":"boolean","default":"default: \"false\"","description":"    Specifies whether to generate a linkmap file.\n","tags":["affects_outputs"],"sources":[]},{"name":"output_groups","short":"","type":"comma-separated list of options","default":"may be used multiple times","description":"    Specifies which output groups of the top-level targets to build. If \n    omitted, a default set of output groups are built. When specified the \n    default set is overridden. However you may use --\n    output_groups=+\u003coutput_group\u003e or --output_groups=-\u003coutput_group\u003e to instead \n    modify the set of output groups.\n","tags":["execution","affects_outputs"],"sources":[]},{"name":"save_temps","short":"","type":"boolean","default":"default: \"false\"","description":"    If set, temporary outputs from gcc will be saved.  These include .s files \n    (assembler code), .i files (preprocessed C) and .ii files (preprocessed \n    C++).\n","tags":["affects_outputs"],"sources":[]},{"name":"action_env","short":"","type":"'name=value' assignment with an optional value part","default":"may be used multiple times","description":"    Specifies the set of environment variables available to actions. Variables \n    can be either specified by name, in which case the value will be taken from \n    the invocation environment, or by the name=value pair which sets the value \n    independent of the invocation environment. This option can be used multiple \n    times; for options given for the same variable, the latest wins, options \n    for different variables accumulate.\n","tags":["action_command_lines"],"sources":[]},{"name":"android_cpu","short":"","type":"string","default":"default: \"armeabi-v7a\"","description":"    The Android target CPU.\n","tags":["affects_outputs","loading_and_analysis","loses_incremental_state"],"sources":[]},{"name":"android_databinding_use_v3_4_args","short":"","type":"boolean","default":"default: \"false\"","description":"    Use android databinding v2 with 3.4.0 argument\n","tags":["affects_outputs","loading_and_analysis","loses_incremental_state","\n      experimental"],"sources":[]},{"name":"android_dynamic_mode","short":"","type":"off, default or fully","default":"default: \"off\"","description":"    Determines whether C++ deps of Android rules will be linked dynamically \n    when a cc_binary does not explicitly create a shared library. 'default' \n    means bazel will choose whether to link dynamically.  'fully' means all \n    libraries will be linked dynamically. 'off' means that all libraries will \n    be linked in mostly static mode.\n","tags":["affects_outputs","loading_and_analysis"],"sources":[]},{"name":"android_manifest_merger_order","short":"","type":"alphabetical, alphabetical_by_configuration or dependency","default":"default: \"alphabetical\"","description":"    Sets the order of manifests passed to the manifest merger for Android \n    binaries. ALPHABETICAL means manifests are sorted by path relative to the \n    execroot. ALPHABETICAL_BY_CONFIGURATION means manifests are sorted by paths \n    relative to the configuration directory within the output directory. \n    DEPENDENCY means manifests are ordered with each library's manifest coming \n    before the manifests of its dependencies.\n","tags":["action_command_lines","execution"],"sources":[]},{"name":"android_resource_shrinking","short":"","type":"boolean","default":"default: \"false\"","description":"    Enables resource shrinking for android_binary APKs that use ProGuard.\n","tags":["affects_outputs","loading_and_analysis"],"sources":[]},{"name":"apple_bitcode","short":"","type":"none, embedded_markers or embedded","default":"default: \"none\"","description":"    Specify the Apple bitcode mode for compile steps. Values: 'none', \n    'embedded_markers', 'embedded'.\n","tags":["loses_incremental_state"],"sources":[]},{"name":"aspects","short":"","type":"comma-separated list of options","default":"may be used multiple times","description":"Comma-separated list of aspects to be applied to top-level targets. All aspects are applied to all top-level targets independently. Aspects are specified in the form \u003cbzl-file-label\u003e%\u003caspect_name\u003e, for example '//tools:my_def.bzl%my_aspect', where 'my_aspect' is a top-level value from from a file tools/my_def.bzl","tags":[],"sources":[]},{"name":"build_python_zip","short":"","type":"tri-state (auto, yes, no)","default":"default: \"auto\"","description":"    Build python executable zip; on on Windows, off on other platforms\n","tags":["affects_outputs"],"sources":[]},{"name":"collect_code_coverage","short":"","type":"boolean","default":"default: \"false\"","description":"    If specified, Bazel will instrument code (using offline instrumentation \n    where possible) and will collect coverage information during tests. Only \n    targets that  match --instrumentation_filter will be affected. Usually this \n    option should  not be specified directly - 'bazel coverage' command should \n    be used instead.\n","tags":["affects_outputs"],"sources":[]},{"name":"compilation_mode","short":"c","type":"fastbuild, dbg or opt","default":"default: \"fastbuild\"","description":"    Specify the mode the binary will be built in. Values: 'fastbuild', 'dbg', \n    'opt'.\n","tags":["affects_outputs","action_command_lines"],"sources":[]},{"name":"conlyopt","short":"","type":"string","default":"may be used multiple times","description":"    Additional option to pass to gcc when compiling C source files.\n","tags":["action_command_lines","affects_outputs"],"sources":[]},{"name":"copt","short":"","type":"string","default":"may be used multiple times","description":"    Additional options to pass to gcc.\n","tags":["action_command_lines","affects_outputs"],"sources":[]},{"name":"cpu","short":"","type":"string","default":"default: \"\"","description":"    The target CPU.\n","tags":["changes_inputs","affects_outputs"],"sources":[]},{"name":"cs_fdo_absolute_path","short":"","type":"string","default":"default: see description","description":"    Use CSFDO profile information to optimize compilation. Specify the absolute \n    path name of the zip file containing the profile file, a raw or an indexed \n    LLVM profile file.\n","tags":["affects_outputs"],"sources":[]},{"name":"cs_fdo_instrument","short":"","type":"string","default":"default: see description","description":"    Generate binaries with context sensitive FDO instrumentation. With \n    Clang/LLVM compiler, it also accepts the directory name under which the raw \n    profile file(s) will be dumped at runtime.\n      Using this option will also add: --copt=-Wno-error \n","tags":["affects_outputs"],"sources":[]},{"name":"cs_fdo_profile","short":"","type":"build target label","default":"default: see description","description":"    The cs_fdo_profile representing the context sensitive profile to be used \n    for optimization.\n","tags":["affects_outputs"],"sources":[]},{"name":"cxxopt","short":"","type":"string","default":"may be used multiple times","description":"    Additional option to pass to gcc when compiling C++ source files.\n","tags":["action_command_lines","affects_outputs"],"sources":[]},{"name":"define","short":"","type":"'name=value' assignment","default":"may be used multiple times","description":"    Each --define option specifies an assignment for a build variable.\n","tags":["changes_inputs","affects_outputs"],"sources":[]},{"name":"dynamic_mode","short":"","type":"off, default or fully","default":"default: \"default\"","description":"    Determines whether C++ binaries will be linked dynamically.  'default' \n    means Bazel will choose whether to link dynamically.  'fully' means all \n    libraries will be linked dynamically. 'off' means that all libraries will \n    be linked in mostly static mode.\n","tags":["loading_and_analysis","affects_outputs"],"sources":[]},{"name":"enable_fdo_profile_absolute_path","short":"","type":"boolean","default":"default: \"true\"","description":"    If set, use of fdo_absolute_profile_path will raise an error.\n","tags":["affects_outputs"],"sources":[]},{"name":"enable_runfiles","short":"","type":"tri-state (auto, yes, no)","default":"default: \"auto\"","description":"    Enable runfiles symlink tree; By default, it's off on Windows, on on other \n    platforms.\n","tags":["affects_outputs"],"sources":[]},{"name":"experimental_action_listener","short":"","type":"build target label","default":"may be used multiple times","description":"    Use action_listener to attach an extra_action to existing build actions.\n","tags":["execution","experimental"],"sources":[]},{"name":"experimental_android_compress_java_resources","short":"","type":"boolean","default":"default: \"false\"","description":"    Compress Java resources in APKs\n","tags":["affects_outputs","loading_and_analysis","experimental"],"sources":[]},{"name":"experimental_android_databinding_v2","short":"","type":"boolean","default":"default: \"false\"","description":"    Use android databinding v2\n","tags":["affects_outputs","loading_and_analysis","loses_incremental_state","\n      experimental"],"sources":[]},{"name":"experimental_android_resource_shrinking","short":"","type":"boolean","default":"default: \"false\"","description":"    Enables resource shrinking for android_binary APKs that use ProGuard.\n","tags":["affects_outputs","loading_and_analysis"],"sources":[]},{"name":"experimental_android_rewrite_dexes_with_rex","short":"","type":"boolean","default":"default: \"false\"","description":"    use rex tool to rewrite dex files\n","tags":["affects_outputs","loading_and_analysis","loses_incremental_state","\n      experimental"],"sources":[]},{"name":"experimental_multi_cpu","short":"","type":"comma-separated list of options","default":"may be used multiple times","description":"    This flag allows specifying multiple target CPUs. If this is specified, the \n    --cpu option is ignored.\n","tags":["affects_outputs","experimental"],"sources":[]},{"name":"experimental_objc_fastbuild_options","short":"","type":"comma-separated list of options","default":"default: \"-O0,-DDEBUG=1\"","description":"    Uses these strings as objc fastbuild compiler options.\n","tags":["action_command_lines"],"sources":[]},{"name":"experimental_omitfp","short":"","type":"boolean","default":"default: \"false\"","description":"    If true, use libunwind for stack unwinding, and compile with -fomit-frame-\n    pointer and -fasynchronous-unwind-tables.\n","tags":["action_command_lines","affects_outputs","experimental"],"sources":[]},{"name":"experimental_remote_download_minimal","short":"","type":"","default":"","description":"    Does not download any remote build outputs to the local machine. This flag \n    is a shortcut for three flags: --experimental_inmemory_jdeps_files, --\n    experimental_inmemory_dotd_files and --\n    experimental_remote_download_outputs=minimal.\n      Expands to: --experimental_inmemory_jdeps_files --\n      experimental_inmemory_dotd_files --\n      experimental_remote_download_outputs=minimal \n","tags":["affects_outputs"],"sources":[]},{"name":"experimental_remote_download_outputs","short":"","type":"all, minimal or toplevel","default":"default: \"all\"","description":"    If set to 'minimal' doesn't download any remote build outputs to the local \n    machine, except the ones required by local actions. If set to 'toplevel' \n    behaves like'minimal' except that it also downloads outputs of top level \n    targets to the local machine. Both options can significantly reduce build \n    times if network bandwidth is a bottleneck.\n","tags":["affects_outputs"],"sources":[]},{"name":"experimental_remote_download_toplevel","short":"","type":"","default":"","description":"    Only downloads remote outputs of top level targets to the local machine. \n    This flag is a shortcut for three flags: --\n    experimental_inmemory_jdeps_files, --experimental_inmemory_dotd_files and --\n    experimental_remote_download_outputs=toplevel.\n      Expands to: --experimental_inmemory_jdeps_files --\n      experimental_inmemory_dotd_files --\n      experimental_remote_download_outputs=toplevel \n","tags":["affects_outputs"],"sources":[]},{"name":"experimental_use_llvm_covmap","short":"","type":"boolean","default":"default: \"false\"","description":"    If specified, Bazel will generate llvm-cov coverage map information rather \n    than gcov when collect_code_coverage is enabled.\n","tags":["changes_inputs","affects_outputs","loading_and_analysis","experimental"],"sources":[]},{"name":"fat_apk_cpu","short":"","type":"comma-separated list of options","default":"default: \"armeabi-v7a\"","description":"    Setting this option enables fat APKs, which contain native binaries for all \n    specified target architectures, e.g., --fat_apk_cpu=x86,armeabi-v7a. If \n    this flag is specified, then --android_cpu is ignored for dependencies of \n    android_binary rules.\n","tags":["affects_outputs","loading_and_analysis","loses_incremental_state"],"sources":[]},{"name":"fdo_instrument","short":"","type":"string","default":"default: see description","description":"    Generate binaries with FDO instrumentation. With Clang/LLVM compiler, it \n    also accepts the directory name under which the raw profile file(s) will be \n    dumped at runtime.\n      Using this option will also add: --copt=-Wno-error \n","tags":["affects_outputs"],"sources":[]},{"name":"fdo_optimize","short":"","type":"string","default":"default: see description","description":"    Use FDO profile information to optimize compilation. Specify the name of \n    the zip file containing the .gcda file tree, or an afdo file containing an \n    auto profile. This flag also accepts files specified as labels, for example \n    //foo/bar:file.afdo. Such labels must refer to input files; you may need to \n    add an exports_files directive to the corresponding package to make the \n    file visible to Bazel. It also accepts a raw or an indexed LLVM profile \n    file. This flag will be superseded by fdo_profile rule.\n","tags":["affects_outputs"],"sources":[]},{"name":"fdo_prefetch_hints","short":"","type":"build target label","default":"default: see description","description":"    Use cache prefetch hints.\n","tags":["affects_outputs"],"sources":[]},{"name":"fdo_profile","short":"","type":"build target label","default":"default: see description","description":"    The fdo_profile representing the profile to be used for optimization.\n","tags":["affects_outputs"],"sources":[]},{"name":"features","short":"","type":"string","default":"may be used multiple times","description":"    The given features will be enabled or disabled by default for all packages. \n    Specifying -\u003cfeature\u003e will disable the feature globally. Negative features \n    always override positive ones. This flag is used to enable rolling out \n    default feature changes without a Bazel release.\n","tags":["changes_inputs","affects_outputs"],"sources":[]},{"name":"force_pic","short":"","type":"boolean","default":"default: \"false\"","description":"    If enabled, all C++ compilations produce position-independent code (\"-\n    fPIC\"), links prefer PIC pre-built libraries over non-PIC libraries, and \n    links produce position-independent executables (\"-pie\").\n","tags":["loading_and_analysis","affects_outputs"],"sources":[]},{"name":"force_python","short":"","type":"PY2 or PY3","default":"default: see description","description":"    Deprecated alias for `--python_version`. Disabled by `--\n    incompatible_remove_old_python_version_api`.\n","tags":["loading_and_analysis","affects_outputs"],"sources":[]},{"name":"host_compilation_mode","short":"","type":"fastbuild, dbg or opt","default":"default: \"opt\"","description":"    Specify the mode the tools used during the build will be built in. Values: \n    'fastbuild', 'dbg', 'opt'.\n","tags":["affects_outputs","action_command_lines"],"sources":[]},{"name":"host_conlyopt","short":"","type":"string","default":"may be used multiple times","description":"    Additional option to pass to gcc when compiling C source files for host \n    tools.\n","tags":["action_command_lines","affects_outputs"],"sources":[]},{"name":"host_copt","short":"","type":"string","default":"may be used multiple times","description":"    Additional options to pass to gcc for host tools.\n","tags":["action_command_lines","affects_outputs"],"sources":[]},{"name":"host_cpu","short":"","type":"string","default":"default: \"\"","description":"    The host CPU.\n","tags":["changes_inputs","affects_outputs"],"sources":[]},{"name":"host_cxxopt","short":"","type":"string","default":"may be used multiple times","description":"    Additional options to pass to gcc for host tools.\n","tags":["action_command_lines","affects_outputs"],"sources":[]},{"name":"host_force_python","short":"","type":"PY2 or PY3","default":"default: see description","description":"    Overrides the Python version for the host configuration. Can be \"PY2\" or \n    \"PY3\".\n","tags":["loading_and_analysis","affects_outputs"],"sources":[]},{"name":"host_linkopt","short":"","type":"string","default":"may be used multiple times","description":"    Additional option to pass to gcc when linking host tools.\n","tags":["action_command_lines","affects_outputs"],"sources":[]},{"name":"host_swiftcopt","short":"","type":"string","default":"may be used multiple times","description":"    Additional options to pass to swiftc for host tools.\n","tags":["action_command_lines","affects_outputs"],"sources":[]},{"name":"incompatible_merge_genfiles_directory","short":"","type":"boolean","default":"default: \"true\"","description":"    If true, the genfiles directory is folded into the bin directory.\n","tags":["affects_outputs","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_use_platforms_repo_for_constraints","short":"","type":"boolean","default":"default: \"false\"","description":"    If true, constraint settings from @bazel_tools are removed.\n","tags":["affects_outputs","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_windows_escape_python_args","short":"","type":"boolean","default":"default: \"true\"","description":"    On Linux/macOS/non-Windows: no-op. On Windows: this flag affects how \n    py_binary and py_test targets are built: how their launcher escapes command \n    line flags. When this flag is true, the launcher escapes command line flags \n    using Windows-style escaping (correct behavior). When the flag is false, \n    the launcher uses Bash-style escaping (buggy behavior). See https://github.\n    com/bazelbuild/bazel/issues/7958\n","tags":["action_command_lines","affects_outputs","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"instrument_test_targets","short":"","type":"boolean","default":"default: \"false\"","description":"    When coverage is enabled, specifies whether to consider instrumenting test \n    rules. When set, test rules included by --instrumentation_filter are \n    instrumented. Otherwise, test rules are always excluded from coverage \n    instrumentation.\n","tags":["affects_outputs"],"sources":[]},{"name":"instrumentation_filter","short":"","type":"comma-separated list of regex expressions with prefix '-' specifying excluded paths","default":"default: \"-/javatests[/:],-/test/java[/:]\"","description":"    When coverage is enabled, only rules with names included by the specified \n    regex-based filter will be instrumented. Rules prefixed with '-' are \n    excluded instead. Note that only non-test rules are instrumented unless --\n    instrument_test_targets is enabled.\n","tags":["affects_outputs"],"sources":[]},{"name":"ios_cpu","short":"","type":"string","default":"default: \"x86_64\"","description":"    Specifies to target CPU of iOS compilation.\n","tags":["no_op","deprecated"],"sources":[]},{"name":"ios_minimum_os","short":"","type":"dotted version (for example '2.3' or '3.3alpha2.4')","default":"default: see description","description":"    Minimum compatible iOS version for target simulators and devices.\n","tags":["loses_incremental_state"],"sources":[]},{"name":"ios_multi_cpus","short":"","type":"comma-separated list of options","default":"may be used multiple times","description":"    Comma-separated list of architectures to build an ios_application with. The \n    result is a universal binary containing all specified architectures.\n","tags":["loses_incremental_state","loading_and_analysis"],"sources":[]},{"name":"legacy_whole_archive","short":"","type":"boolean","default":"default: \"true\"","description":"    Deprecated, superseded by --incompatible_remove_legacy_whole_archive (see \n    https://github.com/bazelbuild/bazel/issues/7362 for details). When on, use \n    --whole-archive for cc_binary rules that have linkshared=1 and either \n    linkstatic=1 or '-static' in linkopts. This is for backwards compatibility \n    only. A better alternative is to use alwayslink=1 where required.\n","tags":["action_command_lines","affects_outputs","deprecated"],"sources":[]},{"name":"linkopt","short":"","type":"string","default":"may be used multiple times","description":"    Additional option to pass to gcc when linking.\n","tags":["action_command_lines","affects_outputs"],"sources":[]},{"name":"ltobackendopt","short":"","type":"string","default":"may be used multiple times","description":"    Additional option to pass to the LTO backend step (under --\n    features=thin_lto).\n","tags":["action_command_lines","affects_outputs"],"sources":[]},{"name":"ltoindexopt","short":"","type":"string","default":"may be used multiple times","description":"    Additional option to pass to the LTO indexing step (under --\n    features=thin_lto).\n","tags":["action_command_lines","affects_outputs"],"sources":[]},{"name":"macos_cpus","short":"","type":"comma-separated list of options","default":"may be used multiple times","description":"    Comma-separated list of architectures for which to build Apple macOS \n    binaries.\n","tags":["loses_incremental_state","loading_and_analysis"],"sources":[]},{"name":"macos_minimum_os","short":"","type":"dotted version (for example '2.3' or '3.3alpha2.4')","default":"default: see description","description":"    Minimum compatible macOS version for targets.\n","tags":["loses_incremental_state"],"sources":[]},{"name":"objc_debug_with_GLIBCXX","short":"","type":"boolean","default":"default: \"false\"","description":"    If set, and compilation mode is set to 'dbg', define GLIBCXX_DEBUG,  \n    GLIBCXX_DEBUG_PEDANTIC and GLIBCPP_CONCEPT_CHECKS.\n","tags":["action_command_lines"],"sources":[]},{"name":"objc_enable_binary_stripping","short":"","type":"boolean","default":"default: \"false\"","description":"    Whether to perform symbol and dead-code strippings on linked binaries. \n    Binary strippings will be performed if both this flag and --\n    compilationMode=opt are specified.\n","tags":["action_command_lines"],"sources":[]},{"name":"objccopt","short":"","type":"string","default":"may be used multiple times","description":"    Additional options to pass to Objective C compilation.\n","tags":["action_command_lines"],"sources":[]},{"name":"per_file_copt","short":"","type":"comma-separated list of regex expressions with prefix '-' specifying excluded paths followed by an @ and a comma separated list of options","default":"may be used multiple times","description":"    Additional options to selectively pass to gcc when compiling certain files. \n    This option can be passed multiple times. Syntax: regex_filter@option_1,\n    option_2,...,option_n. Where regex_filter stands for a list of include and \n    exclude regular expression patterns (Also see --instrumentation_filter). \n    option_1 to option_n stand for arbitrary command line options. If an option \n    contains a comma it has to be quoted with a backslash. Options can contain \n    @. Only the first @ is used to split the string. Example: --\n    per_file_copt=//foo/.*\\.cc,-//foo/bar\\.cc@-O0 adds the -O0 command line \n    option to the gcc command line of all cc files in //foo/ except bar.cc.\n","tags":["action_command_lines","affects_outputs"],"sources":[]},{"name":"per_file_ltobackendopt","short":"","type":"comma-separated list of regex expressions with prefix '-' specifying excluded paths followed by an @ and a comma separated list of options","default":"may be used multiple times","description":"    Additional options to selectively pass to LTO backend (under --\n    features=thin_lto) when compiling certain backend objects. This option can \n    be passed multiple times. Syntax: regex_filter@option_1,option_2,...,\n    option_n. Where regex_filter stands for a list of include and exclude \n    regular expression patterns. option_1 to option_n stand for arbitrary \n    command line options. If an option contains a comma it has to be quoted \n    with a backslash. Options can contain @. Only the first @ is used to split \n    the string. Example: --per_file_ltobackendopt=//foo/.*\\.o,-//foo/bar\\.o@-O0 \n    adds the -O0 command line option to the LTO backend command line of all o \n    files in //foo/ except bar.o.\n","tags":["action_command_lines","affects_outputs"],"sources":[]},{"name":"platform_suffix","short":"","type":"string","default":"default: see description","description":"    Specifies a suffix to be added to the configuration directory.\n","tags":["loses_incremental_state","affects_outputs","loading_and_analysis"],"sources":[]},{"name":"repo_env","short":"","type":"'name=value' assignment with an optional value part","default":"may be used multiple times","description":"    Specifies additional environment variables to be available only for \n    repository rules. Note that repository rules see the full environment \n    anyway, but in this way configuration information can be passed to \n    repositories through options without invalidating the action graph.\n","tags":["action_command_lines"],"sources":[]},{"name":"run_under","short":"","type":"prefix in front of command","default":"default: see description","description":"    Prefix to insert in front of command before running. Examples:\n    \t--run_under=valgrind\n    \t--run_under=strace\n    \t--run_under='strace -c'\n    \t--run_under='valgrind --quiet --num-callers=20'\n    \t--run_under=//package:target\n    \t--run_under='//package:target --options'\n    \n","tags":["action_command_lines"],"sources":[]},{"name":"script_path","short":"","type":"path","default":"default: see description","description":"    If set, write a shell script to the given file which invokes the target. If \n    this option is set, the target is not run from bazel. Use 'bazel \n    run --script_path=foo //foo \u0026\u0026 ./foo' to invoke target '//foo' This differs \n    from 'bazel run //foo' in that the bazel lock is released and the \n    executable is connected to the terminal's stdin.\n","tags":["affects_outputs","execution"],"sources":[]},{"name":"share_native_deps","short":"","type":"boolean","default":"default: \"true\"","description":"    If true, native libraries that contain identical functionality will be \n    shared among different targets\n","tags":["loading_and_analysis","affects_outputs"],"sources":[]},{"name":"stamp","short":"","type":"boolean","default":"default: \"false\"","description":"    Stamp binaries with the date, username, hostname, workspace information, \n    etc.\n","tags":["affects_outputs"],"sources":[]},{"name":"strip","short":"","type":"always, sometimes or never","default":"default: \"sometimes\"","description":"    Specifies whether to strip binaries and shared libraries  (using \"-Wl,--\n    strip-debug\").  The default value of 'sometimes' means strip iff --\n    compilation_mode=fastbuild.\n","tags":["affects_outputs"],"sources":[]},{"name":"stripopt","short":"","type":"string","default":"may be used multiple times","description":"    Additional options to pass to strip when generating a '\u003cname\u003e.stripped' \n    binary.\n","tags":["action_command_lines","affects_outputs"],"sources":[]},{"name":"swiftcopt","short":"","type":"string","default":"may be used multiple times","description":"    Additional options to pass to Swift compilation.\n","tags":["action_command_lines"],"sources":[]},{"name":"symlink_prefix","short":"","type":"string","default":"default: see description","description":"    The prefix that is prepended to any of the convenience symlinks that are \n    created after a build. If '/' is passed, then no symlinks are created and \n    no warning is emitted. If omitted, the default value is the name of the \n    build tool.\n","tags":["affects_outputs"],"sources":[]},{"name":"tvos_cpus","short":"","type":"comma-separated list of options","default":"may be used multiple times","description":"    Comma-separated list of architectures for which to build Apple tvOS \n    binaries.\n","tags":["loses_incremental_state","loading_and_analysis"],"sources":[]},{"name":"tvos_minimum_os","short":"","type":"dotted version (for example '2.3' or '3.3alpha2.4')","default":"default: see description","description":"    Minimum compatible tvOS version for target simulators and devices.\n","tags":["loses_incremental_state"],"sources":[]},{"name":"watchos_cpus","short":"","type":"comma-separated list of options","default":"may be used multiple times","description":"    Comma-separated list of architectures for which to build Apple watchOS \n    binaries.\n","tags":["loses_incremental_state","loading_and_analysis"],"sources":[]},{"name":"watchos_minimum_os","short":"","type":"dotted version (for example '2.3' or '3.3alpha2.4')","default":"default: see description","description":"    Minimum compatible watchOS version for target simulators and devices.\n","tags":["loses_incremental_state"],"sources":[]},{"name":"xbinary_fdo","short":"","type":"build target label","default":"default: see description","description":"    Use XbinaryFDO profile information to optimize compilation. Specify the \n    name of default cross binary profile. When the option is used together with \n    --fdo_instrument/--fdo_optimize/--fdo_profile, those options will always \n    prevail as if xbinary_fdo is never specified. \n","tags":["affects_outputs"],"sources":[]},{"name":"auto_cpu_environment_group","short":"","type":"build target label","default":"default: \"\"","description":"    Declare the environment_group to use for automatically mapping cpu values \n    to target_environment values.\n","tags":["changes_inputs","loading_and_analysis","experimental"],"sources":[]},{"name":"check_licenses","short":"","type":"boolean","default":"default: \"false\"","description":"    Check that licensing constraints imposed by dependent packages do not \n    conflict with distribution modes of the targets being built. By default, \n    licenses are not checked.\n","tags":["build_file_semantics"],"sources":[]},{"name":"check_visibility","short":"","type":"boolean","default":"default: \"true\"","description":"    If disabled, visibility errors are demoted to warnings.\n","tags":["build_file_semantics"],"sources":[]},{"name":"desugar_for_android","short":"","type":"boolean","default":"default: \"true\"","description":"    Whether to desugar Java 8 bytecode before dexing.\n","tags":["affects_outputs","loading_and_analysis","loses_incremental_state"],"sources":[]},{"name":"enforce_constraints","short":"","type":"boolean","default":"default: \"true\"","description":"    Checks the environments each target is compatible with and reports errors \n    if any target has dependencies that don't support the same environments\n","tags":["build_file_semantics"],"sources":[]},{"name":"experimental_allow_android_library_deps_without_srcs","short":"","type":"boolean","default":"default: \"false\"","description":"    Flag to help transition from allowing to disallowing srcs-less \n    android_library rules with deps. The depot needs to be cleaned up to roll \n    this out by default.\n","tags":["eagerness_to_exit","loading_and_analysis"],"sources":[]},{"name":"experimental_android_throw_on_resource_conflict","short":"","type":"boolean","default":"default: \"false\"","description":"    If passed, resource merge conflicts will be treated as errors instead of \n    warnings\n","tags":["eagerness_to_exit","loading_and_analysis"],"sources":[]},{"name":"experimental_check_desugar_deps","short":"","type":"boolean","default":"default: \"true\"","description":"    Whether to double-check correct desugaring at Android binary level.\n","tags":["eagerness_to_exit","loading_and_analysis","experimental"],"sources":[]},{"name":"experimental_desugar_java8_libs","short":"","type":"boolean","default":"default: \"false\"","description":"    Whether to include supported Java 8 libraries in apps for legacy devices.\n","tags":["affects_outputs","loading_and_analysis","loses_incremental_state","\n      experimental"],"sources":[]},{"name":"experimental_import_deps_checking","short":"","type":"off, warning or error","default":"default: \"OFF\"","description":"    When enabled, check whether the dependencies of an aar_import are complete. \n    This enforcement can break the build, or can just result in warnings.\n","tags":["loading_and_analysis"],"sources":[]},{"name":"experimental_java_proto_add_allowed_public_imports","short":"","type":"boolean","default":"default: \"false\"","description":"    If true, add --allowed_public_imports to the java compile actions.\n","tags":["affects_outputs","loading_and_analysis","experimental"],"sources":[]},{"name":"experimental_repository_hash_file","short":"","type":"string","default":"default: \"\"","description":"    If non-empty, specifies a file containing a resolved value, against which \n    the repository directory hashes should be verified\n","tags":["affects_outputs","experimental"],"sources":[]},{"name":"experimental_strict_java_deps","short":"","type":"off, warn, error, strict or default","default":"default: \"default\"","description":"    If true, checks that a Java target explicitly declares all directly used \n    targets as dependencies.\n","tags":["build_file_semantics","eagerness_to_exit"],"sources":[]},{"name":"experimental_verify_repository_rules","short":"","type":"string","default":"may be used multiple times","description":"    If list of repository rules for which the hash of the output directory \n    should be verified, provided a file is specified by --\n    experimental_repository_hash_file.\n","tags":["affects_outputs","experimental"],"sources":[]},{"name":"incompatible_disable_native_android_rules","short":"","type":"boolean","default":"default: \"false\"","description":"    If enabled, direct usage of the native Android rules is disabled. Please \n    use the Starlark Android rules from https://github.\n    com/bazelbuild/rules_android\n","tags":["eagerness_to_exit","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"strict_filesets","short":"","type":"boolean","default":"default: \"false\"","description":"    If this option is enabled, filesets crossing package boundaries are \n    reported as errors. It does not work when \n    check_fileset_dependencies_recursively is disabled.\n","tags":["build_file_semantics","eagerness_to_exit"],"sources":[]},{"name":"strict_proto_deps","short":"","type":"off, warn, error, strict or default","default":"default: \"error\"","description":"    Unless OFF, checks that a proto_library target explicitly declares all \n    directly used targets as dependencies.\n","tags":["build_file_semantics","eagerness_to_exit","incompatible_change"],"sources":[]},{"name":"strict_system_includes","short":"","type":"boolean","default":"default: \"false\"","description":"    If true, headers found through system include paths (-isystem) are also \n    required to be declared.\n","tags":["loading_and_analysis","eagerness_to_exit"],"sources":[]},{"name":"target_environment","short":"","type":"build target label","default":"may be used multiple times","description":"    Declares this build's target environment. Must be a label reference to an \n    \"environment\" rule. If specified, all top-level targets must be compatible \n    with this environment.\n","tags":["changes_inputs"],"sources":[]},{"name":"apk_signing_method","short":"","type":"v1, v2 or v1_v2","default":"default: \"v1_v2\"","description":"    Implementation to use to sign APKs\n","tags":["action_command_lines","affects_outputs","loading_and_analysis"],"sources":[]},{"name":"default_ios_provisioning_profile","short":"","type":"build target label","default":"default: \"\"","description":"","tags":["changes_inputs"],"sources":[]},{"name":"device_debug_entitlements","short":"","type":"boolean","default":"default: \"true\"","description":"    If set, and compilation mode is not 'opt', objc apps will include debug \n    entitlements when signing.\n","tags":["changes_inputs"],"sources":[]},{"name":"extra_entitlements","short":"","type":"build target label","default":"default: see description","description":"    Location of a .entitlements file that is merged into any iOS signing action \n    in this build.\n","tags":["changes_inputs"],"sources":[]},{"name":"ios_signing_cert_name","short":"","type":"string","default":"default: see description","description":"    Certificate name to use for iOS signing. If not set will fall back to \n    provisioning profile. May be the certificate's keychain identity preference \n    or (substring) of the certificate's common name, as per codesign's man page \n    (SIGNING IDENTITIES).\n","tags":["action_command_lines"],"sources":[]},{"name":"experimental_allow_incremental_repository_updates","short":"","type":"boolean","default":"default: \"true\"","description":"    This flag will be removed in Bazel 1.0. Please do not use it.\n    Incremental repository updates feature is now enabled without the flag.\n","tags":["bazel_internal_configuration","experimental"],"sources":[]},{"name":"experimental_enable_android_migration_apis","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, enables the APIs required to support the Android Starlark \n    migration.\n","tags":["build_file_semantics"],"sources":[]},{"name":"experimental_google_legacy_api","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, exposes a number of experimental pieces of Starlark build \n    API pertaining to Google legacy code.\n","tags":["loading_and_analysis","experimental"],"sources":[]},{"name":"experimental_platforms_api","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, enables a number of platform-related Starlark APIs useful \n    for debugging.\n","tags":["loading_and_analysis","experimental"],"sources":[]},{"name":"experimental_starlark_config_transitions","short":"","type":"boolean","default":"default: \"true\"","description":"    If set to true, enables creation of configuration transition objects (the \n    `transition()` function) in Starlark.\n","tags":["loading_and_analysis","experimental"],"sources":[]},{"name":"experimental_starlark_unused_inputs_list","short":"","type":"boolean","default":"default: \"true\"","description":"    If set to true, enables use of 'unused_inputs_list' in starlark action.\n    run().\n","tags":["changes_inputs","experimental"],"sources":[]},{"name":"incompatible_allow_python_version_transitions","short":"","type":"boolean","default":"default: \"true\"","description":"    If true, Python rules use the new PY2/PY3 version semantics. For more \n    information, see the documentation for `py_binary`'s `python_version` \n    attribute.\n","tags":["loading_and_analysis","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_allow_tags_propagation","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, tags will be propagated from a target to the actions' \n    execution requirements; otherwise tags are not propagated. See https:\n    //github.com/bazelbuild/bazel/issues/8830 for details.\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_assignment_identifiers_have_local_scope","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, LHS identifiers in assignment statements become local to \n    the the block containing the statement, and mask similarly named variables \n    in outer scopes.\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_bzl_disallow_load_after_statement","short":"","type":"boolean","default":"default: \"true\"","description":"    If set to true, all `load` must be called at the top of .bzl files, before \n    any other statement.\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_depset_for_libraries_to_link_getter","short":"","type":"boolean","default":"default: \"true\"","description":"    When true, Bazel no longer returns a list from linking_context.\n    libraries_to_link but returns a depset instead.\n","tags":["loading_and_analysis","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_depset_is_not_iterable","short":"","type":"boolean","default":"default: \"true\"","description":"    If set to true, depset type is not iterable. For loops and functions \n    expecting an iterable will reject depset objects. Use the `.to_list` method \n    to explicitly convert to a list.\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_depset_union","short":"","type":"boolean","default":"default: \"true\"","description":"    If set to true, depset union using `+`, `|` or `.union` are forbidden. Use \n    the `depset` constructor instead.\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_disable_deprecated_attr_params","short":"","type":"boolean","default":"default: \"true\"","description":"    If set to true, disable the deprecated parameters 'single_file' and \n    'non_empty' on attribute definition methods, such as attr.label().\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_disable_objc_provider_resources","short":"","type":"boolean","default":"default: \"true\"","description":"    Unused. Will be removed in future versions of Bazel.\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_disable_partition_default_parameter","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, the default value `' '` for the parameter `sep` of `string.\n    partion` and `string.rpartition` will be disabled.\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_disable_target_provider_fields","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, disable the ability to access providers on 'target' objects \n    via field syntax. Use provider-key syntax instead. For example, instead of \n    using `ctx.attr.dep.my_info` to access `my_info` from inside a rule \n    implementation function, use `ctx.attr.dep[MyInfo]`. See https://github.\n    com/bazelbuild/bazel/issues/9014 for details.\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_disable_third_party_license_checking","short":"","type":"boolean","default":"default: \"true\"","description":"    If true, disables all license checking logic\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_disallow_dict_lookup_unhashable_keys","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, dict key lookups using `in` or `dict.get` will fail with \n    unhashable types.\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_disallow_dict_plus","short":"","type":"boolean","default":"default: \"true\"","description":"    If set to true, the `+` becomes disabled for dicts.\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_disallow_empty_glob","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, the default value of the `allow_empty` argument of glob() \n    is False.\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_disallow_hashing_frozen_mutables","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, freezing a mutable object will not make it hashable.\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_disallow_legacy_java_provider","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, usages of old .java provider are disallowed.\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_disallow_legacy_javainfo","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, old-style JavaInfo provider construction is disallowed.\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_disallow_legacy_py_provider","short":"","type":"boolean","default":"default: \"true\"","description":"    If set to true, native Python rules will neither produce nor consume the \n    legacy \"py\" provider. Use PyInfo instead. Under this flag, passing the \n    legacy provider to a Python target will be an error.\n","tags":["loading_and_analysis","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_disallow_old_style_args_add","short":"","type":"boolean","default":"default: \"true\"","description":"    If set to true, vectorized calls to Args#add are disallowed.\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_disallow_rule_execution_platform_constraints_allowed","short":"","type":"boolean","default":"default: \"False\"","description":"    If set to true, disallow the use of the \n    execution_platform_constraints_allowed attribute on rule().\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_disallow_split_empty_separator","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, `string.split` will fail if `sep` is the empty string.\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_disallow_struct_provider_syntax","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, rule implementation functions may not return a struct. They \n    must instead return a list of provider instances.\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_disallow_unverified_http_downloads","short":"","type":"boolean","default":"default: \"false\"","description":"    If set, disallow downloads via plain http if no checksum is given\n","tags":["loading_and_analysis","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_new_actions_api","short":"","type":"boolean","default":"default: \"true\"","description":"    If set to true, the API to create actions is only available on `ctx.\n    actions`, not on `ctx`.\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_no_attr_license","short":"","type":"boolean","default":"default: \"true\"","description":"    If set to true, disables the function `attr.license`.\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_no_output_attr_default","short":"","type":"boolean","default":"default: \"true\"","description":"    If set to true, disables the `default` parameter of the `attr.output` and \n    `attr.output_list` attribute definition functions.\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_no_rule_outputs_param","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, disables the `outputs` parameter of the `rule()` Starlark \n    function.\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_no_support_tools_in_action_inputs","short":"","type":"boolean","default":"default: \"true\"","description":"    If set to true, tools should be passed to `ctx.actions.run()` and `ctx.\n    actions.run_shell()` using the `tools` parameter instead of the `inputs` \n    parameter. Furthermore, if this flag is set and a `tools` parameter is not \n    passed to the action, it is an error for any tools to appear in the \n    `inputs`.\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_no_target_output_group","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, disables the output_group field of the 'Target' Starlark \n    type.\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_no_transitive_loads","short":"","type":"boolean","default":"default: \"true\"","description":"    If set to true, only symbols explicitly defined in the file can be loaded; \n    symbols introduced by load are not implicitly re-exported.\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_objc_framework_cleanup","short":"","type":"boolean","default":"default: \"true\"","description":"    If enabled, use the post-cleanup mode for prebuilt frameworks.  The cleanup \n    changes the objc provider API pertaining to frameworks.  This change is \n    expected to be transparent to most users unless they write their own \n    Starlark rules to handle frameworks.  See https://github.\n    com/bazelbuild/bazel/issues/7944 for details.\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_remap_main_repo","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, will treat references to '@\u003cmain repo name\u003e' the same as \n    '@'.\n","tags":["loading_and_analysis","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_remove_native_maven_jar","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, the native maven_jar rule is disabled; only the Starlark \n    version will be available\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_remove_old_python_version_api","short":"","type":"boolean","default":"default: \"true\"","description":"    If true, disables use of the `--force_python` flag and the \n    `default_python_version` attribute for `py_binary` and `py_test`. Use the \n    `--python_version` flag and `python_version` attribute instead, which have \n    exactly the same meaning. This flag also disables `select()`-ing over `--\n    host_force_python`.\n","tags":["loading_and_analysis","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_restrict_attribute_names","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, restrict rule attribute names to valid identifiers\n","tags":["loading_and_analysis","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_restrict_named_params","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, restricts a number of Starlark built-in function parameters \n    to be only specifiable positionally (and not by keyword).\n","tags":["loading_and_analysis","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_restrict_string_escapes","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, unknown string escapes like `\\a` become rejected.\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_run_shell_command_string","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, the command parameter of actions.run_shell will only accept \n    string\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_string_join_requires_strings","short":"","type":"boolean","default":"default: \"true\"","description":"    If set to true, the argument of `string.join` must be an iterable whose \n    elements are strings. If set to false, elements are first converted to \n    string. See https://github.com/bazelbuild/bazel/issues/7802\n","tags":["build_file_semantics","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"allow_analysis_failures","short":"","type":"boolean","default":"default: \"false\"","description":"    If true, an analysis failure of a rule target results in the target's \n    propagation of an instance of AnalysisFailureInfo containing the error \n    description, instead of resulting in a build failure.\n","tags":["loading_and_analysis","experimental"],"sources":[]},{"name":"analysis_testing_deps_limit","short":"","type":"integer","default":"default: \"500\"","description":"    Sets the maximum number of transitive dependencies through a rule attribute \n    with a for_analysis_testing configuration transition. Exceeding this limit \n    will result in a rule error.\n","tags":["loading_and_analysis"],"sources":[]},{"name":"break_build_on_parallel_dex2oat_failure","short":"","type":"boolean","default":"default: \"false\"","description":"    If true dex2oat action failures will cause the build to break instead of \n    executing dex2oat during test runtime.\n","tags":["loading_and_analysis","experimental"],"sources":[]},{"name":"experimental_android_use_parallel_dex2oat","short":"","type":"boolean","default":"default: \"false\"","description":"    Use dex2oat in parallel to possibly speed up android_test.\n","tags":["loading_and_analysis","host_machine_resource_optimizations","\n      experimental"],"sources":[]},{"name":"incompatible_windows_bashless_run_command","short":"","type":"boolean","default":"default: \"false\"","description":"    On Windows: if true, the \"run\" command runs the binary directly instead of \n    running through Bash; when false, then the binary is ran through Bash. On \n    other platforms: no-op.\n","tags":["host_machine_resource_optimizations","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_windows_native_test_wrapper","short":"","type":"boolean","default":"default: \"false\"","description":"    On Windows: if true, uses the C++ test wrapper to run tests, otherwise uses \n    tools/test/test-setup.sh as on other platforms. On other platforms: no-op.\n","tags":["loading_and_analysis","test_runner","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"ios_memleaks","short":"","type":"boolean","default":"default: \"false\"","description":"    Enable checking for memory leaks in ios_test targets.\n","tags":["action_command_lines"],"sources":[]},{"name":"ios_simulator_device","short":"","type":"string","default":"default: \"iPhone 5s\"","description":"    The device to simulate when running an iOS application in the simulator, e.\n    g. 'iPhone 6'. You can get a list of devices by running 'xcrun simctl list \n    devicetypes' on the machine the simulator will be run on.\n","tags":["test_runner"],"sources":[]},{"name":"ios_simulator_version","short":"","type":"dotted version (for example '2.3' or '3.3alpha2.4')","default":"default: \"9.3\"","description":"    The version of iOS to run on the simulator when running or testing. This is \n    ignored for ios_test rules if a target device is specified in the rule.\n","tags":["test_runner"],"sources":[]},{"name":"runs_per_test","short":"","type":"positive integer or test_regex@runs. This flag may be passed more than once","default":"may be used multiple times","description":"Specifies number of times to run each test. If any of those attempts fail for any reason, the whole test would be considered failed. Normally the value specified is just an integer. Example: --runs_per_test=3 will run all tests 3 times. Alternate syntax: regex_filter@runs_per_test. Where runs_per_test stands for an integer value and regex_filter stands for a list of include and exclude regular expression patterns (Also see --instrumentation_filter). Example: --runs_per_test=//foo/.*,-//foo/bar/.*@3 runs all tests in //foo/ except those under foo/bar three times. This option can be passed multiple times.","tags":[],"sources":[]},{"name":"test_env","short":"","type":"'name=value' assignment with an optional value part","default":"may be used multiple times","description":"    Specifies additional environment variables to be injected into the test \n    runner environment. Variables can be either specified by name, in which \n    case its value will be read from the Bazel client environment, or by the \n    name=value pair. This option can be used multiple times to specify several \n    variables. Used only by the 'bazel test' command.\n","tags":["test_runner"],"sources":[]},{"name":"test_timeout","short":"","type":"single integer or comma-separated list of 4 integers","default":"default: \"-1\"","description":"Override the default test timeout values for test timeouts (in secs). If a single positive integer value is specified it will override all categories.  If 4 comma-separated integers are specified, they will override the timeouts for short, moderate, long and eternal (in that order). In either form, a value of -1 tells blaze to use its default timeouts for that category.","tags":[],"sources":[]},{"name":"tvos_simulator_device","short":"","type":"string","default":"default: \"Apple TV 1080p\"","description":"    The device to simulate when running an tvOS application in the simulator, e.\n    g. 'Apple TV 1080p'. You can get a list of devices by running 'xcrun simctl \n    list devicetypes' on the machine the simulator will be run on.\n","tags":["test_runner"],"sources":[]},{"name":"tvos_simulator_version","short":"","type":"dotted version (for example '2.3' or '3.3alpha2.4')","default":"default: \"9.0\"","description":"    The version of tvOS to run on the simulator when running or testing.\n","tags":["test_runner"],"sources":[]},{"name":"watchos_simulator_device","short":"","type":"string","default":"default: \"Apple Watch - 38mm\"","description":"    The device to simulate when running an watchOS application in the \n    simulator, e.g. 'Apple Watch - 38mm'. You can get a list of devices by \n    running 'xcrun simctl list devicetypes' on the machine the simulator will \n    be run on.\n","tags":["test_runner"],"sources":[]},{"name":"watchos_simulator_version","short":"","type":"dotted version (for example '2.3' or '3.3alpha2.4')","default":"default: \"2.0\"","description":"    The version of watchOS to run on the simulator when running or testing.\n","tags":["test_runner"],"sources":[]},{"name":"collapse_duplicate_defines","short":"","type":"boolean","default":"default: \"false\"","description":"    When enabled, redundant --defines will be removed early in the build. This \n    avoids unnecessary loss of the analysis cache for certain types of \n    equivalent builds.\n","tags":["loading_and_analysis","loses_incremental_state"],"sources":[]},{"name":"distinct_host_configuration","short":"","type":"boolean","default":"default: \"true\"","description":"    Build all the tools used during the build for a distinct configuration from \n    that used for the target program. When this is disabled, the same \n    configuration is used for host and target programs. This may cause \n    undesirable rebuilds of tools such as the protocol compiler (and then \n    everything downstream) whenever a minor change is made to the target \n    configuration, such as setting the linker options. When this is enabled \n    (the default), a distinct configuration will be used to build the tools, \n    preventing undesired rebuilds. However, certain libraries will then need to \n    be compiled twice, once for each configuration, which may cause some builds \n    to be slower. As a rule of thumb, this option is likely to benefit users \n    that make frequent changes in configuration (e.g. opt/dbg).  Please read \n    the user manual for the full explanation.\n","tags":["loses_incremental_state","bazel_internal_configuration","\n      loading_and_analysis"],"sources":[]},{"name":"experimental_filter_library_jar_with_program_jar","short":"","type":"boolean","default":"default: \"false\"","description":"    Filter the ProGuard ProgramJar to remove any classes also present in the \n    LibraryJar.\n","tags":["action_command_lines"],"sources":[]},{"name":"experimental_inmemory_dotd_files","short":"","type":"boolean","default":"default: \"false\"","description":"    If enabled, C++ .d files will be passed through in memory directly from the \n    remote build nodes instead of being written to disk.\n","tags":["loading_and_analysis","execution","affects_outputs","experimental"],"sources":[]},{"name":"experimental_inmemory_jdeps_files","short":"","type":"boolean","default":"default: \"false\"","description":"    If enabled, the dependency (.jdeps) files generated from Java compilations \n    will be passed through in memory directly from the remote build nodes \n    instead of being written to disk.\n","tags":["loading_and_analysis","execution","affects_outputs","experimental"],"sources":[]},{"name":"experimental_objc_header_thinning","short":"","type":"boolean","default":"default: \"false\"","description":"    If set then ObjcCompile actions will have their action inputs reduced by \n    running a tool to detect which headers are actually required for \n    compilation.\n","tags":["changes_inputs","loading_and_analysis","experimental"],"sources":[]},{"name":"incompatible_do_not_split_linking_cmdline","short":"","type":"boolean","default":"default: \"true\"","description":"    When true, Bazel no longer modifies command line flags used for linking, \n    and also doesn't selectively decide which flags go to the param file and \n    which don't.  See https://github.com/bazelbuild/bazel/issues/7670 for \n    details.\n","tags":["loading_and_analysis","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incremental_dexing","short":"","type":"boolean","default":"default: \"true\"","description":"    Does most of the work for dexing separately for each Jar file.\n","tags":["affects_outputs","loading_and_analysis","loses_incremental_state"],"sources":[]},{"name":"keep_state_after_build","short":"","type":"boolean","default":"default: \"true\"","description":"    If false, Blaze will discard the inmemory state from this build when the \n    build finishes. Subsequent builds will not have any incrementality with \n    respect to this one.\n","tags":["loses_incremental_state"],"sources":[]},{"name":"objc_header_thinning_partition_size","short":"","type":"integer","default":"default: \"120\"","description":"    The maximum number of source files to process within in each header \n    scanning action.\n","tags":["host_machine_resource_optimizations"],"sources":[]},{"name":"objc_use_dotd_pruning","short":"","type":"boolean","default":"default: \"true\"","description":"    If set, .d files emitted by clang will be used to prune the set of inputs \n    passed into objc compiles.\n","tags":["changes_inputs","loading_and_analysis"],"sources":[]},{"name":"parse_headers_verifies_modules","short":"","type":"boolean","default":"default: \"false\"","description":"    If enabled, the parse_headers feature verifies that a header module can be \n    built for the target in question instead of doing a separate compile of the \n    header.\n","tags":["loading_and_analysis","changes_inputs"],"sources":[]},{"name":"process_headers_in_dependencies","short":"","type":"boolean","default":"default: \"false\"","description":"    When building a target //a:a, process headers in all targets that //a:a \n    depends on (if header processing is enabled for the toolchain).\n","tags":["execution"],"sources":[]},{"name":"track_incremental_state","short":"","type":"boolean","default":"default: \"true\"","description":"    If false, Blaze will not persist data that allows for invalidation and re-\n    evaluation on incremental builds in order to save memory on this build. \n    Subsequent builds will not have any incrementality with respect to this \n    one. Usually you will want to specify --batch when setting this to false.\n","tags":["loses_incremental_state"],"sources":[]},{"name":"trim_test_configuration","short":"","type":"boolean","default":"default: \"false\"","description":"    When enabled, test-related options will be cleared below the top level of \n    the build. When this flag is active, tests cannot be built as dependencies \n    of non-test rules, but changes to test-related options will not cause non-\n    test rules to be re-analyzed.\n","tags":["loading_and_analysis","loses_incremental_state"],"sources":[]},{"name":"use_singlejar_apkbuilder","short":"","type":"boolean","default":"default: \"true\"","description":"    Build Android APKs with SingleJar.\n","tags":["loading_and_analysis"],"sources":[]},{"name":"announce","short":"","type":"boolean","default":"default: \"false\"","description":"    Deprecated. No-op.\n","tags":["affects_outputs"],"sources":[]},{"name":"announce_rc","short":"","type":"boolean","default":"default: \"false\"","description":"    Whether to announce rc options.\n","tags":["affects_outputs"],"sources":[]},{"name":"attempt_to_print_relative_paths","short":"","type":"boolean","default":"default: \"false\"","description":"    When printing the location part of messages, attempt to use a path relative \n    to the workspace directory or one of the directories specified by --\n    package_path.\n","tags":["terminal_output"],"sources":[]},{"name":"bep_publish_used_heap_size_post_build","short":"","type":"boolean","default":"default: \"false\"","description":"When set we collect and publish used_heap_size_post_build from build_event_stream.proto. This forces a full GC and is off by default.","tags":[],"sources":[]},{"name":"bes_backend","short":"","type":"string","default":"default: \"\"","description":"    Specifies the build event service (BES) backend endpoint as HOST or HOST:\n    PORT. Disabled by default.\n","tags":["affects_outputs"],"sources":[]},{"name":"bes_best_effort","short":"","type":"boolean","default":"default: \"false\"","description":"    BES best effort upload has been removed. The flag has no more functionality \n    attached to it and will be removed in a future release.\n","tags":["affects_outputs"],"sources":[]},{"name":"bes_keywords","short":"","type":"comma-separated list of options","default":"may be used multiple times","description":"    Specifies a list of notification keywords to be added the default set of \n    keywords published to BES (\"command_name=\u003ccommand_name\u003e \", \n    \"protocol_name=BEP\"). Defaults to none.\n","tags":["affects_outputs"],"sources":[]},{"name":"bes_lifecycle_events","short":"","type":"boolean","default":"default: \"true\"","description":"    Specifies whether to publish BES lifecycle events. (defaults to 'true').\n","tags":["affects_outputs"],"sources":[]},{"name":"bes_outerr_buffer_size","short":"","type":"integer","default":"default: \"10240\"","description":"    Specifies the maximal size of stdout or stderr to be buffered in BEP, \n    before it is reported as a progress event. Individual writes are still \n    reported in a single event, even if larger than the specified value up to --\n    bes_outerr_chunk_size.\n","tags":["affects_outputs"],"sources":[]},{"name":"bes_outerr_chunk_size","short":"","type":"integer","default":"default: \"1048576\"","description":"    Specifies the maximal size of stdout or stderr to be sent to BEP in a \n    single message.\n","tags":["affects_outputs"],"sources":[]},{"name":"bes_results_url","short":"","type":"string","default":"default: \"\"","description":"    Specifies the base URL where a user can view the information streamed to \n    the BES backend. Bazel will output the URL appended by the invocation id to \n    the terminal.\n","tags":["terminal_output"],"sources":[]},{"name":"bes_timeout","short":"","type":"An immutable length of time.","default":"default: \"0s\"","description":"    Specifies how long bazel should wait for the BES/BEP upload to complete \n    after the build and tests have finished. A valid timeout is a natural \n    number followed by a unit: Days (d), hours (h), minutes (m), seconds (s), \n    and milliseconds (ms). The default value is '0' which means that there is \n    no timeout.\n","tags":["affects_outputs"],"sources":[]},{"name":"build_event_binary_file","short":"","type":"string","default":"default: \"\"","description":"    If non-empty, write a varint delimited binary representation of \n    representation of the build event protocol to that file.\n","tags":["affects_outputs"],"sources":[]},{"name":"build_event_binary_file_path_conversion","short":"","type":"boolean","default":"default: \"true\"","description":"    Convert paths in the binary file representation of the build event protocol \n    to more globally valid URIs whenever possible; if disabled, the file:// uri \n    scheme will always be used\n","tags":["affects_outputs"],"sources":[]},{"name":"build_event_json_file","short":"","type":"string","default":"default: \"\"","description":"    If non-empty, write a JSON serialisation of the build event protocol to \n    that file.\n","tags":["affects_outputs"],"sources":[]},{"name":"build_event_json_file_path_conversion","short":"","type":"boolean","default":"default: \"true\"","description":"    Convert paths in the json file representation of the build event protocol \n    to more globally valid URIs whenever possible; if disabled, the file:// uri \n    scheme will always be used\n","tags":["affects_outputs"],"sources":[]},{"name":"build_event_max_named_set_of_file_entries","short":"","type":"integer","default":"default: \"-1\"","description":"    The maximum number of entries for a single named_set_of_files event; values \n    smaller than 2 are ignored and no event splitting is performed. This is \n    intended for limiting the maximum event size in the build event protocol, \n    although it does not directly control event size. The total event size is a \n    function of the structure of the set as well as the file and uri lengths, \n    which may in turn depend on the hash function.\n","tags":["affects_outputs"],"sources":[]},{"name":"build_event_publish_all_actions","short":"","type":"boolean","default":"default: \"false\"","description":"    Whether all actions should be published.\n","tags":["affects_outputs"],"sources":[]},{"name":"build_event_text_file","short":"","type":"string","default":"default: \"\"","description":"    If non-empty, write a textual representation of the build event protocol to \n    that file\n","tags":["affects_outputs"],"sources":[]},{"name":"build_event_text_file_path_conversion","short":"","type":"boolean","default":"default: \"true\"","description":"    Convert paths in the text file representation of the build event protocol \n    to more globally valid URIs whenever possible; if disabled, the file:// uri \n    scheme will always be used\n","tags":["affects_outputs"],"sources":[]},{"name":"experimental_build_event_expand_filesets","short":"","type":"boolean","default":"default: \"false\"","description":"    If true, expand Filesets in the BEP when presenting output files.\n","tags":["affects_outputs"],"sources":[]},{"name":"experimental_build_event_upload_strategy","short":"","type":"string","default":"default: see description","description":"    Selects how to upload artifacts referenced in the build event protocol.\n","tags":["affects_outputs"],"sources":[]},{"name":"experimental_generate_json_trace_profile","short":"","type":"boolean","default":"default: \"false\"","description":"    If enabled, Bazel profiles the build and writes a JSON-format profile into \n    a file in the output base. View profile by loading into chrome://tracing.\n","tags":["affects_outputs","bazel_monitoring"],"sources":[]},{"name":"experimental_json_trace_compression","short":"","type":"boolean","default":"default: \"false\"","description":"    If enabled, Bazel compresses the JSON-format profile with gzip.\n","tags":["affects_outputs","bazel_monitoring"],"sources":[]},{"name":"experimental_post_profile_started_event","short":"","type":"boolean","default":"default: \"false\"","description":"    If set, Bazel will post the ProfilerStartedEvent including the path to the \n    profile.\n","tags":["affects_outputs","bazel_monitoring"],"sources":[]},{"name":"experimental_profile_action_counts","short":"","type":"boolean","default":"default: \"false\"","description":"    If set, Bazel will add action counts at the top of the JSON profile.\n","tags":["affects_outputs","bazel_monitoring"],"sources":[]},{"name":"experimental_profile_additional_tasks","short":"","type":"phase, action, __action_builder, __action_submit, action_check, __action_execute, action_lock, action_release, __action_graph, action_update, action_complete, info, __exception, create_package, __package_validity_check, __spawn, remote_execution, local_execution, scanner, local_parse, upload_time, process_time, remote_queue, remote_setup, fetch, vfs_stat, vfs_dir, vfs_readlink, vfs_md5, vfs_xattr, vfs_delete, vfs_open, vfs_read, vfs_write, vfs_glob, vfs_vmfs_stat, vfs_vmfs_dir, vfs_vmfs_read, wait, __configured_target, thread_name, __test, skyframe_eval, skyfunction, critical_path, critical_path_component, handle_gc_notification, local_cpu_usage, action_counts, __process_scan, __loop_output_artifacts, __locate_relative, __construct_include_paths, __parse_and_hints_results, __process_results_and_enqueue, starlark_parser, starlark_user_fn, starlark_builtin_fn, starlark_user_compiled_fn, action_fs_staging, remote_cache_check, remote_download or unknown","default":"may be used multiple times","description":"    Specifies additional profile tasks to be included in the profile.\n","tags":["affects_outputs","bazel_monitoring"],"sources":[]},{"name":"experimental_profile_cpu_usage","short":"","type":"boolean","default":"default: \"false\"","description":"    If set, Bazel will measure cpu usage and add it to the JSON profile.\n","tags":["affects_outputs","bazel_monitoring"],"sources":[]},{"name":"experimental_repository_resolved_file","short":"","type":"string","default":"default: \"\"","description":"    If non-empty, write a Skylark value with the resolved information of all \n    Starlark repository rules that were executed.\n","tags":["affects_outputs"],"sources":[]},{"name":"experimental_slim_json_profile","short":"","type":"boolean","default":"default: \"false\"","description":"    Slims down the size of the JSON profile by merging events if the profile \n    gets  too large.\n","tags":["affects_outputs","bazel_monitoring"],"sources":[]},{"name":"experimental_ui_deduplicate","short":"","type":"boolean","default":"default: \"false\"","description":"    Make the UI deduplicate messages to have a cleaner scroll-back log.\n","tags":["terminal_output"],"sources":[]},{"name":"experimental_workspace_rules_log_file","short":"","type":"path","default":"default: see description","description":"Log certain Workspace Rules events into this file as delimited WorkspaceEvent protos.","tags":[],"sources":[]},{"name":"explain","short":"","type":"path","default":"default: see description","description":"    Causes the build system to explain each executed step of the build. The \n    explanation is written to the specified log file.\n","tags":["affects_outputs"],"sources":[]},{"name":"incompatible_enable_profile_by_default","short":"","type":"boolean","default":"default: \"false\"","description":"    If enabled, Bazel will generate a JSON profile by default.\n","tags":["affects_outputs","bazel_monitoring","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_remove_binary_profile","short":"","type":"boolean","default":"default: \"true\"","description":"    If enabled, Bazel will write JSON-format profiles instead of binary \n    profiles.\n","tags":["affects_outputs","bazel_monitoring","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"legacy_important_outputs","short":"","type":"boolean","default":"default: \"true\"","description":"    Use this to suppress generation of the legacy important_outputs field in \n    the TargetComplete event.\n","tags":["affects_outputs"],"sources":[]},{"name":"logging","short":"","type":"0 \u003c= an integer \u003c= 6","default":"default: \"3\"","description":"    The logging level.\n","tags":["affects_outputs"],"sources":[]},{"name":"max_config_changes_to_show","short":"","type":"integer","default":"default: \"3\"","description":"    When discarding the analysis cache due to a change in the build options, \n    displays up to the given number of changed option names. If the number \n    given is -1, all changed options will be displayed.\n","tags":["terminal_output"],"sources":[]},{"name":"memory_profile_stable_heap_parameters","short":"","type":"two integers, separated by a comma","default":"default: \"1,0\"","description":"    Tune memory profile's computation of stable heap at end of build. Should be \n    two integers separated by a comma. First parameter is the number of GCs to \n    perform. Second parameter is the number of seconds to wait between GCs.\n","tags":["bazel_monitoring"],"sources":[]},{"name":"output_filter","short":"","type":"valid Java regular expression","default":"default: see description","description":"    Only shows warnings for rules with a name matching the provided regular \n    expression.\n","tags":["affects_outputs"],"sources":[]},{"name":"profile","short":"","type":"path","default":"default: see description","description":"    If set, profile Bazel and write data to the specified file. Use bazel \n    analyze-profile to analyze the profile.\n","tags":["affects_outputs","bazel_monitoring"],"sources":[]},{"name":"progress_report_interval","short":"","type":"integer in 0-3600 range","default":"default: \"0\"","description":"    The number of seconds to wait between two reports on still running jobs. \n    The default value 0 means to use the default 10:30:60 incremental algorithm.\n","tags":["affects_outputs"],"sources":[]},{"name":"project_id","short":"","type":"string","default":"default: see description","description":"    Specifies the BES project identifier. Defaults to null.\n","tags":["affects_outputs"],"sources":[]},{"name":"show_result","short":"","type":"integer","default":"default: \"1\"","description":"    Show the results of the build.  For each target, state whether or not it \n    was brought up-to-date, and if so, a list of output files that were built.  \n    The printed files are convenient strings for copy+pasting to the shell, to \n    execute them.\n    This option requires an integer argument, which is the threshold number of \n    targets above which result information is not printed. Thus zero causes \n    suppression of the message and MAX_INT causes printing of the result to \n    occur always.  The default is one.\n","tags":["affects_outputs"],"sources":[]},{"name":"tool_tag","short":"","type":"string","default":"default: \"\"","description":"    A tool name to attribute this Bazel invocation to.\n","tags":["affects_outputs","bazel_monitoring"],"sources":[]},{"name":"toolchain_resolution_debug","short":"","type":"boolean","default":"default: \"false\"","description":"    Print debug information while finding toolchains for a rule. This might \n    help developers of Bazel or Starlark rules with debugging failures due to \n    missing toolchains.\n","tags":["terminal_output"],"sources":[]},{"name":"verbose_explanations","short":"","type":"boolean","default":"default: \"false\"","description":"    Increases the verbosity of the explanations issued if --explain is enabled. \n    Has no effect if --explain is not enabled.\n","tags":["affects_outputs"],"sources":[]},{"name":"experimental_resolved_file_instead_of_workspace","short":"","type":"string","default":"default: \"\"","description":"    If non-empty read the specified resolved file instead of the WORKSPACE file\n","tags":["changes_inputs"],"sources":[]},{"name":"incompatible_py2_outputs_are_suffixed","short":"","type":"boolean","default":"default: \"true\"","description":"    If true, targets built in the Python 2 configuration will appear under an \n    output root that includes the suffix '-py2', while targets built for Python \n    3 will appear in a root with no Python-related suffix. This means that the \n    `bazel-bin` convenience symlink will point to Python 3 targets rather than \n    Python 2. If you enable this option it is also recommended to enable `--\n    incompatible_py3_is_default`.\n","tags":["affects_outputs","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_py3_is_default","short":"","type":"boolean","default":"default: \"true\"","description":"    If true, `py_binary` and `py_test` targets that do not set their \n    `python_version` (or `default_python_version`) attribute will default to \n    PY3 rather than to PY2. It is an error to set this flag without also \n    enabling `--incompatible_allow_python_version_transitions`. If you set this \n    flag it is also recommended to set `--\n    incompatible_py2_outputs_are_suffixed`.\n","tags":["loading_and_analysis","affects_outputs","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_use_python_toolchains","short":"","type":"boolean","default":"default: \"true\"","description":"    If set to true, executable native Python rules will use the Python runtime \n    specified by the Python toolchain, rather than the runtime given by legacy \n    flags like --python_top.\n","tags":["loading_and_analysis","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"python_version","short":"","type":"PY2 or PY3","default":"default: see description","description":"    The Python major version mode, either `PY2` or `PY3`. Note that under the \n    new version semantics (`--incompatible_allow_python_version_transitions`) \n    this is overridden by `py_binary` and `py_test` targets (even if they don't \n    explicitly specify a version) so there is usually not much reason to supply \n    this flag.\n","tags":["loading_and_analysis","affects_outputs"],"sources":[]},{"name":"experimental_guard_against_concurrent_changes","short":"","type":"boolean","default":"default: \"false\"","description":"Turn this off to disable checking the ctime of input files of an action before uploading it to a remote cache. There may be cases where the Linux kernel delays writing of files, which could cause false positives.","tags":[],"sources":[]},{"name":"experimental_remote_grpc_log","short":"","type":"path","default":"default: see description","description":"If specified, a path to a file to log gRPC call related details. This log consists of a sequence of serialized com.google.devtools.build.lib.remote.logging.RemoteExecutionLog.LogEntry protobufs with each message prefixed by a varint denoting the size of the following serialized protobuf message, as performed by the method LogEntry.writeDelimitedTo(OutputStream).","tags":[],"sources":[]},{"name":"remote_accept_cached","short":"","type":"boolean","default":"default: \"true\"","description":"Whether to accept remotely cached action results.","tags":[],"sources":[]},{"name":"remote_cache","short":"","type":"string","default":"default: see description","description":"A URI of a caching endpoint. The supported schemas are http(s) and grpc. If no schema is provided we'll default to grpc. See https://docs.bazel.build/versions/master/remote-caching.html","tags":[],"sources":[]},{"name":"remote_default_platform_properties","short":"","type":"string","default":"default: \"\"","description":"Set the default platform properties to be set for the remote execution API, if the execution platform does not already set remote_execution_properties. This value will also be used if the host platform is selected as the execution platform for remote execution.","tags":[],"sources":[]},{"name":"remote_execution_priority","short":"","type":"integer","default":"default: \"0\"","description":"The relative priority of actions to be executed remotely. The semantics of the particular priority values are server-dependent.","tags":[],"sources":[]},{"name":"remote_executor","short":"","type":"string","default":"default: see description","description":"HOST or HOST:PORT of a remote execution endpoint.","tags":[],"sources":[]},{"name":"remote_header","short":"","type":"'name=value' assignment","default":"may be used multiple times","description":"Specify a HTTP header that will be included in requests: --remote_header=Name=Value. Multiple headers can be passed by specifying the flag multiple times. Multiple values for the same name will be converted to a comma-separated list. This flagis currently only implemented for the HTTP protocol.","tags":[],"sources":[]},{"name":"remote_instance_name","short":"","type":"string","default":"default: \"\"","description":"Value to pass as instance_name in the remote execution API.","tags":[],"sources":[]},{"name":"remote_local_fallback","short":"","type":"boolean","default":"default: \"false\"","description":"Whether to fall back to standalone local execution strategy if remote execution fails.","tags":[],"sources":[]},{"name":"remote_local_fallback_strategy","short":"","type":"string","default":"default: \"local\"","description":"No-op, deprecated. See https://github.com/bazelbuild/bazel/issues/7480 for details.","tags":[],"sources":[]},{"name":"remote_max_connections","short":"","type":"integer","default":"default: \"100\"","description":"    The max. number of concurrent network connections to the remote \n    cache/executor. By default Bazel limits the number of TCP connections to \n    100. Setting this flag to 0 will make Bazel choose the number of \n    connections automatically.\n","tags":["host_machine_resource_optimizations"],"sources":[]},{"name":"remote_proxy","short":"","type":"string","default":"default: see description","description":"Connect to the remote cache through a proxy. Currently this flag can only be used to configure a Unix domain socket (unix:/path/to/socket) for the HTTP cache.","tags":[],"sources":[]},{"name":"remote_result_cache_priority","short":"","type":"integer","default":"default: \"0\"","description":"The relative priority of remote actions to be stored in remote cache. The semantics of the particular priority values are server-dependent.","tags":[],"sources":[]},{"name":"remote_retries","short":"","type":"integer","default":"default: \"5\"","description":"The maximum number of attempts to retry a transient error. If set to 0, retries are disabled.","tags":[],"sources":[]},{"name":"remote_timeout","short":"","type":"integer","default":"default: \"60\"","description":"The maximum number of seconds to wait for remote execution and cache calls. For the REST cache, this is both the connect and the read timeout.","tags":[],"sources":[]},{"name":"remote_upload_local_results","short":"","type":"boolean","default":"default: \"true\"","description":"Whether to upload locally executed action results to the remote cache.","tags":[],"sources":[]},{"name":"remote_verify_downloads","short":"","type":"boolean","default":"default: \"true\"","description":"If set to true, Bazel will compute the hash sum of all remote downloads and  discard the remotely cached values if they don't match the expected value.","tags":[],"sources":[]},{"name":"all_incompatible_changes","short":"","type":"","default":"","description":"    Enables all options of the form --incompatible_*. Use this option to find \n    places where your build may break in the future due to deprecations or \n    other changes.\n      Expands to: --incompatible_allow_python_version_transitions --\n      incompatible_allow_tags_propagation --\n      incompatible_assignment_identifiers_have_local_scope --\n      incompatible_auto_configure_host_platform --\n      incompatible_bzl_disallow_load_after_statement --incompatible_cc_coverage \n      --incompatible_depset_for_libraries_to_link_getter --\n      incompatible_depset_is_not_iterable --incompatible_depset_union --\n      incompatible_disable_cc_configuration_make_variables --\n      incompatible_disable_cc_toolchain_label_from_crosstool_proto --\n      incompatible_disable_crosstool_file --\n      incompatible_disable_deprecated_attr_params --\n      incompatible_disable_depset_in_cc_user_flags --\n      incompatible_disable_expand_if_all_available_in_flag_set --\n      incompatible_disable_late_bound_option_defaults --\n      incompatible_disable_legacy_cc_provider --\n      incompatible_disable_legacy_cpp_toolchain_skylark_api --\n      incompatible_disable_legacy_crosstool_fields --\n      incompatible_disable_legacy_flags_cc_toolchain_api --\n      incompatible_disable_legacy_proto_provider --\n      incompatible_disable_native_android_rules --incompatible_disable_nocopts \n      --incompatible_disable_objc_provider_resources --\n      incompatible_disable_partition_default_parameter --\n      incompatible_disable_proto_source_root --\n      incompatible_disable_runtimes_filegroups --\n      incompatible_disable_static_cc_toolchains --\n      incompatible_disable_sysroot_from_configuration --\n      incompatible_disable_target_provider_fields --\n      incompatible_disable_third_party_license_checking --\n      incompatible_disable_tools_defaults_package --\n      incompatible_disallow_dict_lookup_unhashable_keys --\n      incompatible_disallow_dict_plus --incompatible_disallow_empty_glob --\n      incompatible_disallow_hashing_frozen_mutables --\n      incompatible_disallow_legacy_java_provider --\n      incompatible_disallow_legacy_javainfo --\n      incompatible_disallow_legacy_py_provider --\n      incompatible_disallow_old_style_args_add --\n      incompatible_disallow_resource_jars --\n      incompatible_disallow_rule_execution_platform_constraints_allowed --\n      incompatible_disallow_split_empty_separator --\n      incompatible_disallow_struct_provider_syntax --\n      incompatible_disallow_unverified_http_downloads --\n      incompatible_do_not_emit_buggy_external_repo_import --\n      incompatible_do_not_split_linking_cmdline --\n      incompatible_dont_emit_static_libgcc --\n      incompatible_dont_enable_host_nonhost_crosstool_features --\n      incompatible_enable_cc_toolchain_resolution --\n      incompatible_enable_legacy_cpp_toolchain_skylark_api --\n      incompatible_enable_profile_by_default --incompatible_expand_directories \n      --incompatible_generated_protos_in_virtual_imports --\n      incompatible_linkopts_in_user_link_flags --\n      incompatible_list_based_execution_strategy_selection --\n      incompatible_load_cc_rules_from_bzl --\n      incompatible_load_java_rules_from_bzl --\n      incompatible_load_proto_rules_from_bzl --\n      incompatible_load_python_rules_from_bzl --\n      incompatible_make_thinlto_command_lines_standalone --\n      incompatible_merge_genfiles_directory --incompatible_new_actions_api --\n      incompatible_no_attr_license --incompatible_no_output_attr_default --\n      incompatible_no_rule_outputs_param --\n      incompatible_no_support_tools_in_action_inputs --\n      incompatible_no_target_output_group --incompatible_no_transitive_loads --\n      incompatible_objc_framework_cleanup --\n      incompatible_provide_cc_toolchain_info_from_cc_toolchain_suite --\n      incompatible_py2_outputs_are_suffixed --incompatible_py3_is_default --\n      incompatible_remap_main_repo --incompatible_remote_symlinks --\n      incompatible_remove_binary_profile --\n      incompatible_remove_cpu_and_compiler_attributes_from_cc_toolchain --\n      incompatible_remove_legacy_whole_archive --\n      incompatible_remove_local_resources --\n      incompatible_remove_native_maven_jar --\n      incompatible_remove_old_python_version_api --\n      incompatible_require_ctx_in_configure_features --\n      incompatible_require_feature_configuration_for_pic --\n      incompatible_require_java_toolchain_header_compiler_direct --\n      incompatible_restrict_attribute_names --\n      incompatible_restrict_named_params --incompatible_restrict_string_escapes \n      --incompatible_run_shell_command_string --\n      incompatible_skip_genfiles_symlink --incompatible_strict_action_env --\n      incompatible_strict_objc_module_maps --\n      incompatible_string_join_requires_strings --\n      incompatible_symlinked_sandbox_expands_tree_artifacts_in_runfiles_tree --\n      incompatible_tls_enabled_removed --incompatible_use_aapt2_by_default --\n      incompatible_use_jdk11_as_host_javabase --incompatible_use_native_patch --\n      incompatible_use_platforms_repo_for_constraints --\n      incompatible_use_python_toolchains --incompatible_use_specific_tool_files \n      --incompatible_use_toolchain_resolution_for_java_rules --\n      incompatible_windows_bashless_run_command --\n      incompatible_windows_escape_python_args --\n      incompatible_windows_native_test_wrapper \n","tags":["incompatible_change"],"sources":[]},{"name":"auto_output_filter","short":"","type":"none, all, packages or subpackages","default":"default: \"none\"","description":"If --output_filter is not specified, then the value for this option is used create a filter automatically. Allowed values are 'none' (filter nothing / show everything), 'all' (filter everything / show nothing), 'packages' (include output from rules in packages mentioned on the Blaze command line), and 'subpackages' (like 'packages', but also include subpackages). For the 'packages' and 'subpackages' values //java/foo and //javatests/foo are treated as one package)'.","tags":[],"sources":[]},{"name":"build_manual_tests","short":"","type":"boolean","default":"default: \"false\"","description":"Forces test targets tagged 'manual' to be built. 'manual' tests are excluded from processing. This option forces them to be built (but not executed).","tags":[],"sources":[]},{"name":"build_tag_filters","short":"","type":"comma-separated list of options","default":"default: \"\"","description":"Specifies a comma-separated list of tags. Each tag can be optionally preceded with '-' to specify excluded tags. Only those targets will be built that contain at least one included tag and do not contain any excluded tags. This option does not affect the set of tests executed with the 'test' command; those are be governed by the test filtering options, for example '--test_tag_filters'","tags":[],"sources":[]},{"name":"build_tests_only","short":"","type":"boolean","default":"default: \"false\"","description":"If specified, only *_test and test_suite rules will be built and other targets specified on the command line will be ignored. By default everything that was requested will be built.","tags":[],"sources":[]},{"name":"cache_test_results","short":"t","type":"tri-state (auto, yes, no)","default":"default: \"auto\"","description":"If set to 'auto', Bazel reruns a test if and only if: (1) Bazel detects changes in the test or its dependencies, (2) the test is marked as external, (3) multiple test runs were requested with --runs_per_test, or(4) the test previously failed. If set to 'yes', Bazel caches all test results except for tests marked as external. If set to 'no', Bazel does not cache any test results.","tags":[],"sources":[]},{"name":"check_constraint","short":"","type":"string","default":"may be used multiple times","description":"Check the listed constraint.","tags":[],"sources":[]},{"name":"check_tests_up_to_date","short":"","type":"boolean","default":"default: \"false\"","description":"Don't run tests, just check if they are up-to-date.  If all tests results are up-to-date, the testing completes successfully.  If any test needs to be built or executed, an error is reported and the testing fails.  This option implies --check_up_to_date behavior.  Using this option will also add: --check_up_to_date","tags":[],"sources":[]},{"name":"check_up_to_date","short":"","type":"boolean","default":"default: \"false\"","description":"Don't perform the build, just check if it is up-to-date.  If all targets are up-to-date, the build completes successfully.  If any step needs to be executed an error is reported and the build fails.","tags":[],"sources":[]},{"name":"color","short":"","type":"yes, no or auto","default":"default: \"auto\"","description":"Use terminal controls to colorize output.","tags":[],"sources":[]},{"name":"combined_report","short":"","type":"none or lcov","default":"default: \"none\"","description":"Specifies desired cumulative coverage report type. At this point only HTML and LCOV reports are supported.","tags":[],"sources":[]},{"name":"compile_one_dependency","short":"","type":"boolean","default":"default: \"false\"","description":"Compile a single dependency of the argument files. This is useful for syntax checking source files in IDEs, for example, by rebuilding a single target that depends on the source file to detect errors as early as possible in the edit/build/test cycle. This argument affects the way all non-flag arguments are interpreted; instead of being targets to build they are source filenames.  For each source filename an arbitrary target that depends on it will be built.","tags":[],"sources":[]},{"name":"config","short":"","type":"string","default":"may be used multiple times","description":"Selects additional config sections from the rc files; for every \u003ccommand\u003e, it also pulls in the options from \u003ccommand\u003e:\u003cconfig\u003e if such a section exists; if this section doesn't exist in any .rc file, Blaze fails with an error. The config sections and flag combinations they are equivalent to are located in the tools/*.blazerc config files.","tags":[],"sources":[]},{"name":"curses","short":"","type":"yes, no or auto","default":"default: \"auto\"","description":"Use terminal cursor controls to minimize scrolling output.","tags":[],"sources":[]},{"name":"deleted_packages","short":"","type":"comma-separated list of package names","default":"default: \"\"","description":"A comma-separated list of names of packages which the build system will consider non-existent, even if they are visible somewhere on the package path.Use this option when deleting a subpackage 'x/y' of an existing package 'x'.  For example, after deleting x/y/BUILD in your client, the build system may complain if it encounters a label '//x:y/z' if that is still provided by another package_path entry.  Specifying --deleted_packages x/y avoids this problem.","tags":[],"sources":[]},{"name":"discard_analysis_cache","short":"","type":"boolean","default":"default: \"false\"","description":"Discard the analysis cache immediately after the analysis phase completes. Reduces memory usage by ~10%, but makes further incremental builds slower.","tags":[],"sources":[]},{"name":"disk_cache","short":"","type":"path","default":"default: see description","description":"A path to a directory where Bazel can read and write actions and action outputs. If the directory does not exist, it will be created.","tags":[],"sources":[]},{"name":"embed_label","short":"","type":"string","default":"default: \"\"","description":"Embed source control revision or release label in binary","tags":[],"sources":[]},{"name":"execution_log_binary_file","short":"","type":"path","default":"default: see description","description":"Log the executed spawns into this file as delimited Spawn protos.","tags":[],"sources":[]},{"name":"execution_log_json_file","short":"","type":"path","default":"default: see description","description":"Log the executed spawns into this file as json representation of the delimited Spawn protos.","tags":[],"sources":[]},{"name":"expand_test_suites","short":"","type":"boolean","default":"default: \"true\"","description":"    Expand test_suite targets into their constituent tests before analysis. \n    When this flag is turned on (the default), negative target patterns will \n    apply to the tests belonging to the test suite, otherwise they will not. \n    Turning off this flag is useful when top-level aspects are applied at \n    command line: then they can analyze test_suite targets.\n","tags":["loading_and_analysis"],"sources":[]},{"name":"experimental_execution_log_file","short":"","type":"path","default":"default: see description","description":"Log the executed spawns into this file as delimited Spawn protos.","tags":[],"sources":[]},{"name":"experimental_extra_action_filter","short":"","type":"comma-separated list of regex expressions with prefix '-' specifying excluded paths","default":"default: \"\"","description":"Filters set of targets to schedule extra_actions for.","tags":[],"sources":[]},{"name":"experimental_extra_action_top_level_only","short":"","type":"boolean","default":"default: \"false\"","description":"Only schedules extra_actions for top level targets.","tags":[],"sources":[]},{"name":"experimental_interleave_loading_and_analysis","short":"","type":"boolean","default":"default: \"true\"","description":"No-op.","tags":[],"sources":[]},{"name":"experimental_j2objc_header_map","short":"","type":"boolean","default":"default: \"true\"","description":"Whether to generate J2ObjC header map in parallel of J2ObjC transpilation.","tags":[],"sources":[]},{"name":"experimental_j2objc_shorter_header_path","short":"","type":"boolean","default":"default: \"false\"","description":"    Whether to generate with shorter header path (uses \"_ios\" instead of \n    \"_j2objc\").\n","tags":["affects_outputs"],"sources":[]},{"name":"experimental_java_classpath","short":"","type":"off, javabuilder or bazel","default":"default: \"javabuilder\"","description":"Enables reduced classpaths for Java compilations.","tags":[],"sources":[]},{"name":"experimental_local_execution_delay","short":"","type":"integer","default":"default: \"1000\"","description":"How many milliseconds should local execution be delayed, if remote execution was faster during a build at least once?","tags":[],"sources":[]},{"name":"experimental_local_memory_estimate","short":"","type":"boolean","default":"default: \"false\"","description":"Estimate the actual memory available online. By default, Blaze assumes most actions use a fixed amount of memory, and counts that against the total available system memory, regardless of how much memory is actually available.  This option enables online estimation of how much memory is available at any given time, and thus does not require accurate estimation of how much memory a given action will take.","tags":[],"sources":[]},{"name":"experimental_multi_threaded_digest","short":"","type":"boolean","default":"default: \"false\"","description":"Whether to always compute MD5 digests of files with multiple threads. Might improve performance when using an SSD.","tags":[],"sources":[]},{"name":"experimental_persistent_javac","short":"","type":"","default":"","description":"Enable the experimental persistent Java compiler.  Expands to: --strategy=Javac=worker --strategy=JavaIjar=local --  strategy=JavaDeployJar=local --strategy=JavaSourceJar=local --  strategy=Turbine=local","tags":[],"sources":[]},{"name":"experimental_sandbox_base","short":"","type":"string","default":"default: \"\"","description":"Lets the sandbox create its sandbox directories underneath this path. Specify a path on tmpfs (like /run/shm) to possibly improve performance a lot when your build / tests have many input files. Note: You need enough RAM and free space on the tmpfs to hold output and intermediate files generated by running actions.","tags":[],"sources":[]},{"name":"experimental_sandbox_default_allow_network","short":"","type":"boolean","default":"default: \"true\"","description":"Allow network access by default for actions.","tags":[],"sources":[]},{"name":"experimental_spawn_scheduler","short":"","type":"","default":"","description":"Enable dynamic execution by running actions locally and remotely in parallel. Bazel spawns each action locally and remotely and picks the one that completes first. If an action supports workers, the local action will be run in the persistent worker mode. To enable dynamic execution for an individual action mnemonic, use the `--internal_spawn_scheduler` and `--strategy=\u003cmnemonic\u003e=dynamic` flags instead.  Expands to: --internal_spawn_scheduler --spawn_strategy=dynamic","tags":[],"sources":[]},{"name":"experimental_ui_limit_console_output","short":"","type":"integer","default":"default: \"0\"","description":"Number of bytes to which the UI will limit its output (non-positive values indicate unlimited). Once the limit is approaching, the UI will try hard to limit in a meaningful way, but will ultimately just drop all output.","tags":[],"sources":[]},{"name":"experimental_ui_mode","short":"","type":"oldest_actions or mnemonic_histogram","default":"default: \"oldest_actions\"","description":"    Determines what kind of data is shown in the detailed progress bar. By \n    default, it is set to show the oldest actions and their running time. The \n    underlying data source is usually sampled in a mode-dependend way to fit \n    within the number of lines given by --ui_actions_shown.\n","tags":["terminal_output"],"sources":[]},{"name":"explicit_java_test_deps","short":"","type":"boolean","default":"default: \"false\"","description":"Explicitly specify a dependency to JUnit or Hamcrest in a java_test instead of  accidentally obtaining from the TestRunner's deps. Only works for bazel right now.","tags":[],"sources":[]},{"name":"flaky_test_attempts","short":"","type":"positive integer, the string \"default\", or test_regex@attempts. This flag may be passed more than once","default":"may be used multiple times","description":"Each test will be retried up to the specified number of times in case of any test failure. Tests that required more than one attempt to pass would be marked as 'FLAKY' in the test summary. If this option is set, it should specify an int N or the string 'default'. If it's an int, then all tests will be run up to N times. If it is not specified or its value is 'default', then only a single test attempt will be made for regular tests and three for tests marked explicitly as flaky by their rule (flaky=1 attribute).","tags":[],"sources":[]},{"name":"genrule_strategy","short":"","type":"comma-separated list of options","default":"default: \"\"","description":"Specify how to execute genrules. This flag will be phased out. Instead, use --spawn_strategy=\u003cvalue\u003e to control all actions or --strategy=Genrule=\u003cvalue\u003e to control genrules only.","tags":[],"sources":[]},{"name":"google_auth_scopes","short":"","type":"comma-separated list of options","default":"default: \"https://www.googleapis.com/auth/cloud-platform\"","description":"A comma-separated list of Google Cloud authentication scopes.","tags":[],"sources":[]},{"name":"google_credentials","short":"","type":"string","default":"default: see description","description":"Specifies the file to get authentication credentials from. See https://cloud.google.com/docs/authentication for details.","tags":[],"sources":[]},{"name":"google_default_credentials","short":"","type":"boolean","default":"default: \"false\"","description":"Whether to use 'Google Application Default Credentials' for authentication. See https://cloud.google.com/docs/authentication for details. Disabled by default.","tags":[],"sources":[]},{"name":"high_priority_workers","short":"","type":"string","default":"may be used multiple times","description":"Mnemonics of workers to run with high priority. When high priority workers are running all other workers are throttled.","tags":[],"sources":[]},{"name":"host_java_launcher","short":"","type":"build target label","default":"default: see description","description":"The Java launcher used by tools that are executed during a build.","tags":[],"sources":[]},{"name":"host_java_toolchain","short":"","type":"build target label","default":"default: \"@bazel_tools//tools/jdk:remote_toolchain\"","description":"The Java toolchain used to build tools that are executed during a build.","tags":[],"sources":[]},{"name":"host_javabase","short":"","type":"build target label","default":"default: see description","description":"JAVABASE used for the host JDK. This is the java_runtime which is used to execute tools during a build.","tags":[],"sources":[]},{"name":"host_javacopt","short":"","type":"string","default":"may be used multiple times","description":"Additional options to pass to javac when building tools that are executed during a build.","tags":[],"sources":[]},{"name":"ignore_unsupported_sandboxing","short":"","type":"boolean","default":"default: \"false\"","description":"Do not print a warning when sandboxed execution is not supported on this system.","tags":[],"sources":[]},{"name":"incompatible_expand_directories","short":"","type":"boolean","default":"default: \"true\"","description":"    Controls whether directories are expanded to the list of files under that \n    directory when added to Args, instead of replaced by the path of the \n    directory.\n","tags":["incompatible_change","triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_strict_action_env","short":"","type":"boolean","default":"default: \"false\"","description":"    If true, Bazel uses an environment with a static value for PATH and does \n    not inherit LD_LIBRARY_PATH or TMPDIR. Use --action_env=ENV_VARIABLE if you \n    want to inherit specific environment variables from the client, but note \n    that doing so can prevent cross-user caching if a shared cache is used.\n","tags":["loading_and_analysis","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_tls_enabled_removed","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, bazel will handle --tls_enabled as a not existing flag.See \n    #8061 for details.\n","tags":["incompatible_change","triggered_by_all_incompatible_changes"],"sources":[]},{"name":"incompatible_use_native_patch","short":"","type":"boolean","default":"default: \"false\"","description":"    If enabled, Bazel's repository rules use a native implementation of patch, \n    otherwise Bazel still calls patch command line tool for applying patch \n    files.\n","tags":["loading_and_analysis","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"j2objc_translation_flags","short":"","type":"comma-separated list of options","default":"may be used multiple times","description":"Additional options to pass to the J2ObjC tool.","tags":[],"sources":[]},{"name":"java_debug","short":"","type":"","default":"","description":"Causes the Java virtual machine of a java test to wait for a connection from a JDWP-compliant debugger (such as jdb) before starting the test. Implies -test_output=streamed.  Expands to: --test_arg=--wrapper_script_flag=--debug --  test_output=streamed --test_strategy=exclusive --test_timeout=9999 --  nocache_test_results","tags":[],"sources":[]},{"name":"java_deps","short":"","type":"boolean","default":"default: \"true\"","description":"Generate dependency information (for now, compile-time classpath) per Java target.","tags":[],"sources":[]},{"name":"java_header_compilation","short":"","type":"boolean","default":"default: \"true\"","description":"Compile ijars directly from source.","tags":[],"sources":[]},{"name":"java_launcher","short":"","type":"build target label","default":"default: see description","description":"The Java launcher to use when building Java binaries. The \"launcher\" attribute overrides this flag.","tags":[],"sources":[]},{"name":"java_toolchain","short":"","type":"build target label","default":"default: \"@bazel_tools//tools/jdk:remote_toolchain\"","description":"The name of the toolchain rule for Java.","tags":[],"sources":[]},{"name":"javabase","short":"","type":"build target label","default":"default: \"@bazel_tools//tools/jdk:jdk\"","description":"JAVABASE used for the JDK invoked by Blaze. This is the java_runtime which will be used to execute external Java commands.","tags":[],"sources":[]},{"name":"javacopt","short":"","type":"string","default":"may be used multiple times","description":"Additional options to pass to javac.","tags":[],"sources":[]},{"name":"jvmopt","short":"","type":"string","default":"may be used multiple times","description":"Additional options to pass to the Java VM. These options will get added to the VM startup options of each java_binary target.","tags":[],"sources":[]},{"name":"local_cpu_resources","short":"","type":"integer, or \"HOST_CPUS\", optionally followed by [-|*]\u003cfloat\u003e.","default":"default: \"HOST_CPUS\"","description":"Explicitly set the number of local CPU threads available to Bazel. Takes an integer, or \"HOST_CPUS\", optionally followed by [-|*]\u003cfloat\u003e (eg. HOST_CPUS*.5 to use half the available CPU cores).By default, (\"HOST_CPUS\"), Bazel will query system configuration to estimate number of CPU cores available for the locally executed build actions. Note: This is a no-op if --local_resources is set.","tags":[],"sources":[]},{"name":"local_ram_resources","short":"","type":"integer, or \"HOST_RAM\", optionally followed by [-|*]\u003cfloat\u003e.","default":"default: \"HOST_RAM*.67\"","description":"Explicitly set the amount of local host RAM (in MB) available to Bazel. Takes an integer, or \"HOST_RAM\", optionally followed by [-|*]\u003cfloat\u003e (eg. HOST_RAM*.5 to use half the available RAM).By default, (\"HOST_RAM*.67\"), Bazel will query system configuration to estimate amount of RAM available for the locally executed build actions and will use 67% of available RAM. Note: This is a no-op if --ram_utilization_factor or --local_resources is set.","tags":[],"sources":[]},{"name":"local_resources","short":"","type":"comma-separated available amount of RAM (in MB), CPU (in cores) and available I/O (1.0 being average workstation)","default":"default: see description","description":"Explicitly set amount of local resources available to Blaze. By default, Bazel will query system configuration to estimate amount of RAM (in MB) and number of CPU cores available for the locally executed build actions. It would also assume default I/O capabilities of the local workstation (1.0). This options allows to explicitly set all 3 values. Note, that if this option is used, Bazel will ignore --ram_utilization_factor, --local_cpu_resources, and --local_ram_resources.","tags":[],"sources":[]},{"name":"local_termination_grace_seconds","short":"","type":"integer","default":"default: \"15\"","description":"Time to wait between terminating a local process due to timeout and forcefully shutting it down.","tags":[],"sources":[]},{"name":"local_test_jobs","short":"","type":"integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]\u003cfloat\u003e) eg. \"auto\", \"HOST_CPUS*.5\"","default":"default: \"auto\"","description":"The max number of local test jobs to run concurrently. Takes an integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]\u003cfloat\u003e) eg. \"auto\", \"HOST_CPUS*.5\". 0 means local resources will limit the number of local test jobs to run concurrently instead. Setting this greater than the value for --jobs is ineffectual.","tags":[],"sources":[]},{"name":"materialize_param_files","short":"","type":"boolean","default":"default: \"false\"","description":"Writes intermediate parameter files to output tree even when using remote action execution. Useful when debugging actions.","tags":[],"sources":[]},{"name":"message_translations","short":"","type":"string","default":"may be used multiple times","description":"The message translations used for translating messages in Java targets.","tags":[],"sources":[]},{"name":"override_repository","short":"","type":"equals-separated mapping of repository name to path","default":"may be used multiple times","description":"Overrides a repository with a local directory.","tags":[],"sources":[]},{"name":"package_path","short":"","type":"colon-separated list of options","default":"default: \"%workspace%\"","description":"A colon-separated list of where to look for packages. Elements beginning with '%workspace%' are relative to the enclosing workspace. If omitted or empty, the default is the output of 'bazel info default-package-path'.","tags":[],"sources":[]},{"name":"plugin","short":"","type":"build target label","default":"may be used multiple times","description":"Plugins to use in the build. Currently works with java_plugin.","tags":[],"sources":[]},{"name":"progress_in_terminal_title","short":"","type":"boolean","default":"default: \"false\"","description":"Show the command progress in the terminal title. Useful to see what bazel is doing when having multiple terminal tabs.","tags":[],"sources":[]},{"name":"proguard_top","short":"","type":"build target label","default":"default: see description","description":"Specifies which version of ProGuard to use for code removal when building a Java binary.","tags":[],"sources":[]},{"name":"proto_compiler","short":"","type":"build target label","default":"default: \"@com_google_protobuf//:protoc\"","description":"    The label of the proto-compiler.\n","tags":["affects_outputs","loading_and_analysis"],"sources":[]},{"name":"proto_toolchain_for_cc","short":"","type":"build target label","default":"default: \"@com_google_protobuf//:cc_toolchain\"","description":"    Label of proto_lang_toolchain() which describes how to compile C++ protos\n","tags":["affects_outputs","loading_and_analysis"],"sources":[]},{"name":"proto_toolchain_for_j2objc","short":"","type":"build target label","default":"default: \"@bazel_tools//tools/j2objc:j2objc_proto_toolchain\"","description":"    Label of proto_lang_toolchain() which describes how to compile j2objc protos\n","tags":["affects_outputs","loading_and_analysis"],"sources":[]},{"name":"proto_toolchain_for_java","short":"","type":"build target label","default":"default: \"@com_google_protobuf//:java_toolchain\"","description":"    Label of proto_lang_toolchain() which describes how to compile Java protos\n","tags":["affects_outputs","loading_and_analysis"],"sources":[]},{"name":"proto_toolchain_for_javalite","short":"","type":"build target label","default":"default: \"@com_google_protobuf_javalite//:javalite_toolchain\"","description":"    Label of proto_lang_toolchain() which describes how to compile JavaLite \n    protos\n","tags":["affects_outputs","loading_and_analysis"],"sources":[]},{"name":"protocopt","short":"","type":"string","default":"may be used multiple times","description":"    Additional options to pass to the protobuf compiler.\n","tags":["affects_outputs"],"sources":[]},{"name":"ram_utilization_factor","short":"","type":"integer","default":"default: \"0\"","description":"Specify what percentage of the system's RAM Bazel should try to use for its subprocesses. This option affects how many processes Bazel will try to run in parallel. If you run several Bazel builds in parallel, using a lower value for this option may avoid thrashing and thus improve overall throughput. Using a value higher than 67 is NOT recommended. Note that Blaze's estimates are very coarse, so the actual RAM usage may be much higher or much lower than specified. Note also that this option does not affect the amount of memory that the Bazel server itself will use. Setting this value overrides --local_ram_resources","tags":[],"sources":[]},{"name":"resource_autosense","short":"","type":"boolean","default":"default: \"false\"","description":"This flag has no effect, and is deprecated","tags":[],"sources":[]},{"name":"runs_per_test_detects_flakes","short":"","type":"boolean","default":"default: \"false\"","description":"If true, any shard in which at least one run/attempt passes and at least one run/attempt fails gets a FLAKY status.","tags":[],"sources":[]},{"name":"sandbox_add_mount_pair","short":"","type":"single path or a 'source:target' pair","default":"may be used multiple times","description":"Add additional path pair to mount in sandbox.","tags":[],"sources":[]},{"name":"sandbox_block_path","short":"","type":"string","default":"may be used multiple times","description":"For sandboxed actions, disallow access to this path.","tags":[],"sources":[]},{"name":"sandbox_debug","short":"","type":"boolean","default":"default: \"false\"","description":"Enables debugging features for the sandboxing feature. This includes two things: first, the sandbox root contents are left untouched after a build (and if sandboxfs is in use, the file system is left mounted); and second, prints extra debugging information on execution. This can help developers of Bazel or Starlark rules with debugging failures due to missing input files, etc.","tags":[],"sources":[]},{"name":"sandbox_fake_hostname","short":"","type":"boolean","default":"default: \"false\"","description":"Change the current hostname to 'localhost' for sandboxed actions.","tags":[],"sources":[]},{"name":"sandbox_fake_username","short":"","type":"boolean","default":"default: \"false\"","description":"Change the current username to 'nobody' for sandboxed actions.","tags":[],"sources":[]},{"name":"sandbox_tmpfs_path","short":"","type":"string","default":"may be used multiple times","description":"For sandboxed actions, mount an empty, writable directory at this path (if supported by the sandboxing implementation, ignored otherwise).","tags":[],"sources":[]},{"name":"sandbox_writable_path","short":"","type":"string","default":"may be used multiple times","description":"For sandboxed actions, make an existing directory writable in the sandbox (if supported by the sandboxing implementation, ignored otherwise).","tags":[],"sources":[]},{"name":"shell_executable","short":"","type":"path","default":"default: see description","description":"    Absolute path to the shell executable for Bazel to use. If this is unset, \n    but the BAZEL_SH environment variable is set on the first Bazel invocation \n    (that starts up a Bazel server), Bazel uses that. If neither is set, Bazel \n    uses a hard-coded default path depending on the operating system it runs on \n    (Windows: c:/tools/msys64/usr/bin/bash.exe, FreeBSD: /usr/local/bin/bash, \n    all others: /bin/bash). Note that using a shell that is not compatible with \n    bash may lead to build failures or runtime failures of the generated \n    binaries.\n","tags":["loading_and_analysis"],"sources":[]},{"name":"show_loading_progress","short":"","type":"boolean","default":"default: \"true\"","description":"If enabled, causes Bazel to print \"Loading package:\" messages.","tags":[],"sources":[]},{"name":"show_progress","short":"","type":"boolean","default":"default: \"true\"","description":"Display progress messages during a build.","tags":[],"sources":[]},{"name":"show_progress_rate_limit","short":"","type":"double","default":"default: \"0.2\"","description":"Minimum number of seconds between progress messages in the output.","tags":[],"sources":[]},{"name":"show_task_finish","short":"","type":"boolean","default":"default: \"false\"","description":"Display progress messages when tasks complete, not just when they start.","tags":[],"sources":[]},{"name":"show_timestamps","short":"","type":"boolean","default":"default: \"false\"","description":"Include timestamps in messages","tags":[],"sources":[]},{"name":"spawn_strategy","short":"","type":"comma-separated list of options","default":"default: \"\"","description":"Specify how spawn actions are executed by default. 'standalone' means run all of them locally without any kind of sandboxing. 'sandboxed' means to run them in a sandboxed environment with limited privileges (details depend on platform support).","tags":[],"sources":[]},{"name":"strategy","short":"","type":"'[name=]value1[,..,valueN]' assignment","default":"may be used multiple times","description":"Specify how to distribute compilation of other spawn actions. Example: 'Javac=local' means to spawn Java compilation locally. 'JavaIjar=sandboxed' means to spawn Java Ijar actions in a sandbox.","tags":[],"sources":[]},{"name":"strategy_regexp","short":"","type":"'\u003cRegexFilter\u003e=value[,value]' assignment","default":"may be used multiple times","description":"Override which spawn strategy should be used to execute spawn actions that have descriptions matching a certain regex_filter. See --per_file_copt for details onregex_filter matching. The first regex_filter that matches the description is used. This option overrides other flags for specifying strategy. Example: --strategy_regexp=//foo.*\\.cc,-//foo/bar=local means to run actions using local strategy if their descriptions match //foo.*.cc but not //foo/bar. Example: --strategy_regexp='Compiling.*/bar=local  --strategy_regexp=Compiling=sandboxed will run 'Compiling //foo/bar/baz' with the 'local' strategy, but reversing the order would run it with 'sandboxed'.","tags":[],"sources":[]},{"name":"subcommands","short":"s","type":"true, pretty_print or false","default":"default: \"false\"","description":"Display the subcommands executed during a build.","tags":[],"sources":[]},{"name":"test_arg","short":"","type":"string","default":"may be used multiple times","description":"Specifies additional options and arguments that should be passed to the test executable. Can be used multiple times to specify several arguments. If multiple tests are executed, each of them will receive identical arguments. Used only by the 'bazel test' command.","tags":[],"sources":[]},{"name":"test_filter","short":"","type":"string","default":"default: see description","description":"Specifies a filter to forward to the test framework.  Used to limit the tests run. Note that this does not affect which targets are built.","tags":[],"sources":[]},{"name":"test_keep_going","short":"","type":"boolean","default":"default: \"true\"","description":"When disabled, any non-passing test will cause the entire build to stop. By default all tests are run, even if some do not pass.","tags":[],"sources":[]},{"name":"test_lang_filters","short":"","type":"comma-separated list of options","default":"default: \"\"","description":"Specifies a comma-separated list of test languages. Each language can be optionally preceded with '-' to specify excluded languages. Only those test targets will be found that are written in the specified languages. The name used for each language should be the same as the language prefix in the *_test rule, e.g. one of 'cc', 'java', 'py', etc. This option affects --build_tests_only behavior and the test command.","tags":[],"sources":[]},{"name":"test_output","short":"","type":"summary, errors, all or streamed","default":"default: \"summary\"","description":"Specifies desired output mode. Valid values are 'summary' to output only test status summary, 'errors' to also print test logs for failed tests, 'all' to print logs for all tests and 'streamed' to output logs for all tests in real time (this will force tests to be executed locally one at a time regardless of --test_strategy value).","tags":[],"sources":[]},{"name":"test_result_expiration","short":"","type":"integer","default":"default: \"-1\"","description":"This option is deprecated and has no effect.","tags":[],"sources":[]},{"name":"test_sharding_strategy","short":"","type":"explicit or disabled","default":"default: \"explicit\"","description":"Specify strategy for test sharding: 'explicit' to only use sharding if the 'shard_count' BUILD attribute is present. 'disabled' to never use test sharding.","tags":[],"sources":[]},{"name":"test_size_filters","short":"","type":"comma-separated list of values: small, medium, large or enormous","default":"default: \"\"","description":"Specifies a comma-separated list of test sizes. Each size can be optionally preceded with '-' to specify excluded sizes. Only those test targets will be found that contain at least one included size and do not contain any excluded sizes. This option affects --build_tests_only behavior and the test command.","tags":[],"sources":[]},{"name":"test_strategy","short":"","type":"string","default":"default: \"\"","description":"Specifies which strategy to use when running tests.","tags":[],"sources":[]},{"name":"test_summary","short":"","type":"short, terse, detailed, none or testcase","default":"default: \"short\"","description":"Specifies the desired format ot the test summary. Valid values are 'short' to print information only about tests executed, 'terse', to print information only about unsuccessful tests that were run, 'detailed' to print detailed information about failed test cases, and 'none' to omit the summary.","tags":[],"sources":[]},{"name":"test_tag_filters","short":"","type":"comma-separated list of options","default":"default: \"\"","description":"Specifies a comma-separated list of test tags. Each tag can be optionally preceded with '-' to specify excluded tags. Only those test targets will be found that contain at least one included tag and do not contain any excluded tags. This option affects --build_tests_only behavior and the test command.","tags":[],"sources":[]},{"name":"test_timeout_filters","short":"","type":"comma-separated list of values: short, moderate, long or eternal","default":"default: \"\"","description":"Specifies a comma-separated list of test timeouts. Each timeout can be optionally preceded with '-' to specify excluded timeouts. Only those test targets will be found that contain at least one included timeout and do not contain any excluded timeouts. This option affects --build_tests_only behavior and the test command.","tags":[],"sources":[]},{"name":"test_tmpdir","short":"","type":"path","default":"default: see description","description":"Specifies the base temporary directory for 'bazel test' to use.","tags":[],"sources":[]},{"name":"tls_certificate","short":"","type":"string","default":"default: see description","description":"Specify the TLS client certificate to use.","tags":[],"sources":[]},{"name":"tls_enabled","short":"","type":"boolean","default":"default: \"false\"","description":"DEPRECATED. Specifies whether to use TLS for remote execution/caching and the build event service (BES). See #8061 for details.","tags":[],"sources":[]},{"name":"translations","short":"","type":"tri-state (auto, yes, no)","default":"default: \"auto\"","description":"Translate Java messages; bundle all translations into the jar for each affected rule.","tags":[],"sources":[]},{"name":"ui_actions_shown","short":"","type":"integer","default":"default: \"8\"","description":"    Number of concurrent actions shown in the detailed progress bar; each \n    action is shown on a separate line. The progress bar always shows at least \n    one one, all numbers less than 1 are mapped to 1. This option has no effect \n    if --noui is set.\n","tags":["terminal_output"],"sources":[]},{"name":"use_ijars","short":"","type":"boolean","default":"default: \"true\"","description":"If enabled, this option causes Java compilation to use interface jars. This will result in faster incremental compilation, but error messages can be different.","tags":[],"sources":[]},{"name":"verbose_failures","short":"","type":"boolean","default":"default: \"false\"","description":"If a command fails, print out the full command line.","tags":[],"sources":[]},{"name":"watchfs","short":"","type":"boolean","default":"default: \"false\"","description":"On Linux/macOS: If true, bazel tries to use the operating system's file watch service for local changes instead of scanning every file for a change. On Windows: this flag is a non-op.","tags":[],"sources":[]},{"name":"worker_extra_flag","short":"","type":"'name=value' assignment","default":"may be used multiple times","description":"Extra command-flags that will be passed to worker processes in addition to --persistent_worker, keyed by mnemonic (e.g. --worker_extra_flag=Javac=--debug.","tags":[],"sources":[]},{"name":"worker_max_instances","short":"","type":"[name=]value, where value is an integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]\u003cfloat\u003e) eg. \"auto\", \"HOST_CPUS*.5\"","default":"may be used multiple times","description":"How many instances of a worker process (like the persistent Java compiler) may be launched if you use the 'worker' strategy. May be specified as [name=value] to give a different value per worker mnemonic. Takes an integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]\u003cfloat\u003e) eg. \"auto\", \"HOST_CPUS*.5\". 'auto' calculates a reasonable default based on machine capacity. \"=value\" sets a default for unspecified mnemonics.","tags":[],"sources":[]},{"name":"worker_quit_after_build","short":"","type":"boolean","default":"default: \"false\"","description":"If enabled, all workers quit after a build is done.","tags":[],"sources":[]},{"name":"worker_sandboxing","short":"","type":"boolean","default":"default: \"false\"","description":"If enabled, workers will be executed in a sandboxed environment.","tags":[],"sources":[]},{"name":"worker_verbose","short":"","type":"boolean","default":"default: \"false\"","description":"If enabled, prints verbose messages when workers are started, shutdown, ...","tags":[],"sources":[]},{"name":"workspace_status_command","short":"","type":"path","default":"default: \"\"","description":"A command invoked at the beginning of the build to provide status information about the workspace in the form of key/value pairs.  See the User's Manual for the full specification.","tags":[],"sources":[]}]