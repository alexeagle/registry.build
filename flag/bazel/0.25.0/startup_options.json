[{"name":"batch","short":"","type":"boolean","default":"default: \"false\"","description":"    If set, Bazel will be run as just a client process without a server, \n    instead of in the standard client/server mode. This is deprecated and will \n    be removed, please prefer shutting down the server explicitly if you wish \n    to avoid lingering servers.\n","tags":["loses_incremental_state","bazel_internal_configuration","deprecated"],"sources":[]},{"name":"batch_cpu_scheduling","short":"","type":"boolean","default":"default: \"false\"","description":"    Only on Linux; use 'batch' CPU scheduling for Blaze. This policy is useful \n    for workloads that are non-interactive, but do not want to lower their nice \n    value. See 'man 2 sched_setscheduler'. If false, then Bazel does not \n    perform a system call.\n","tags":["host_machine_resource_optimizations"],"sources":[]},{"name":"bazelrc","short":"","type":"string","default":"default: see description","description":"    The location of the user .bazelrc file containing default values of Bazel \n    options. If unspecified, Bazel uses the first .bazelrc file it finds in the \n    following two locations: the workspace directory, then the user's home \n    directory. Use /dev/null to disable the search for a user rc file, e.g. in \n    release builds.\n","tags":["changes_inputs"],"sources":[]},{"name":"block_for_lock","short":"","type":"boolean","default":"default: \"true\"","description":"    When --noblock_for_lock is passed, Bazel does not wait for a running \n    command to complete, but instead exits immediately.\n","tags":["eagerness_to_exit"],"sources":[]},{"name":"client_debug","short":"","type":"boolean","default":"default: \"false\"","description":"    If true, log debug information from the client to stderr. Changing this \n    option will not cause the server to restart.\n","tags":["affects_outputs","bazel_monitoring"],"sources":[]},{"name":"connect_timeout_secs","short":"","type":"integer","default":"default: \"30\"","description":"    The amount of time the client waits for each attempt to connect to the \n    server\n","tags":["bazel_internal_configuration"],"sources":[]},{"name":"deep_execroot","short":"","type":"boolean","default":"default: \"true\"","description":"    If set, the execution root will be under $OUTPUT_BASE/execroot instead of \n    $OUTPUT_BASE.\n","tags":["loses_incremental_state","execution"],"sources":[]},{"name":"expand_configs_in_place","short":"","type":"boolean","default":"default: \"true\"","description":"    Changed the expansion of --config flags to be done in-place, as opposed to \n    in a fixed point expansion between normal rc options and command-line \n    specified options.\n","tags":["no_op","deprecated"],"sources":[]},{"name":"experimental_oom_more_eagerly","short":"","type":"boolean","default":"default: \"false\"","description":"    If set, attempt to detect Java heap OOM conditions and exit before \n    thrashing. Only honored when --batch is also passed. In some cases, builds \n    that previously succeeded may OOM if they were close to OOMing before. \n    Deprecated: Use the command argument --\n    experimental_oom_more_eagerly_threshold instead.\n","tags":["loses_incremental_state","eagerness_to_exit"],"sources":[]},{"name":"experimental_oom_more_eagerly_threshold","short":"","type":"integer","default":"default: \"100\"","description":"    If this flag is set, Bazel will OOM if, after two full GC's, more than this \n    percentage of the (old gen) heap is still occupied. Deprecated: Use the \n    command argument --experimental_oom_more_eagerly_threshold instead.\n","tags":["loses_incremental_state","eagerness_to_exit"],"sources":[]},{"name":"home_rc","short":"","type":"boolean","default":"default: \"true\"","description":"    Whether or not to look for the home bazelrc file at $HOME/.bazelrc\n","tags":["changes_inputs"],"sources":[]},{"name":"idle_server_tasks","short":"","type":"boolean","default":"default: \"true\"","description":"    Run System.gc() when the server is idle\n","tags":["loses_incremental_state","host_machine_resource_optimizations"],"sources":[]},{"name":"ignore_all_rc_files","short":"","type":"boolean","default":"default: \"false\"","description":"    Disables all rc files, regardless of the values of other rc-modifying \n    flags, even if these flags come later in the list of startup options.\n","tags":["changes_inputs"],"sources":[]},{"name":"io_nice_level","short":"","type":"integer","default":"default: \"-1\"","description":"    Only on Linux; set a level from 0-7 for best-effort IO scheduling using the \n    sys_ioprio_set system call. 0 is highest priority, 7 is lowest. The \n    anticipatory scheduler may only honor up to priority 4. If set to a \n    negative value, then Bazel does not perform a system call.\n","tags":["host_machine_resource_optimizations"],"sources":[]},{"name":"macos_qos_class","short":"","type":"string","default":"default: \"default\"","description":"    Sets the QoS service class of the bazel server when running on macOS. \n    This flag has no effect on all other platforms but is supported to ensure \n    rc files can be shared among them without changes. Possible values are: \n    user-interactive, user-initiated, default, utility, and background.\n","tags":["host_machine_resource_optimizations"],"sources":[]},{"name":"max_idle_secs","short":"","type":"integer","default":"default: \"10800\"","description":"    The number of seconds the build server will wait idling before shutting \n    down. Zero means that the server will never shutdown.\n","tags":["eagerness_to_exit","loses_incremental_state"],"sources":[]},{"name":"output_base","short":"","type":"path","default":"default: see description","description":"    If set, specifies the output location to which all build output will be \n    written. Otherwise, the location will be ${OUTPUT_ROOT}/_blaze_${USER}\n    /${MD5_OF_WORKSPACE_ROOT}. Note: If you specify a different option from one \n    to the next Bazel invocation for this value, you'll likely start up a new, \n    additional Bazel server. Bazel starts exactly one server per specified \n    output base. Typically there is one output base per workspace - however, \n    with this option you may have multiple output bases per workspace and \n    thereby run multiple builds for the same client on the same machine \n    concurrently. See 'bazel help shutdown' on how to shutdown a Bazel server.\n","tags":["affects_outputs","loses_incremental_state"],"sources":[]},{"name":"output_user_root","short":"","type":"path","default":"default: see description","description":"    The user-specific directory beneath which all build outputs are written; by \n    default, this is a function of $USER, but by specifying a constant, build \n    outputs can be shared between collaborating users.\n","tags":["affects_outputs","loses_incremental_state"],"sources":[]},{"name":"server_jvm_out","short":"","type":"path","default":"default: see description","description":"    The location to write the server's JVM's output. If unset then defaults to \n    a location in output_base.\n","tags":["affects_outputs","loses_incremental_state"],"sources":[]},{"name":"shutdown_on_low_sys_mem","short":"","type":"boolean","default":"default: \"false\"","description":"    If max_idle_secs is set and the build server has been idle for a while, \n    shut down the server when the system is low on free RAM. Linux only.\n","tags":["eagerness_to_exit","loses_incremental_state"],"sources":[]},{"name":"system_rc","short":"","type":"boolean","default":"default: \"true\"","description":"    Whether or not to look for the system-wide bazelrc.\n","tags":["changes_inputs"],"sources":[]},{"name":"unlimit_coredumps","short":"","type":"boolean","default":"default: \"false\"","description":"    Raises the soft coredump limit to the hard limit to make coredumps of the \n    server (including the JVM) and the client possible under common conditions. \n    Stick this flag in your bazelrc once and forget about it so that you get \n    coredumps when you actually encounter a condition that triggers them.\n","tags":["bazel_internal_configuration"],"sources":[]},{"name":"watchfs","short":"","type":"boolean","default":"default: \"false\"","description":"    If true, bazel tries to use the operating system's file watch service \n    for local changes instead of scanning every file for a change.\n","tags":["deprecated"],"sources":[]},{"name":"workspace_rc","short":"","type":"boolean","default":"default: \"true\"","description":"    Whether or not to look for the workspace bazelrc file at $workspace/.bazelrc\n","tags":["changes_inputs"],"sources":[]},{"name":"incompatible_windows_style_arg_escaping","short":"","type":"boolean","default":"default: \"false\"","description":"    On Linux/macOS/non-Windows: no-op. On Windows: if true, then subprocess \n    arguments are escaped Windows-style. When false, the arguments are escaped \n    Bash-style. The Bash-style is buggy, the Windows-style is correct. See \n    https://github.com/bazelbuild/bazel/issues/7122\n","tags":["action_command_lines","execution","incompatible_change","\n      triggered_by_all_incompatible_changes"],"sources":[]},{"name":"host_jvm_args","short":"","type":"string","default":"may be used multiple times","description":"Flags to pass to the JVM executing Blaze.","tags":[],"sources":[]},{"name":"host_jvm_debug","short":"","type":"","default":"","description":"Convenience option to add some additional JVM startup flags, which cause the JVM to wait during startup until you connect from a JDWP-compliant debugger (like Eclipse) to port 5005.  Expands to: --host_jvm_args=-Xdebug --host_jvm_args=-Xrunjdwp:  transport=dt_socket,server=y,address=5005","tags":[],"sources":[]},{"name":"host_jvm_profile","short":"","type":"string","default":"default: \"\"","description":"Convenience option to add some profiler/debugger-specific JVM startup flags. Bazel has a list of known values that it maps to hard-coded JVM startup flags, possibly searching some hardcoded paths for certain files.","tags":[],"sources":[]},{"name":"server_javabase","short":"","type":"string","default":"default: \"\"","description":"Path to the JVM used to execute Bazel itself.","tags":[],"sources":[]}]